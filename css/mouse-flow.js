if (typeof mouseflow === 'undefined' && typeof mouseflowPlayback === 'undefined') {
    (function () {
        var _332 = false; var _346 = false; var _397 = []; var _426 = []; var _157 = 'https://app.mouseflow.com'; var _5 = new _812(window, _332, _346); _5._217 = []; _5._218 = []; _5._317 = []; _5._50 = '41c82cf8-8d24-4544-9b96-cc815cf59452'; function _447(_3, _113, _5, _24, _9, _243, _18, _159, _135, _420, _10) {
            var _892 = false; var _136 = 'https://o2.mouseflow.com/'; var _197 = 100.00000; var _139 = []; var _716 = []; var _224 = ["www.amrsoftec.com"]; var _616 = false; var _895 = false; var _884 = '2022-05-10 08:41:33'; var _231 = '17.64'; var _166 = false; var _659 = false; var _74 = false; var _201 = false; var _330 = false; var _643 = /\[(\d+)\]_mf$/; var _11 = _3.document; var _90 = _3.location; _667(); var _12 = _730(); var _0 = _583(); var _61 = { _547: 100, _694: 250, _693: 10000, _471: 1336, _410: 1800000, _854: 3600000, _910: 7776000000, _662: 100, _856: 2000, _642: 8000, _319: 2048 }; var _377, _378, _379, _215, _248, _216, _322, _310, _153, _414 = [], _419 = []; var _7 = { _291: 0, _287: 1, _289: 2, _268: 3, _299: 4, _298: 5, _297: 6, _193: 7, _418: 8, _294: 9, _226: 10, _465: 11, _464: 12, _263: 13, _656: 14, _81: 15, _937: 16, _932: 17, _100: 18, _427: 19, _689: 20, _367: 21, _331: 22, _300: 23, _336: 24, _345: 25, _339: 26, _340: 27, _341: 28, _507: 29, _343: 30, _506: 31, _328: 32, _292: 33, _592: 34, _196: 35, _474: 36, _488: 37, _55: 38, _432: 39, _684: 40, _212: 41, _93: 42 }; var _95 = { _589: { _19: 'bounce', _4: 2, _43: 1 }, _883: { _19: 'click-rage', _4: 5, _43: 2 }, _473: { _19: 'click-error', _4: 2, _43: 3 }, _452: { _19: 'mobility', _4: 3, _43: 4 }, _193: { _19: 'mouse-out', _4: 1, _43: 5 }, _587: { _19: 'speed-browsing', _4: 1, _43: 6 }, _196: { _19: 'submit-failure', _4: 3, _43: 7 } }; var _699 = /[\x20\r\n]+/g; var _700 = /(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@/; var _707 = /(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|6(?:011|5[0-9]{2})[0-9]{12}|(?:2131|1800|35\d{3})\d{11})/; var _698 = /^(onbeforeunload|onblur|onchange|onclick|onfocus|oninput|onkeydown|onkeypress|onkeyup|onload|onmousedown|onmouseenter|onmouseleave|onmousemove|onmouseout|onmouseover|onmouseup|onresize|onsubmit|ontouchcancel|ontouchend|ontouchenter|ontouchleave|ontouchmove|ontouchstart|onunload)$/; var _669 = /checkbox|radio|button|submit|file|image|reset/; function _569() { _3._mfq = [] } function _667() { if (!_3._mfq) _569(); for (var _45 = 0; _45 < _3._mfq.length; _45++) { var _51 = _3._mfq[_45]; if (_51 && _51.length && _51[0] === 'config') _5._333.apply(_5, _51.slice(1)) } } function _565(_313) { if (!_313) _313 = []; var _40 = this; _3.setTimeout(function () { for (var _45 = 0; _45 < _313.length; _45++)_40.push(_313[_45]) }, 1) } _565.prototype.push = function (_51) { if (!_51) return; try { if (typeof _51 === 'object' && _51.length) { mouseflow[_51.slice(0, 1)].apply(mouseflow, _51.slice(1)) } else if (typeof _51 === 'function') { _51(mouseflow) } } catch (error) { var _162 = 'Failed to execute item on action queue'; var _463 = _9._75(_51); if (_463) _162 += '\n' + _463; _162 += '\n' + error; _10(_162, _14()) } };
            // Copyright 2011 Google Inc.
            //
            // Licensed under the Apache License, Version 2.0 (the "License");
            // you may not use this file except in compliance with the License.
            // You may obtain a copy of the License at
            //
            //     http://www.apache.org/licenses/LICENSE-2.0
            //
            // Unless required by applicable law or agreed to in writing, software
            // distributed under the License is distributed on an "AS IS" BASIS,
            // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
            // See the License for the specific language governing permissions and
            // limitations under the License.
            //
            // This component contains modifications carried out by Mouseflow ApS.
            var __extends = this.__extends || function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; function __() { this.constructor = d } __.prototype = b.prototype; d.prototype = new __() }; var MutationObserverCtor; if (typeof WebKitMutationObserver !== 'undefined') MutationObserverCtor = WebKitMutationObserver; else if (typeof MutationObserver !== 'undefined') MutationObserverCtor = MutationObserver; if (MutationObserverCtor === undefined) { _10('DOM Mutation Observers not supported.', _14()) } var NodeMap = (function () { function NodeMap() { this.nodes = []; this.values = [] } NodeMap.prototype.isIndex = function (s) { return +s === s >>> 0 }; NodeMap.prototype.nodeId = function (node) { var id = node[NodeMap.ID_PROP]; if (!id) id = node[NodeMap.ID_PROP] = NodeMap.nextId_++; return id }; NodeMap.prototype.set = function (node, value) { var id = this.nodeId(node); this.nodes[id] = node; this.values[id] = value }; NodeMap.prototype.get = function (node) { var id = this.nodeId(node); return this.values[id] }; NodeMap.prototype.has = function (node) { return this.nodeId(node) in this.nodes }; NodeMap.prototype.deleteNode = function (node) { var id = this.nodeId(node); delete this.nodes[id]; this.values[id] = undefined }; NodeMap.prototype.keys = function () { var nodes = []; for (var id in this.nodes) { if (!this.isIndex(id)) continue; nodes.push(this.nodes[id]) } return nodes }; NodeMap.ID_PROP = '__mouseflow_node_map_id__'; NodeMap.nextId_ = 1; return NodeMap })(); var Movement; (function (Movement) { Movement[Movement['STAYED_OUT'] = 0] = 'STAYED_OUT'; Movement[Movement['ENTERED'] = 1] = 'ENTERED'; Movement[Movement['STAYED_IN'] = 2] = 'STAYED_IN'; Movement[Movement['REPARENTED'] = 3] = 'REPARENTED'; Movement[Movement['REORDERED'] = 4] = 'REORDERED'; Movement[Movement['EXITED'] = 5] = 'EXITED' })(Movement || (Movement = {})); function enteredOrExited(changeType) { return changeType === Movement.ENTERED || changeType === Movement.EXITED } var NodeChange = (function () { function NodeChange(node, childList, attributes, characterData, oldParentNode, added, attributeOldValues, characterDataOldValue) { if (childList === void 0) { childList = false } if (attributes === void 0) { attributes = false } if (characterData === void 0) { characterData = false } if (oldParentNode === void 0) { oldParentNode = null } if (added === void 0) { added = false } if (attributeOldValues === void 0) { attributeOldValues = null } if (characterDataOldValue === void 0) { characterDataOldValue = null } this.node = node; this.childList = childList; this.attributes = attributes; this.characterData = characterData; this.oldParentNode = oldParentNode; this.added = added; this.attributeOldValues = attributeOldValues; this.characterDataOldValue = characterDataOldValue; this.isCaseInsensitive = this.node.nodeType === 1 && this.node instanceof HTMLElement && typeof (HTMLDocument) !== 'undefined' && this.node.ownerDocument instanceof HTMLDocument } NodeChange.prototype.getAttributeOldValue = function (name) { if (!this.attributeOldValues) return undefined; if (this.isCaseInsensitive) name = name.toLowerCase(); return this.attributeOldValues[name] }; NodeChange.prototype.getAttributeNamesMutated = function () { var names = []; if (!this.attributeOldValues) return names; for (var name in this.attributeOldValues) { names.push(name) } return names }; NodeChange.prototype.attributeMutated = function (name, oldValue) { this.attributes = true; this.attributeOldValues = this.attributeOldValues || {}; if (name in this.attributeOldValues) return; this.attributeOldValues[name] = oldValue }; NodeChange.prototype.characterDataMutated = function (oldValue) { if (this.characterData) return; this.characterData = true; this.characterDataOldValue = oldValue }; NodeChange.prototype.removedFromParent = function (parent) { this.childList = true; if (this.added || this.oldParentNode) this.added = false; else this.oldParentNode = parent }; NodeChange.prototype.insertedIntoParent = function () { this.childList = true; this.added = true }; NodeChange.prototype.getOldParent = function () { if (this.childList) { if (this.oldParentNode) return this.oldParentNode; if (this.added) return null } return this.node.parentNode }; return NodeChange })(); var ChildListChange = (function () { function ChildListChange() { this.added = new NodeMap(); this.removed = new NodeMap(); this.maybeMoved = new NodeMap(); this.oldPrevious = new NodeMap(); this.moved = undefined } return ChildListChange })(); var TreeChanges = (function (_480) { __extends(TreeChanges, _480); function TreeChanges(rootNode, mutations) { _480.call(this); this.rootNode = rootNode; this.reachableCache = undefined; this.wasReachableCache = undefined; this.anyParentsChanged = false; this.anyAttributesChanged = false; this.anyCharacterDataChanged = false; for (var m = 0; m < mutations.length; m++) { var mutation = mutations[m]; switch (mutation.type) { case 'childList': this.anyParentsChanged = true; for (var i = 0; i < mutation.removedNodes.length; i++) { var node = mutation.removedNodes[i]; this.getChange(node).removedFromParent(mutation.target) } for (var i = 0; i < mutation.addedNodes.length; i++) { var node = mutation.addedNodes[i]; this.getChange(node).insertedIntoParent() } break; case 'attributes': this.anyAttributesChanged = true; var change = this.getChange(mutation.target); change.attributeMutated(mutation.attributeName, mutation.oldValue); break; case 'characterData': this.anyCharacterDataChanged = true; var change = this.getChange(mutation.target); change.characterDataMutated(mutation.oldValue); break } } } TreeChanges.prototype.getChange = function (node) { var change = this.get(node); if (!change) { change = new NodeChange(node); this.set(node, change) } return change }; TreeChanges.prototype.getOldParent = function (node) { var change = this.get(node); return change ? change.getOldParent() : node.parentNode }; TreeChanges.prototype.getIsReachable = function (node) { if (node === this.rootNode) return true; if (!node) return false; this.reachableCache = this.reachableCache || new NodeMap(); var isReachable = this.reachableCache.get(node); if (isReachable === undefined) { isReachable = this.getIsReachable(node.parentNode); this.reachableCache.set(node, isReachable) } return isReachable }; TreeChanges.prototype.getWasReachable = function (node) { if (node === this.rootNode) return true; if (!node) return false; this.wasReachableCache = this.wasReachableCache || new NodeMap(); var wasReachable = this.wasReachableCache.get(node); if (wasReachable === undefined) { wasReachable = this.getWasReachable(this.getOldParent(node)); this.wasReachableCache.set(node, wasReachable) } return wasReachable }; TreeChanges.prototype.reachabilityChange = function (node) { if (this.getIsReachable(node)) { return this.getWasReachable(node) ? Movement.STAYED_IN : Movement.ENTERED } return this.getWasReachable(node) ? Movement.EXITED : Movement.STAYED_OUT }; return TreeChanges })(NodeMap); var MutationProjection = (function () { function MutationProjection(rootNode, mutations, selectors, calcReordered, calcOldPreviousSibling) { this.rootNode = rootNode; this.mutations = mutations; this.selectors = selectors; this.calcReordered = calcReordered; this.calcOldPreviousSibling = calcOldPreviousSibling; this.treeChanges = new TreeChanges(rootNode, mutations); this.entered = []; this.exited = []; this.stayedIn = new NodeMap(); this.visited = new NodeMap(); this.childListChangeMap = undefined; this.characterDataOnly = undefined; this.matchCache = undefined; this.processMutations() } MutationProjection.prototype.processMutations = function () { if (!this.treeChanges.anyParentsChanged && !this.treeChanges.anyAttributesChanged) return; var changedNodes = this.treeChanges.keys(); for (var i = 0; i < changedNodes.length; i++) { this.visitNode(changedNodes[i], undefined) } }; MutationProjection.prototype.visitNode = function (node, parentReachable) { if (this.visited.has(node)) return; this.visited.set(node, true); var change = this.treeChanges.get(node); var reachable = parentReachable; if ((change && change.childList) || reachable == undefined) reachable = this.treeChanges.reachabilityChange(node); if (reachable === Movement.STAYED_OUT) return; this.matchabilityChange(node); if (reachable === Movement.ENTERED) { this.entered.push(node) } else if (reachable === Movement.EXITED) { this.exited.push(node); this.ensureHasOldPreviousSiblingIfNeeded(node) } else if (reachable === Movement.STAYED_IN) { var movement = Movement.STAYED_IN; if (change && change.childList) { if (change.oldParentNode !== node.parentNode) { movement = Movement.REPARENTED; this.ensureHasOldPreviousSiblingIfNeeded(node) } else if (this.calcReordered && this.wasReordered(node)) { movement = Movement.REORDERED } } this.stayedIn.set(node, movement) } if (reachable === Movement.STAYED_IN) return; for (var child = node.firstChild; child; child = child.nextSibling) { this.visitNode(child, reachable) } }; MutationProjection.prototype.ensureHasOldPreviousSiblingIfNeeded = function (node) { if (!this.calcOldPreviousSibling) return; this.processChildlistChanges(); var parentNode = node.parentNode; var nodeChange = this.treeChanges.get(node); if (nodeChange && nodeChange.oldParentNode) parentNode = nodeChange.oldParentNode; var change = this.childListChangeMap.get(parentNode); if (!change) { change = new ChildListChange(); this.childListChangeMap.set(parentNode, change) } if (!change.oldPrevious.has(node)) { change.oldPrevious.set(node, node.previousSibling) } }; MutationProjection.prototype.getChanged = function (summary, selectors, characterDataOnly) { this.selectors = selectors; this.characterDataOnly = characterDataOnly; for (var i = 0; i < this.entered.length; i++) { var node = this.entered[i]; var matchable = this.matchabilityChange(node); if (matchable === Movement.ENTERED || matchable === Movement.STAYED_IN) summary.added.push(node) } var stayedInNodes = this.stayedIn.keys(); for (var i = 0; i < stayedInNodes.length; i++) { var node = stayedInNodes[i]; var matchable = this.matchabilityChange(node); if (matchable === Movement.ENTERED) { summary.added.push(node) } else if (matchable === Movement.EXITED) { summary.removed.push(node) } else if (matchable === Movement.STAYED_IN && (summary.reparented || summary.reordered)) { var movement = this.stayedIn.get(node); if (summary.reparented && movement === Movement.REPARENTED) summary.reparented.push(node); else if (summary.reordered && movement === Movement.REORDERED) summary.reordered.push(node) } } for (var i = 0; i < this.exited.length; i++) { var node = this.exited[i]; var matchable = this.matchabilityChange(node); if (matchable === Movement.EXITED || matchable === Movement.STAYED_IN) summary.removed.push(node) } }; MutationProjection.prototype.getOldParentNode = function (node) { var change = this.treeChanges.get(node); if (change && change.childList) return change.oldParentNode ? change.oldParentNode : null; var reachabilityChange = this.treeChanges.reachabilityChange(node); if (reachabilityChange === Movement.STAYED_OUT || reachabilityChange === Movement.ENTERED) throw Error('getOldParentNode requested on invalid node.'); return node.parentNode }; MutationProjection.prototype.getOldPreviousSibling = function (node) { var parentNode = node.parentNode; var nodeChange = this.treeChanges.get(node); if (nodeChange && nodeChange.oldParentNode) parentNode = nodeChange.oldParentNode; var change = this.childListChangeMap.get(parentNode); if (!change) throw Error('getOldPreviousSibling requested on invalid node.'); return change.oldPrevious.get(node) }; MutationProjection.prototype.getOldAttribute = function (element, attrName) { var change = this.treeChanges.get(element); if (!change || !change.attributes) throw Error('getOldAttribute requested on invalid node.'); var value = change.getAttributeOldValue(attrName); if (value === undefined) throw Error('getOldAttribute requested for unchanged attribute name.'); return value }; MutationProjection.prototype.attributeChangedNodes = function (includeAttributes) { if (!this.treeChanges.anyAttributesChanged) return {}; var attributeFilter; var caseInsensitiveFilter; if (includeAttributes) { attributeFilter = {}; caseInsensitiveFilter = {}; for (var i = 0; i < includeAttributes.length; i++) { var attrName = includeAttributes[i]; attributeFilter[attrName] = true; caseInsensitiveFilter[attrName.toLowerCase()] = attrName } } var result = {}; var nodes = this.treeChanges.keys(); for (var i = 0; i < nodes.length; i++) { var node = nodes[i]; var change = this.treeChanges.get(node); if (!change.attributes) continue; if (Movement.STAYED_IN !== this.treeChanges.reachabilityChange(node) || Movement.STAYED_IN !== this.matchabilityChange(node)) { continue } var element = node; var changedAttrNames = change.getAttributeNamesMutated(); for (var j = 0; j < changedAttrNames.length; j++) { var attrName = changedAttrNames[j]; if (attributeFilter && !attributeFilter[attrName] && !(change.isCaseInsensitive && caseInsensitiveFilter[attrName])) { continue } var oldValue = change.getAttributeOldValue(attrName); if (oldValue === element.getAttribute(attrName)) continue; if (caseInsensitiveFilter && change.isCaseInsensitive) attrName = caseInsensitiveFilter[attrName]; result[attrName] = result[attrName] || []; result[attrName].push(element) } } return result }; MutationProjection.prototype.getOldCharacterData = function (node) { var change = this.treeChanges.get(node); if (!change || !change.characterData) throw Error('getOldCharacterData requested on invalid node.'); return change.characterDataOldValue }; MutationProjection.prototype.getCharacterDataChanged = function () { if (!this.treeChanges.anyCharacterDataChanged) return []; var nodes = this.treeChanges.keys(); var result = []; for (var i = 0; i < nodes.length; i++) { var target = nodes[i]; if (Movement.STAYED_IN !== this.treeChanges.reachabilityChange(target)) continue; var change = this.treeChanges.get(target); if (!change.characterData || target.textContent == change.characterDataOldValue) continue; result.push(target) } return result }; MutationProjection.prototype.computeMatchabilityChange = function (selector, el) { if (!this.matchCache) this.matchCache = []; if (!this.matchCache[selector.uid]) this.matchCache[selector.uid] = new NodeMap(); var cache = this.matchCache[selector.uid]; var result = cache.get(el); if (result === undefined) { result = selector.matchabilityChange(el, this.treeChanges.get(el)); cache.set(el, result) } return result }; MutationProjection.prototype.matchabilityChange = function (node) { var _40 = this; if (this.characterDataOnly) { switch (node.nodeType) { case 8: case 3: return Movement.STAYED_IN; default: return Movement.STAYED_OUT } } if (!this.selectors) return Movement.STAYED_IN; if (node.nodeType !== 1) return Movement.STAYED_OUT; var el = node; var matchChanges = this.selectors.map(function (selector) { return _40.computeMatchabilityChange(selector, el) }); var accum = Movement.STAYED_OUT; var i = 0; while (accum !== Movement.STAYED_IN && i < matchChanges.length) { switch (matchChanges[i]) { case Movement.STAYED_IN: accum = Movement.STAYED_IN; break; case Movement.ENTERED: if (accum === Movement.EXITED) accum = Movement.STAYED_IN; else accum = Movement.ENTERED; break; case Movement.EXITED: if (accum === Movement.ENTERED) accum = Movement.STAYED_IN; else accum = Movement.EXITED; break }i++ } return accum }; MutationProjection.prototype.getChildlistChange = function (el) { var change = this.childListChangeMap.get(el); if (!change) { change = new ChildListChange(); this.childListChangeMap.set(el, change) } return change }; MutationProjection.prototype.processChildlistChanges = function () { if (this.childListChangeMap) return; this.childListChangeMap = new NodeMap(); for (var i = 0; i < this.mutations.length; i++) { var mutation = this.mutations[i]; if (mutation.type != 'childList') continue; if (this.treeChanges.reachabilityChange(mutation.target) !== Movement.STAYED_IN && !this.calcOldPreviousSibling) continue; var change = this.getChildlistChange(mutation.target); var oldPrevious = mutation.previousSibling; function recordOldPrevious(node, previous) { if (!node || change.oldPrevious.has(node) || change.added.has(node) || change.maybeMoved.has(node)) return; if (previous && (change.added.has(previous) || change.maybeMoved.has(previous))) return; change.oldPrevious.set(node, previous) } for (var j = 0; j < mutation.removedNodes.length; j++) { var node = mutation.removedNodes[j]; recordOldPrevious(node, oldPrevious); if (change.added.has(node)) { change.added.deleteNode(node) } else { change.removed.set(node, true); change.maybeMoved.deleteNode(node) } oldPrevious = node } recordOldPrevious(mutation.nextSibling, oldPrevious); for (var j = 0; j < mutation.addedNodes.length; j++) { var node = mutation.addedNodes[j]; if (change.removed.has(node)) { change.removed.deleteNode(node); change.maybeMoved.set(node, true) } else { change.added.set(node, true) } } } }; MutationProjection.prototype.wasReordered = function (node) { if (!this.treeChanges.anyParentsChanged) return false; this.processChildlistChanges(); var parentNode = node.parentNode; var nodeChange = this.treeChanges.get(node); if (nodeChange && nodeChange.oldParentNode) parentNode = nodeChange.oldParentNode; var change = this.childListChangeMap.get(parentNode); if (!change) return false; if (change.moved) return change.moved.get(node); change.moved = new NodeMap(); var pendingMoveDecision = new NodeMap(); function isMoved(node) { if (!node) return false; if (!change.maybeMoved.has(node)) return false; var didMove = change.moved.get(node); if (didMove !== undefined) return didMove; if (pendingMoveDecision.has(node)) { didMove = true } else { pendingMoveDecision.set(node, true); didMove = getPrevious(node) !== getOldPrevious(node) } if (pendingMoveDecision.has(node)) { pendingMoveDecision.deleteNode(node); change.moved.set(node, didMove) } else { didMove = change.moved.get(node) } return didMove } var oldPreviousCache = new NodeMap(); function getOldPrevious(node) { var oldPrevious = oldPreviousCache.get(node); if (oldPrevious !== undefined) return oldPrevious; oldPrevious = change.oldPrevious.get(node); while (oldPrevious && (change.removed.has(oldPrevious) || isMoved(oldPrevious))) { oldPrevious = getOldPrevious(oldPrevious) } if (oldPrevious === undefined) oldPrevious = node.previousSibling; oldPreviousCache.set(node, oldPrevious); return oldPrevious } var previousCache = new NodeMap(); function getPrevious(node) { if (previousCache.has(node)) return previousCache.get(node); var previous = node.previousSibling; while (previous && (change.added.has(previous) || isMoved(previous))) previous = previous.previousSibling; previousCache.set(node, previous); return previous } change.maybeMoved.keys().forEach(isMoved); return change.moved.get(node) }; return MutationProjection })(); var Summary = (function () { function Summary(projection, query) { var _40 = this; this.projection = projection; this.added = []; this.removed = []; this.reparented = query.all || query.element || query.characterData ? [] : undefined; this.reordered = query.all ? [] : undefined; projection.getChanged(this, query.elementFilter, query.characterData); if (query.all || query.attribute || query.attributeList) { var filter = query.attribute ? [query.attribute] : query.attributeList; var attributeChanged = projection.attributeChangedNodes(filter); if (query.attribute) { this.valueChanged = attributeChanged[query.attribute] || [] } else { this.attributeChanged = attributeChanged; if (query.attributeList) { query.attributeList.forEach(function (attrName) { if (!_40.attributeChanged.hasOwnProperty(attrName)) _40.attributeChanged[attrName] = [] }) } } } if (query.all || query.characterData) { var characterDataChanged = projection.getCharacterDataChanged(); if (query.characterData) this.valueChanged = characterDataChanged; else this.characterDataChanged = characterDataChanged } if (this.reordered) this.getOldPreviousSibling = projection.getOldPreviousSibling.bind(projection) } Summary.prototype.getOldParentNode = function (node) { return this.projection.getOldParentNode(node) }; Summary.prototype.getOldAttribute = function (node, name) { return this.projection.getOldAttribute(node, name) }; Summary.prototype.getOldCharacterData = function (node) { return this.projection.getOldCharacterData(node) }; Summary.prototype.getOldPreviousSibling = function (node) { return this.projection.getOldPreviousSibling(node) }; return Summary })(); var validNameInitialChar = /[a-zA-Z_]+/; var validNameNonInitialChar = /[a-zA-Z0-9_\-]+/; function escapeQuotes(value) { return '"' + value.replace(/"/, '\\\"') + '"' } var Qualifier = (function () { function Qualifier() { } Qualifier.prototype.matches = function (oldValue) { if (oldValue === null) return false; if (this.attrValue === undefined) return true; if (!this.contains) return this.attrValue == oldValue; var tokens = oldValue.split(' '); for (var i = 0; i < tokens.length; i++) { if (this.attrValue === tokens[i]) return true } return false }; Qualifier.prototype.toString = function () { if (this.attrName === 'class' && this.contains) return '.' + this.attrValue; if (this.attrName === 'id' && !this.contains) return '#' + this.attrValue; if (this.contains) return '[' + this.attrName + '~=' + escapeQuotes(this.attrValue) + ']'; if ('attrValue' in this) return '[' + this.attrName + '=' + escapeQuotes(this.attrValue) + ']'; return '[' + this.attrName + ']' }; return Qualifier })(); var Selector = (function () { function Selector() { this.uid = Selector.nextUid++; this.qualifiers = [] } try { Object.defineProperty(Selector.prototype, 'caseInsensitiveTagName', { get: function () { return this.tagName.toUpperCase() }, enumerable: true, configurable: true }); Object.defineProperty(Selector.prototype, 'selectorString', { get: function () { return this.tagName + this.qualifiers.join('') }, enumerable: true, configurable: true }) } catch (e) { }; Selector.prototype.isMatching = function (el) { return el[Selector.matchesSelector](this.selectorString) }; Selector.prototype.wasMatching = function (el, change, isMatching) { if (!change || !change.attributes) return isMatching; var tagName = change.isCaseInsensitive ? this.caseInsensitiveTagName : this.tagName; if (tagName !== '*' && tagName !== el.tagName) return false; var attributeOldValues = []; var anyChanged = false; for (var i = 0; i < this.qualifiers.length; i++) { var qualifier = this.qualifiers[i]; var oldValue = change.getAttributeOldValue(qualifier.attrName); attributeOldValues.push(oldValue); anyChanged = anyChanged || (oldValue !== undefined) } if (!anyChanged) return isMatching; for (var i = 0; i < this.qualifiers.length; i++) { var qualifier = this.qualifiers[i]; var oldValue = attributeOldValues[i]; if (oldValue === undefined) oldValue = el.getAttribute(qualifier.attrName); if (!qualifier.matches(oldValue)) return false } return true }; Selector.prototype.matchabilityChange = function (el, change) { var isMatching = this.isMatching(el); if (isMatching) return this.wasMatching(el, change, isMatching) ? Movement.STAYED_IN : Movement.ENTERED; else return this.wasMatching(el, change, isMatching) ? Movement.EXITED : Movement.STAYED_OUT }; Selector.parseSelectors = function (input) { var selectors = []; var currentSelector; var currentQualifier; function newSelector() { if (currentSelector) { if (currentQualifier) { currentSelector.qualifiers.push(currentQualifier); currentQualifier = undefined } selectors.push(currentSelector) } currentSelector = new Selector() } function newQualifier() { if (currentQualifier) currentSelector.qualifiers.push(currentQualifier); currentQualifier = new Qualifier() } var WHITESPACE = /\s/; var valueQuoteChar; var SYNTAX_ERROR = 'Invalid or unsupported selector syntax.'; var SELECTOR = 1; var TAG_NAME = 2; var QUALIFIER = 3; var QUALIFIER_NAME_FIRST_CHAR = 4; var QUALIFIER_NAME = 5; var ATTR_NAME_FIRST_CHAR = 6; var ATTR_NAME = 7; var EQUIV_OR_ATTR_QUAL_END = 8; var EQUAL = 9; var ATTR_QUAL_END = 10; var VALUE_FIRST_CHAR = 11; var VALUE = 12; var QUOTED_VALUE = 13; var SELECTOR_SEPARATOR = 14; var state = SELECTOR; var i = 0; while (i < input.length) { var c = input[i++]; switch (state) { case SELECTOR: if (c.match(validNameInitialChar)) { newSelector(); currentSelector.tagName = c; state = TAG_NAME; break } if (c == '*') { newSelector(); currentSelector.tagName = '*'; state = QUALIFIER; break } if (c == '.') { newSelector(); newQualifier(); currentSelector.tagName = '*'; currentQualifier.attrName = 'class'; currentQualifier.contains = true; state = QUALIFIER_NAME_FIRST_CHAR; break } if (c == '#') { newSelector(); newQualifier(); currentSelector.tagName = '*'; currentQualifier.attrName = 'id'; state = QUALIFIER_NAME_FIRST_CHAR; break } if (c == '[') { newSelector(); newQualifier(); currentSelector.tagName = '*'; currentQualifier.attrName = ''; state = ATTR_NAME_FIRST_CHAR; break } if (c.match(WHITESPACE)) break; throw Error(SYNTAX_ERROR); case TAG_NAME: if (c.match(validNameNonInitialChar)) { currentSelector.tagName += c; break } if (c == '.') { newQualifier(); currentQualifier.attrName = 'class'; currentQualifier.contains = true; state = QUALIFIER_NAME_FIRST_CHAR; break } if (c == '#') { newQualifier(); currentQualifier.attrName = 'id'; state = QUALIFIER_NAME_FIRST_CHAR; break } if (c == '[') { newQualifier(); currentQualifier.attrName = ''; state = ATTR_NAME_FIRST_CHAR; break } if (c.match(WHITESPACE)) { state = SELECTOR_SEPARATOR; break } if (c == ',') { state = SELECTOR; break } throw Error(SYNTAX_ERROR); case QUALIFIER: if (c == '.') { newQualifier(); currentQualifier.attrName = 'class'; currentQualifier.contains = true; state = QUALIFIER_NAME_FIRST_CHAR; break } if (c == '#') { newQualifier(); currentQualifier.attrName = 'id'; state = QUALIFIER_NAME_FIRST_CHAR; break } if (c == '[') { newQualifier(); currentQualifier.attrName = ''; state = ATTR_NAME_FIRST_CHAR; break } if (c.match(WHITESPACE)) { state = SELECTOR_SEPARATOR; break } if (c == ',') { state = SELECTOR; break } throw Error(SYNTAX_ERROR); case QUALIFIER_NAME_FIRST_CHAR: if (c.match(validNameInitialChar)) { currentQualifier.attrValue = c; state = QUALIFIER_NAME; break } throw Error(SYNTAX_ERROR); case QUALIFIER_NAME: if (c.match(validNameNonInitialChar)) { currentQualifier.attrValue += c; break } if (c == '.') { newQualifier(); currentQualifier.attrName = 'class'; currentQualifier.contains = true; state = QUALIFIER_NAME_FIRST_CHAR; break } if (c == '#') { newQualifier(); currentQualifier.attrName = 'id'; state = QUALIFIER_NAME_FIRST_CHAR; break } if (c == '[') { newQualifier(); state = ATTR_NAME_FIRST_CHAR; break } if (c.match(WHITESPACE)) { state = SELECTOR_SEPARATOR; break } if (c == ',') { state = SELECTOR; break } throw Error(SYNTAX_ERROR); case ATTR_NAME_FIRST_CHAR: if (c.match(validNameInitialChar)) { currentQualifier.attrName = c; state = ATTR_NAME; break } if (c.match(WHITESPACE)) break; throw Error(SYNTAX_ERROR); case ATTR_NAME: if (c.match(validNameNonInitialChar)) { currentQualifier.attrName += c; break } if (c.match(WHITESPACE)) { state = EQUIV_OR_ATTR_QUAL_END; break } if (c == '~') { currentQualifier.contains = true; state = EQUAL; break } if (c == '=') { currentQualifier.attrValue = ''; state = VALUE_FIRST_CHAR; break } if (c == ']') { state = QUALIFIER; break } throw Error(SYNTAX_ERROR); case EQUIV_OR_ATTR_QUAL_END: if (c == '~') { currentQualifier.contains = true; state = EQUAL; break } if (c == '=') { currentQualifier.attrValue = ''; state = VALUE_FIRST_CHAR; break } if (c == ']') { state = QUALIFIER; break } if (c.match(WHITESPACE)) break; throw Error(SYNTAX_ERROR); case EQUAL: if (c == '=') { currentQualifier.attrValue = ''; state = VALUE_FIRST_CHAR; break } throw Error(SYNTAX_ERROR); case ATTR_QUAL_END: if (c == ']') { state = QUALIFIER; break } if (c.match(WHITESPACE)) break; throw Error(SYNTAX_ERROR); case VALUE_FIRST_CHAR: if (c.match(WHITESPACE)) break; if (c == '"' || c == "'") { valueQuoteChar = c; state = QUOTED_VALUE; break } currentQualifier.attrValue += c; state = VALUE; break; case VALUE: if (c.match(WHITESPACE)) { state = ATTR_QUAL_END; break } if (c == ']') { state = QUALIFIER; break } if (c == "'" || c == '"') throw Error(SYNTAX_ERROR); currentQualifier.attrValue += c; break; case QUOTED_VALUE: if (c == valueQuoteChar) { state = ATTR_QUAL_END; break } currentQualifier.attrValue += c; break; case SELECTOR_SEPARATOR: if (c.match(WHITESPACE)) break; if (c == ',') { state = SELECTOR; break } throw Error(SYNTAX_ERROR) } } switch (state) { case SELECTOR: case TAG_NAME: case QUALIFIER: case QUALIFIER_NAME: case SELECTOR_SEPARATOR: newSelector(); break; default: throw Error(SYNTAX_ERROR) }if (!selectors.length) throw Error(SYNTAX_ERROR); return selectors }; Selector.nextUid = 1; Selector.matchesSelector = (function () { var element = _11.createElement('div'); if (typeof element['webkitMatchesSelector'] === 'function') return 'webkitMatchesSelector'; if (typeof element['mozMatchesSelector'] === 'function') return 'mozMatchesSelector'; if (typeof element['msMatchesSelector'] === 'function') return 'msMatchesSelector'; return 'matchesSelector' })(); return Selector })(); var attributeFilterPattern = /^([a-zA-Z:_]+[a-zA-Z0-9_\-:\.]*)$/; function validateAttribute(attribute) { if (typeof attribute != 'string') throw Error('Invalid request opion. attribute must be a non-zero length string.'); attribute = attribute.trim(); if (!attribute) throw Error('Invalid request opion. attribute must be a non-zero length string.'); if (!attribute.match(attributeFilterPattern)) throw Error('Invalid request option. invalid attribute name: ' + attribute); return attribute } function validateElementAttributes(attribs) { if (!attribs.trim().length) throw Error('Invalid request option: elementAttributes must contain at least one attribute.'); var lowerAttributes = {}; var attributes = {}; var tokens = attribs.split(/\s+/); for (var i = 0; i < tokens.length; i++) { var name = tokens[i]; if (!name) continue; var name = validateAttribute(name); var nameLower = name.toLowerCase(); if (lowerAttributes[nameLower]) throw Error('Invalid request option: observing multiple case variations of the same attribute is not supported.'); attributes[name] = true; lowerAttributes[nameLower] = true } return Object.keys(attributes) } function elementFilterAttributes(selectors) { var attributes = {}; selectors.forEach(function (selector) { selector.qualifiers.forEach(function (qualifier) { attributes[qualifier.attrName] = true }) }); return Object.keys(attributes) } var MutationSummary = (function () { function MutationSummary(opts) { var _40 = this; this.connected = false; this.options = MutationSummary.validateOptions(opts); this.observerOptions = MutationSummary.createObserverOptions(this.options.queries); this.root = this.options.rootNode; this.callback = this.options.callback; this.elementFilter = Array.prototype.concat.apply([], this.options.queries.map(function (query) { return query.elementFilter ? query.elementFilter : [] })); if (!this.elementFilter.length) this.elementFilter = undefined; this.calcReordered = this.options.queries.some(function (query) { return query.all }); this.queryValidators = []; if (MutationSummary.createQueryValidator) { this.queryValidators = this.options.queries.map(function (query) { return MutationSummary.createQueryValidator(_40.root, query) }) } this.observer = MutationObserverCtor ? new MutationObserverCtor(function (mutations) { _40.observerCallback(mutations) }) : { observe: function () { } }; this.reconnect() } MutationSummary.createObserverOptions = function (queries) { var observerOptions = { childList: true, subtree: true }; var attributeFilter; function observeAttributes(attributes) { if (observerOptions.attributes && !attributeFilter) return; observerOptions.attributes = true; observerOptions.attributeOldValue = true; if (!attributes) { attributeFilter = undefined; return } attributeFilter = attributeFilter || {}; attributes.forEach(function (attribute) { attributeFilter[attribute] = true; attributeFilter[attribute.toLowerCase()] = true }) } queries.forEach(function (query) { if (query.characterData) { observerOptions.characterData = true; observerOptions.characterDataOldValue = true; return } if (query.all) { observeAttributes(); observerOptions.characterData = true; observerOptions.characterDataOldValue = true; return } if (query.attribute) { observeAttributes([query.attribute.trim()]); return } var attributes = elementFilterAttributes(query.elementFilter).concat(query.attributeList || []); if (attributes.length) observeAttributes(attributes) }); if (attributeFilter) observerOptions.attributeFilter = Object.keys(attributeFilter); return observerOptions }; MutationSummary.validateOptions = function (options) { for (var prop in options) { if (!(prop in MutationSummary.optionKeys)) throw Error('Invalid option: ' + prop) } if (typeof options.callback !== 'function') throw Error('Invalid options: callback is required and must be a function'); if (!options.queries || !options.queries.length) throw Error('Invalid options: queries must contain at least one query request object.'); var opts = { callback: options.callback, rootNode: options.rootNode || _11, observeOwnChanges: !!options.observeOwnChanges, oldPreviousSibling: !!options.oldPreviousSibling, queries: [] }; for (var i = 0; i < options.queries.length; i++) { var request = options.queries[i]; if (request.all) { if (Object.keys(request).length > 1) throw Error('Invalid request option. all has no options.'); opts.queries.push({ all: true }); continue } if ('attribute' in request) { var query = { attribute: validateAttribute(request.attribute) }; query.elementFilter = Selector.parseSelectors('*[' + query.attribute + ']'); if (Object.keys(request).length > 1) throw Error('Invalid request option. attribute has no options.'); opts.queries.push(query); continue } if ('element' in request) { var requestOptionCount = Object.keys(request).length; var query = { element: request.element, elementFilter: Selector.parseSelectors(request.element) }; if (request.hasOwnProperty('elementAttributes')) { query.attributeList = validateElementAttributes(request.elementAttributes); requestOptionCount-- } if (requestOptionCount > 1) throw Error('Invalid request option. element only allows elementAttributes option.'); opts.queries.push(query); continue } if (request.characterData) { if (Object.keys(request).length > 1) throw Error('Invalid request option. characterData has no options.'); opts.queries.push({ characterData: true }); continue } throw Error('Invalid request option. Unknown query request.') } return opts }; MutationSummary.prototype.createSummaries = function (mutations) { if (!mutations || !mutations.length) return []; var projection = new MutationProjection(this.root, mutations, this.elementFilter, this.calcReordered, this.options.oldPreviousSibling); var summaries = []; for (var i = 0; i < this.options.queries.length; i++) { summaries.push(new Summary(projection, this.options.queries[i])) } return summaries }; MutationSummary.prototype.checkpointQueryValidators = function () { this.queryValidators.forEach(function (validator) { if (validator) validator.recordPreviousState() }) }; MutationSummary.prototype.runQueryValidators = function (summaries) { this.queryValidators.forEach(function (validator, index) { if (validator) validator.validate(summaries[index]) }) }; MutationSummary.prototype.changesToReport = function (summaries) { return summaries.some(function (summary) { var summaryProps = ['added', 'removed', 'reordered', 'reparented', 'valueChanged', 'characterDataChanged']; if (summaryProps.some(function (prop) { return summary[prop] && summary[prop].length })) return true; if (summary.attributeChanged) { var attrNames = Object.keys(summary.attributeChanged); var attrsChanged = attrNames.some(function (attrName) { return !!summary.attributeChanged[attrName].length }); if (attrsChanged) return true } return false }) }; MutationSummary.prototype.observerCallback = function (mutations) { if (!this.options.observeOwnChanges) this.observer.disconnect(); var summaries = this.createSummaries(mutations); this.runQueryValidators(summaries); if (this.options.observeOwnChanges) this.checkpointQueryValidators(); if (this.changesToReport(summaries)) this.callback(summaries); if (!this.options.observeOwnChanges && this.connected) { this.checkpointQueryValidators(); this.observer.observe(this.root, this.observerOptions) } }; MutationSummary.prototype.reconnect = function () { if (this.connected) throw Error('Already connected'); this.observer.observe(this.root, this.observerOptions); this.connected = true; this.checkpointQueryValidators() }; MutationSummary.prototype.takeSummaries = function () { if (!this.connected) throw Error('Not connected'); var summaries = this.createSummaries(this.observer.takeRecords()); return this.changesToReport(summaries) ? summaries : undefined }; MutationSummary.prototype.disconnect = function () { var summaries = this.takeSummaries(); this.observer.disconnect(); this.connected = false; return summaries }; MutationSummary.NodeMap = NodeMap; MutationSummary.parseElementFilter = Selector.parseSelectors; MutationSummary.optionKeys = { 'callback': true, 'queries': true, 'rootNode': true, 'oldPreviousSibling': true, 'observeOwnChanges': true }; return MutationSummary })(); var TreeMirrorClient = (function () { function TreeMirrorClient(target, mirror, testingQueries) { var _40 = this; this.target = target; this.mirror = mirror; this.nextId = 1; this.knownNodes = new MutationSummary.NodeMap(); this.mutationSummaries = []; _392(); _403(); var serializedRoot = this.serializeNode(target, true); var rootId = serializedRoot.id; this.mirror.initialize(rootId, [serializedRoot]); var queries = [{ all: true }]; if (testingQueries) queries = queries.concat(testingQueries); this.mutationSummaries.push(new MutationSummary({ rootNode: target, callback: function (summaries) { _40.applyChanged(summaries) }, queries: queries })) } TreeMirrorClient.prototype.addShadowRoot = function (shadow) { if (!this.isKnownNode(shadow)) { var data = this.serializeNode(shadow, true); if (data) { data.parentNode = this.serializeNode(shadow.host); this.mirror.applyChanged({ removed: [], addedOrMoved: [data], attributes: [], text: [] }) } } var _40 = this; this.mutationSummaries.push(new MutationSummary({ rootNode: shadow, callback: function (summaries) { _40.applyChanged(summaries) }, queries: [{ all: true }] })) }; TreeMirrorClient.prototype.disconnect = function () { this.mutationSummaries.forEach(function (mutationSummary) { mutationSummary.disconnect() }); this.mutationSummaries = [] }; TreeMirrorClient.prototype.rememberNode = function (node) { var id = this.nextId++; this.knownNodes.set(node, id); return id }; TreeMirrorClient.prototype.forgetNode = function (node) { this.knownNodes.deleteNode(node) }; TreeMirrorClient.prototype.isKnownNode = function (node) { return !!this.knownNodes.get(node) }; TreeMirrorClient.prototype.serializeNode = function (node, isInitial) { if (node === null || _205(node, 'no-mouseflow-dom')) return null; if (_205(node, _286)) return null; var id = this.knownNodes.get(node); if (id !== undefined) { if (isInitial) return _10('Found duplicated node during initial DOM: ' + id, _14()); return { id: id } } var data = { nodeType: node.nodeType, id: this.rememberNode(node) }; if (_9._143(node, 'data-mf-replace') || _9._143(node, 'data-mf-replace-inner')) return null; var _466 = _542(node), _469 = !!_205(node.parentNode, _286); if (_466 || _469) { _10('CSS Blacklist blocked node. NodeType: ' + node.nodeType + '. ' + (node.nodeType === 1 ? 'Tag: ' + node.tagName : ''), _14()); _187(node, _286, true); if (isInitial && node.childNodes.length) { var _54; for (_54 = node.firstChild; _54; _54 = _54.nextSibling)this.serializeNode(_54, true) } if (_469) return null } if (isInitial) { if (_205(node.parentNode, 'no-mouseflow-dom') || _9._134(node, 'no-mouseflow-dom')) _187(node, 'no-mouseflow-dom', 'initial') } else if (_205(node.parentNode, 'no-mouseflow-dom')) { _187(node, 'no-mouseflow-dom', 'inherit'); return null } switch (data.nodeType) { case 9: case 11: if (isInitial) this.serializeChildNodes(node, data); this.serializeAdoptedStyleSheets(node, data); break; case 10: data.name = node.name; data.publicId = node.publicId; data.systemId = node.systemId; break; case 8: case 3: if (node.nodeType === 8 && node.textContent.indexOf('[if') !== 0 && node.textContent.indexOf('<![endif]') !== 0) break; data.textContent = _549(node).replace(_699, ' '); if (node.parentNode && node.parentNode.tagName === 'STYLE' && /^\s*$/.test(node.textContent)) { data.textContent = _271(node.parentNode.sheet) } break; case 1: if (node.tagName === 'IFRAME' && node.parentNode && node.parentNode.tagName === 'HEAD') { data.nodeType = 8; data.textContent = ''; break } data.tagName = node.tagName; if (node.attributes['data-mf-replace']) { var _222 = node.attributes['data-mf-replace'].value; data = _610.call(this, _222, function (_26) { var _15 = this.serializeNode(_26, true); _15.id = data.id; this.knownNodes.set(_26, _15.id); return _15 })[0]; break } if (node.tagName === 'SCRIPT') { if (/\/?aura_prod\.js(\?.+)?$/.test(node.src)) { _10('Salesforce Aura script added'); _870(); _867() } break } data.attributes = {}; if (_466) { var _517 = _635(node); if (node.id) data.attributes.id = node.id; if (node.name) data.attributes.name = node.name; data.attributes.style = (node.style ? node.style.cssText + '; ' : '') + 'width: ' + _517.width + 'px; height: ' + _517.height + 'px;' + (_3.getComputedStyle(node).display === 'inline' ? ' display: inline-block;' : ''); data.attributes.class = node.className + ' mf-excluded'; break } for (var i = 0; i < node.attributes.length; i++) { var attr = node.attributes[i]; if (_713(attr.name.toLowerCase())) continue; if (attr.name.toLowerCase() === 'value' && node.tagName === 'INPUT') data.attributes.value = _200(node); else data.attributes[attr.name] = attr.value } if (node.tagName === 'IFRAME' && node.offsetWidth <= 1 && node.offsetHeight <= 1) data.attributes.src = ''; if (isInitial && node.tagName === 'INPUT') { if (!data.attributes.value && node.value) data.attributes.value = _200(node); if (!data.attributes.checked && node.checked) data.attributes.checked = node.checked } if (isInitial && node.tagName === 'OPTION' && !data.attributes.selected && node.selected) data.attributes.selected = node.selected; if (node.tagName === 'INPUT' && node.type === 'hidden' && data.attributes.value) data.attributes.value = ''; if (node.attributes['data-mf-replace-inner']) { var _222 = node.attributes['data-mf-replace-inner'].value; data.childNodes = _610.call(this, _222, function (_26) { return this.serializeNode(_26, true) }); break } if (isInitial) { this.serializeChildNodes(node, data); if (node.shadowRoot) { if (!data.childNodes) data.childNodes = []; data.childNodes.push(this.serializeNode(node.shadowRoot, true)) } var cssDomain = node.tagName === 'LINK' ? node.href.split('/')[2] : '-1'; var cssGetAllowed = _11.domain.indexOf(cssDomain) !== -1; var _704 = node.tagName === 'LINK' && node.href && cssGetAllowed && (node.href.indexOf('blob:') === 0 || _5.enableCssRecording); var _690 = node.tagName === 'STYLE' && !node.textContent; var cssRules = _704 || _690 ? _271(node.sheet) : null; if (cssRules) { data.childNodes = [{ nodeType: 3, textContent: cssRules }]; data.tagName = 'STYLE'; data.href = undefined; data.rel = undefined } } break }return data }; TreeMirrorClient.prototype.serializeAddedAndMoved = function (added, reparented, reordered) { var _40 = this; var all = added.concat(reparented).concat(reordered); var parentMap = new MutationSummary.NodeMap(); all.forEach(function (node) { var parent = node.parentNode; var children = parentMap.get(parent); if (!children) { children = new MutationSummary.NodeMap(); parentMap.set(parent, children) } children.set(node, true) }); var moved = []; var noMouseflowDom = []; parentMap.keys().forEach(function (parent) { var children = parentMap.get(parent); var keys = children.keys(); while (keys.length) { var node = keys[0]; while (node.previousSibling && children.has(node.previousSibling)) node = node.previousSibling; var _180 = false; while (node && children.has(node)) { if (_541(node)) _180 = true; else if (_548(node.previousSibling)) _180 = false; if (!_180) { var data = _40.serializeNode(node); if (data) { var _261 = node.previousSibling; while (_261 && !data.previousSibling) { data.previousSibling = _40.serializeNode(_261); _261 = _261.previousSibling } data.parentNode = _40.serializeNode(node.parentNode); if (data.parentNode) moved.push(data) } if (_9._134(node, 'no-mouseflow-dom')) noMouseflowDom.push(node) } children.deleteNode(node); node = node.nextSibling } var keys = children.keys() } }); noMouseflowDom.forEach(function (node) { _187(node, 'no-mouseflow-dom', 'initial', true) }); return moved }; TreeMirrorClient.prototype.serializeAttributeChanges = function (attributeChanged) { var _40 = this; var map = new MutationSummary.NodeMap(); Object.keys(attributeChanged).forEach(function (attrName) { attributeChanged[attrName].forEach(function (element) { if (element.hasAttribute && element.hasAttribute('data-mf-replace') || _9._143(element, 'data-mf-replace') || _9._143(element, 'data-mf-replace-inner')) { return } if (_9._134(element, 'no-mouseflow-dom')) _187(element, 'no-mouseflow-dom', 'initial', true); var record = map.get(element); if (!record) { record = _40.serializeNode(element); if (record) { record.attributes = {}; map.set(element, record) } } if (record) { if (attrName.toLowerCase() === 'value' && element.tagName === 'INPUT') record.attributes.value = _200(element); else if (attrName === 'mf_adoptedStyleSheets') this.serializeAdoptedStyleSheets(element, record); else record.attributes[attrName] = element.getAttribute(attrName) } }) }); return map.keys().map(function (node) { return map.get(node) }) }; TreeMirrorClient.prototype.serializeTextChanges = function (textChanges) { var _40 = this; return textChanges.map(function (node) { var data = _40.serializeNode(node); if (data) { if (node.tagName === 'STYLE' && /^\s*$/.test(node.textContent)) data.textContent = _271(node.sheet); else data.textContent = _549(node) } return data }) }; TreeMirrorClient.prototype.applyChanged = function (summaries) { _392(); _403(); var summary = summaries[0];['removed', 'added', 'reparented', 'reordered', 'attributeChanged', 'characterDataChanged'].forEach(function (key) { if (!summary[key]) summary[key] = [] }); var _40 = this; var removed = summary.removed.map(function (node) { return _40.serializeNode(node) }); var moved = this.serializeAddedAndMoved(summary.added, summary.reparented, summary.reordered); var attributes = this.serializeAttributeChanges(summary.attributeChanged); var text = this.serializeTextChanges(summary.characterDataChanged); this.mirror.applyChanged({ removed: _270(removed), addedOrMoved: _270(moved), attributes: _270(attributes), text: _270(text) }); summary.removed.forEach(function (node) { _40.forgetNode(node) }) }; TreeMirrorClient.prototype.serializeChildNodes = function (node, data) { if (!node.childNodes.length) return; data.childNodes = []; var _180 = false; for (var child = node.firstChild; child; child = child.nextSibling) { if (_541(child)) _180 = true; else if (_548(child.previousSibling)) _180 = false; if (_180) continue; var serializedChild = this.serializeNode(child, true); if (serializedChild) { data.childNodes.push(serializedChild) } } }; TreeMirrorClient.prototype.serializeAdoptedStyleSheets = function (_26, _15) { if (!_26.adoptedStyleSheets) return; var _40 = this; _15.css = _26.adoptedStyleSheets.map(function (_107) { var _272 = { id: _40.knownNodes.get(_107) }; if (!_272.id) { _272.id = _40.rememberNode(_107); _272.text = _271(_107) } return _272 }) }; return TreeMirrorClient })(); function _270(_672) { return _672.filter(function (_184) { return _184 }) } function _392() { _414 = []; if (!_5._217.length) return; try { var _250 = _140(_5._217.join(','), _11); for (var i = 0; i < _250.length; i++) { _414.push(_250[i]) } } catch (e) { } } function _403() { _419 = []; if (!_5._218.length) return; try { var _250 = _140(_5._218.join(','), _11); for (var i = 0; i < _250.length; i++) { _419.push(_250[i]) } } catch (e) { } } function _140(_8, _32) { try { var _57 = []; _8.split(',').forEach(function (_8) { var _38 = _8.split(' > :document-fragment: > ', 1); _32.querySelectorAll(_38[0]).forEach(function (_1) { if (_38[1] && _1.shadowRoot) { _140(_38[1], _1.shadowRoot).forEach(function (_1) { _57.push(_1) }) } else { _57.push(_1) } }) }); return _57 } catch (_49) { _10('Could not get element from selector: ' + ex.message) } } function _610(_222, _709) { var _15 = []; var _325 = _11.createElement('div'); _325.innerHTML = _222; for (var i = 0; i < _325.childNodes.length; i++) { var _710 = _325.childNodes[i]; var _712 = _709.call(this, _710); _15.push(_712) } return _15 } function _541(_26) { return _26 && _26.nodeType === 8 && _26.textContent.trim().toLowerCase().indexOf('mouseflowexcludestart') === 0 } function _548(_26) { return _26 && _26.nodeType === 8 && _26.textContent.trim().toLowerCase().indexOf('mouseflowexcludeend') === 0 } function _713(_360) { return _698.test(_360) } function _271(_107) { var _189 = ''; try { if (!_107 || !_107.cssRules) return _189 } catch (e) { return _189 } for (var _2 = 0; _2 < _107.cssRules.length; _2++) { _189 += _107.cssRules[_2].cssText } return _189 } function _894() { _111({ _17: _136 + 'install?websiteId=' + _5._50, _152: function () { _10('Website installed signal sent.', _14()) }, _81: function () { _10('Error in transmitCrossDomain - could not signal that website was installed.', _14()) } }) } function _893(_158) { _111({ _17: _136 + 'config?websiteId=' + _5._50, _152: function (_73) { var _736 = _9._146(_73._421); _5.keyLogging = _736.enableKeystrokes; _10('Fetched recording script configuration.'); _158() }, _81: function () { _10('Error in transmitCrossDomain - could not fetch recording script configuration.'); _158() } }) } function _48() { if (_74) { _10('Recording script is already started', _14()); return } if (!_659) { _10('Recording not started - recording script is not initialized', _14()); return } _10('Recording starting, version ' + _231 + (_5.gdprEnabled ? ', GDPR mode enabled.' : ''), _14()); if (!_481()) return; _74 = true; _739(); _392(); _403(); _12._52 = _664(_0._468); if (_688()) _687(); _0._191 = _231; _721(_12._52) } function _721(_52) { var _593 = _901(); var _17 = _136 + 'init?v=' + _231 + '&p=' + _5._50 + '&s=' + _12._56 + '&page=' + _12._52 + '&ret=' + (_12._229 ? '1' : '0') + '&u=' + _12._151 + '&href={href}' + '&url=' + _72(_159._230()) + '&ref={referrer}' + '&title=' + _72(_11.title) + '&res=' + _3.screen.width + 'x' + _3.screen.height + '&tz=' + _679() + '&to=' + _12._439 + '&dnt=' + _12._514 + '&ori=' + (typeof _3.orientation != 'undefined' ? _3.orientation : '') + '&dw=' + _11.documentElement.clientWidth + '&dh=' + _11.documentElement.clientHeight + '&time=' + _845() + '&pxr=' + (typeof _3.devicePixelRatio != 'undefined' ? _3.devicePixelRatio : 1) + (_593.length > 0 ? '&fw=' + _593.join(',') : '') + '&gdpr=' + (_5.gdprEnabled ? 1 : 0); var _183 = _5.location.href; var _578 = _61._319 - _17.length - 6; if (_72(_183).length > _578) _183 = _183.split('#')[0]; if (_72(_183).length > _578) _183 = _183.split('?')[0]; _17 = _17.replace('{href}', _72(_183)); var _171 = _11.referrer; if (_17.replace('{referrer}', _72(_171)).length > _61._319) { if (_171.indexOf('?') > -1) _171 = _171.split('?')[0]; if (_17.replace('{referrer}', _72(_171)).length > _61._319) _171 = '' } _17 = _17.replace('{referrer}', _72(_171)); _902(); var _563 = _675(_61._319 - _17.length - 6); _17 += _677(_563); _111({ _17: _17, _152: function (_73) { if (_73._421 === 'Recording blocked') { _10('Recording not started - mf_block cookie set to 1', _14()); return } _563.forEach(function (_120) { _660(_120.key, _120.value) }); _201 = true; _680(_52); _135._48(_12, _0, _430, _100, _543, _422, _10); _3._mfq = new _565(_3._mfq); _723(); _724() }, _857: true, _81: function () { _10('Error in transmitCrossDomain - recording not starting.', _14()) } }); if (_0._249) { if (_0._249 !== _122(_5.path || _5.location.pathname)) _422(); _0._249 = null } _685(); _0._84 = { x: _3.pageXOffset, y: _3.pageYOffset }; if (_0._84.x !== 0 && _0._84.y !== 0) _504(); _0._258 = 1; _337(); _10('Recording started. Session: ' + _12._56 + ', Page: ' + _12._52 + ', Last page: ' + _12._407, _14()) } function _688() { return !_12._56 || !_718() || (_0._191 && _0._191 !== '0' && _0._191 !== _231) || (+new Date() - _0._273) > _61._410 } function _687() { _10('Starting new session'); var _686 = _12._56; _12._56 = _380(); _0._137 = []; _12._221 = 0; if (_12._56 === _686) throw Error('New session ID is identical to the old session ID. This might be because Math.random has been overwritten.') } function _68(_681) { if (!_74) return; _166 = false; _498(); _569(); _24._167(_377); _24._167(_378); _24._167(_379); _24._115(_215); if (_216) { _24._115(_216); _537() } if (_248) { _24._115(_248); _566() } _703(); if (!_681) _27(_7._689, {}); _293(); _201 = false; try { _153.disconnect() } catch (e) { } _135._68(); _337(); _0 = _583(); _10('Recording stopped', _14()); _74 = false; _330 = false } function _540(_28, _90) { _5._791(); if (_74) { _68() } _5.htmlDelay = _5.newPageViewHtmlDelay; if (_28) _5.path = _28.toString(); if (_90) _5.location = _90; _48(); _382(0) } function _905() { _68(); _912('mf_' + _5._50); if (_3.name && ((_3.name.length === 35 && _3.name.indexOf('mf_') === 0) || (_5.crossDomainSupport && _3.name.indexOf('mf_' + _5._50) === 0))) _3.name = '' } function _680(_52) { if (_5.htmlFetchMode === 'post') { _24._59(function () { _678(_52) }, _5.htmlDelay) } else { _10('Html not sent due to mouseflowHtmlFecthMode setting', _14()) } } function _678(_52) { _153 = new TreeMirrorClient(_11, { initialize: function (rootId, children) { if (_52 !== _12._52) return; _166 = true; _885({ data: { f: 'initialize', args: [rootId, children] } }, _11.documentElement.innerHTML.length) }, applyChanged: function (summary) { if (_14() - _0._359 < 30000) { if (summary.removed.length || summary.addedOrMoved.length || summary.attributes.length || summary.text.length) { _887({ data: { f: 'applyChanged', args: [summary.removed, summary.addedOrMoved, summary.attributes, summary.text] } }) } } } }) } function _907(_23, _4, _676, _571) { if (!_74 || !_23) return; _4 = _4 || ''; if (!_660(_23, _4)) { _10('Variable already set to same value, not triggering callback.', _14()); return } var _15 = { key: _23.toString(), value: _4.toString() || '', scope: _676 || 'session', overwrite: _571 === undefined ? true : _571 }; _0._116.push(_15); _24._115(_248); _248 = _24._59(_566, 1000) } function _675(limit) { if (!_3._mfq.length) return []; var _116 = []; var _575 = 0; for (var _45 = 0; _45 < _3._mfq.length; _45++) { var _51 = _3._mfq[_45]; if (!_51 || !_51.length || _51[0] !== 'setVariable') continue; if ((_51.length > 3 && _51[3] !== 'session') || (_51.length > 4 && _51[4] !== true)) continue; var _23 = _51[1]; var _4 = _51[2]; if (!_23 || !_4) continue; if (_647(_23) !== -1) continue; var _671 = _72(_23) + '=' + _72(_4); _575 += _671.length + 1; if (_575 - 1 >= limit) break; _116.push({ key: _23, value: _4 }); _3._mfq.splice(_45, 1); _45-- } return _116 } function _677(_116) { var _568 = _116.map(function (_120) { return _72(_120.key) + '=' + _72(_120.value) }).join('&'); return _568 ? '&vars=' + _72(_568) : '' } function _566() { _248 = 0; for (var _2 = 0; _2 < _0._116.length; _2++) { var _120 = _0._116[_2]; _10('Setting custom variable: ' + _120.key + ' = ' + _120.value + ', overwrite: ' + (_120.overwrite === undefined ? true : _120.overwrite), _14()) } _430('variable', _0._116); _0._116 = [] } function _100(_670) { _27(_7._100, { target: _670 }) } function _906() { _27(_7._100, { target: '*' }) } function _908(_738) { if (_5.gdprEnabled) _10('User identification not allowed (script in GDPR mode)', _14()); else if (!_74) _430('identify', { userId: _12._151, userName: _738 }) } function _543(_37) { if (!_74) return; _10('Registering form submit attempt on this page', _14()); _445(_37) } function _422(_37) { if (!_74) return; var _417 = _14(); if (_0._156 || _417 > 5000) { _10('Registering form submit success on this page', _14()); if (!_0._156) _27(_7._263, { target: _37 }); _27(_7._592, {}); _0._156 = undefined } else { _10('Registering form submit success on previous page', _14()); _408([{ _20: _7._592 }]) } } function _838(_37) { if (!_74) return; var _417 = _14(); if (_0._156 || _417 > 5000) { _10('Registering form submit failure on this page', _14()); if (!_0._156) _27(_7._263, { target: _37 }); _27(_7._196, {}); _145(_95._196); _0._156 = undefined } else { _10('Registering form submit failure on previous page', _14()); _408([{ _20: _7._196 }, { _20: _7._93, _22: { x: _95._196._4, y: 0 } }, { _20: _7._100, _22: { target: _95._196._19 } }]) } } function _445(_37) { if (!_74 || !_37 || _265(_371(_37))) return; if ((+new Date()) - _0._560 < 20) return; _0._560 = +new Date(); _27(_7._263, { target: _37 }); if (!_0._405[_37]) { _0._405[_37] = _373(_37) } else { _735(_37, _373(_37), _0._405[_37]) } _728(_37); _734(_37); _0._156 = +new Date() } function _145(_93, _42) { if (!_74 || !_93) return; var _4 = +_93._4; if (!_4) return; var _19 = _93._19; if (_19) { if (_0._559.indexOf(_19) !== -1) return; _0._559.push(_19) } else { _19 = 'custom-friction' + (_93._545 ? ('-' + _93._545) : '') } var _722 = { value: _19, target: _42 ? _42 : '', x: _4 > 0 ? _4 : 0, y: _4 < 0 ? _4 * -1 : 0 }; _27(_7._93, _722) } function _723() { if (_12._87.length < 2) return; var _202 = _12._87[_12._87.length - 2]; var _242 = _12._87[_12._87.length - 1]; var _176 = _122(_5.path || _5.location.pathname); if (_202._176 === _176 && _202._176 !== _242._176 && _0._85 - _242._85 < 10000) { _408([{ _20: _7._93, _22: { x: _95._589._4, y: 0 } }, { _20: _7._100, _22: { target: _95._589._19 } }]) } } function _724() { if (_12._87.length < 4) return; var _588 = _12._87[_12._87.length - 5]; var _202 = _12._87[_12._87.length - 4]; if (_0._85 - _202._85 < 30000) { if (_588 && _202._85 - _588._85 < 30000) return; _487(_202._43, [{ _20: _7._93, _22: { x: _95._587._4, y: 0 } }, { _20: _7._100, _22: { target: _95._587._19 } }]) } } function _411() { if (!_74) return; _135._411.apply(_135, arguments) } function _730() { return { _56: '', _52: '', _151: '', _229: false, _439: +('ontouchstart' in _3 && _5.touchEvents), _514: (navigator.doNotTrack === 'yes' || navigator.doNotTrack == 1 || window.doNotTrack == 1 || navigator.msDoNotTrack == 1) ? 1 : 0, _221: 0, _407: '', _87: [], _241: [], _290: _731(), _141: null } } function _731() { try { _3.sessionStorage.setItem('mf_supportsSessionStorage', '1'); var _732 = _3.sessionStorage.getItem('mf_supportsSessionStorage') === '1'; _3.sessionStorage.removeItem('mf_supportsSessionStorage'); return _732 } catch (e) { return false } } function _583() { return { _468: new Date(), _85: +new Date(), _213: +new Date(), _273: +new Date(), _15: [], _260: [], _39: [], _227: [], _617: [], _149: [], _126: [], _515: 0, _490: 0, _165: 0, _489: '', _560: 0, _232: [], _160: [], _244: [], _559: [], _128: { x: 0, y: 0 }, _461: { x: 0, y: 0 }, _502: { x: 0, y: 0 }, _601: -100, _84: { x: 0, y: 0 }, _256: { x: 0, y: 0 }, _199: {}, _320: -100, _327: -100, _155: { x: 0, y: 0 }, _395: [], _913: 0, _181: [], _116: [], _258: 1, _359: 0, _478: 0, _405: {}, _137: [], _492: 0, _491: 0, _516: 0, _241: [], _238: 0, _169: 0, _131: null, _127: _715(), _639: 0, _363: false, _191: 0, _619: false, _450: false } } function _373(_37) { var _179 = _371(_37); var _33 = {}; if (!_179) { _10('Form not found: ' + _37, _14()); return _33 } for (var i = 0; i < _179.elements.length; i++) { var _6 = _179.elements[i]; var _19 = _6.name; if (!_19 || _19 == '') continue; if (_6.tagName && /input|select|button|textarea/.test(_6.tagName.toLowerCase()) && (!_6.type || !/hidden|submit|reset|image|button/.test(_6.type.toLowerCase()))) { var _4 = _252(_6); if (!_33[_19]) _33[_19] = _4; else if (_4 && _4 != '') _33[_19] += ', ' + _4 } } return _33 } function _734(_37) { var _179 = _371(_37); if (!_179 || !_12._290) return; var _2, _58; for (_2 = 0; _2 < _179.elements.length; _2++) { var _6 = _179.elements[_2]; if (_6.tagName && /input|textarea/.test(_6.tagName.toLowerCase()) && (!_6.type || !/hidden|submit|reset|image|file|button|password/.test(_6.type.toLowerCase()))) { var _4 = _252(_6); if (!_4 || _4.length <= 3 || _636(_6) || _334(_6)) continue; var _94 = _529(_4); if (_94.length === 0) continue; var _173 = []; for (_58 = 0; _58 < _94.length; _58++) { _173.push(_94[_58]._98) } var _172 = false; for (_58 = 0; _58 < _0._127.length; _58++) { var _237 = _0._127[_58]; _172 = _173.length === _237.length && _521(_237, _173) === 0; if (_172) break } if (!_172) _0._127.push(_173) } } if (_0._127.length) { _0._127 = _0._127.slice(-100); _737(_0._127) } } function _737(_39) { try { _3.localStorage.setItem('mf_replaceHashes', _9._75(_39)) } catch (e) { } } function _715() { try { return _9._146(_3.localStorage.getItem('mf_replaceHashes')) || [] } catch (e) { return [] } } function _706(_4) { if (_0._127.length === 0) return _4; var _94 = _529(_4); for (var _2 = 0; _2 < _0._127.length; _2++) { var _237 = _0._127[_2]; var _177; do { var _109 = _177 !== undefined ? _177 + 1 : 0; _177 = _521(_94, _237, _109); if (_177 !== -1) { var _48 = _94[_177]._48; var _190 = _94[_177 + _237.length - 1]._190; var _702 = _904('*', _190 - _48); _4 = _4.slice(0, _48) + _702 + _4.slice(_190) } } while (_177 !== -1) } return _4 } function _529(_4) { var _173 = []; var _48; function _523(_190) { if (_48 === undefined) return; var _525 = _4.slice(_48, _190); _173.push({ _48: _48, _190: _48 + _525.length, _98: _122(_525) }); _48 = undefined } for (var _2 = 0; _2 < _4.length; _2++) { var _335 = _4[_2]; if (_903(_335)) { if (_48 === undefined) { _48 = _2 } } else { _523(_2) } } _523(); return _173 } function _521(_186, _94, _109) { for (var _2 = _109 || 0; _2 < _186.length; _2++) { if (_2 + _94.length > _186.length) break; if (_697(_186, _94, _2)) return _2 } return -1 } function _697(_186, _94, _109) { var _172 = false; for (var _2 = _109 || 0, _58 = 0; _2 < _186.length && _58 < _94.length; _2++, _58++) { _172 = _186[_2]._98 === _94[_58]; if (!_172) break } return _172 } function _252(_1) { var _4 = ''; if (_1.type && /radio|checkbox/.test(_1.type.toLowerCase())) _4 = _1.checked ? _1.value : ''; else if (_1.tagName && /select/.test(_1.tagName.toLowerCase()) && _1.options) for (var j = 0; j < _1.options.length; j++) { var _436 = _1.options[j].selected ? _1.options[j].value : ''; if (_436 && _436 != '') _4 += (_4 && _4 != '' ? ',' : '') + _436 } else _4 = _1.value; return _4 || '' } function _200(_1) { if (_1.type === 'password') return '*'; var _4 = _252(_1); if (_609(_1)) { _4 = _4.replace(/./g, _606(_1.type)) } else if (_602(_1) && !_334(_1)) { _4 = _4.slice(0, 2) + _4.slice(2).replace(/./g, _606(_1.type)) } return _4 } function _549(_1) { var _206 = _1.textContent; if (_1.nodeType === 3 && _1.parentNode) _1 = _1.parentNode; var _544 = _706(_206); if (_544 !== _206 && _5.replaceLastFormValues) _206 = _544; if (_711(_1)) _206 = _206.replace(/./g, '*'); return _206 } function _334(_1) { return _9._134(_1, 'mouseflow') || _419.indexOf(_1) !== -1 } function _265(_1) { if (!_1) return false; if (_1[NodeMap.ID_PROP]) return !!_205(_1, _286); while (_1) { if (_542(_1)) return true; _1 = _1.parentNode } return false } function _542(_1) { return _414.indexOf(_1) !== -1 } function _661(_1) { return _9._134(_1, 'no-mouseflow') || (!_5.keyLogging && !_334(_1)) || _265(_1) } function _609(_1) { return (_661(_1) || _636(_1) || _708(_1)) && _603(_1) && !_669.test(_1.type) } function _711(_1) { return (_1.isContentEditable || _1.tagName === 'TEXTAREA') && _661(_1) } function _708(_1) { return _5.gdprEnabled && (_701(_1) || _696(_1)) } function _636(_1) { return _1.maxLength === 16 || _374(_1.value) } function _374(_4) { return _707.test(_4) } function _701(_1) { return /email/i.test(_1.type) || _700.test(_1.value) } function _696(_1) { return /tel/i.test(_1.type) } function _602(_1) { return _603(_1) && /^\d{3}[^a-z]*$/i.test(_1.value) } function _603(_1) { return _1.tagName === 'INPUT' || _1.tagName === 'TEXTAREA' } function _606(_695) { return /number/i.test(_695) ? '0' : '*' } function _683(_46) { return _609(_46.target) || _602(_46.target) ? '191' : (_46.which && _46.which.toString()) || '' } function _682(_1) { var _631 = _66(_1); var _296 = _0._617[_631]; var _278 = _200(_1); var _33 = _278; if (_296 && _296.length > 3 && _278.indexOf(_296) === 0) _33 = '+||' + _278.substring(_296.length); _0._617[_631] = _278; return _33 } function _735(_37, _361, _358) { try { var _239 = []; for (var _63 in _361) { if (typeof _358[_63] == 'undefined' || _361[_63] != _358[_63]) _239.push(_63) } for (var _63 in _358) { if (typeof _361[_63] == 'undefined' && _239.indexOf(_63) === -1) _239.push(_63) } for (var i = 0; i < _239.length; i++) { _27(_7._488, { target: _37 + '||' + _239[i] }) } } catch (_49) { _10('Error in _addChangedFieldEvents: ' + _49.message, _14()) } } function _728(_37) { try { var _255 = _726(_37); for (var i = 0; i < _255.length; i++) { _27(_7._474, { target: _37 + '||' + _255[i] }) } } catch (_49) { _10('Error in getBlankFields: ' + _49.message, _14()) } } function _726(_37) { var _255 = []; var _39 = _373(_37); for (var _63 in _39) if (_39[_63] == '') _255.push(_63); return _255 } function _371(_37) { for (var j = 0; j < _11.forms.length; j++)if (_66(_11.forms[j]) == _37) { return _11.forms[j] } return null } function _714() { _717(); _665() } function _337() { _668(); _477() } function _717() { var _657 = _624('mf_user').split('|'); for (var _2 = 0; _2 < _657.length; _2++) { var _79 = _657[_2]; switch (_2) { case 0: _12._151 = _79; break; case 1: _12._241 = _79 !== '' ? _79.split(/[$,]+/) : []; break } } _12._229 = _12._151 !== ''; if (_12._151 === '' || _12._151 === '1') _12._151 = _380(); _0._619 = true } function _668() { if (!_0._619) return; _625('mf_user', [_12._151, _12._241.join('$')].join('|'), 1, _357(_90)) } function _665() { var _655 = _624('mf_' + _5._50).split('|'); for (var _2 = 0; _2 < _655.length; _2++) { var _79 = _655[_2]; switch (_2) { case 0: _12._56 = _79; break; case 1: _12._87 = _663(_79, _12._52); break; case 2: _0._273 = parseInt(_79, 10); break; case 3: _0._137 = _79 !== '' ? _79.split('.') : []; break; case 4: _12._221 = parseInt(_79, 10); break; case 5: _0._249 = _79; break; case 6: _0._241 = _79 !== '' ? _79.split(/[$,]+/) : []; break; case 7: _12._229 = _79 === '1'; break; case 8: _0._191 = _79; break; case 9: _12._141 = parseFloat(_79); break } } if (!_12._56) _12._56 = _5.sessionId || _673(); if (!_12._141) _12._141 = _674(); var _242 = _12._87[_12._87.length - 1]; if (_242) _12._407 = _242._43; _0._450 = true } function _673() { var sessionId = _444(); return sessionId && sessionId.length === 32 ? sessionId : null } function _674() { var recordingRate = _444(); return /^\d+\.\d+$/.test(recordingRate) ? parseFloat(recordingRate) : null } function _444() { return _5.crossDomainSupport && _3.name && _3.name.indexOf('mf_' + _5._50) === 0 ? _3.name.split('=')[1] : null } function _477() { if (!_0._450) return; _625('mf_' + _5._50, [_12._56, _692(), _0._273, _0._137.join('.'), _12._221, _0._249 || '', _0._241.join('$'), _12._229 ? '1' : '0', _0._191, _12._141].join('|'), 0, _357(_90)); if (_5.crossDomainSupport) _3.name = 'mf_' + _5._50 + '=' + (_12._56 || _12._141) } function _663(_4, _52) { return _4.split(/[$,]+/).map(function (_240) { var _39 = _240.split('.'); return { _43: _39[0], _176: _39[1], _85: +_39[2] } }).filter(function (p) { return p._43 !== _52 }).slice(-5) } function _692() { return _12._87.concat([{ _43: _12._52, _176: _122(_5.path || _5.location.pathname), _85: _0._85 }]).slice(-6).map(function (_240) { return _240._43 + '.' + _240._176 + '.' + _240._85 }).join('$') } var _264 = '__mouseflow_properties__'; var _286 = 'is-blacklisted'; function _205(_26, _23) { if (!_26) return null; var _185 = _26[_264]; return _185 ? _185[_23] : null } function _187(_26, _23, _4, _705) { var _185 = _26[_264]; if (!_185) _185 = _26[_264] = {}; _185[_23] = _4; if (_705 && _26.childNodes && _26.childNodes.length) { for (var _54 = _26.firstChild; _54; _54 = _54.nextSibling) { _187(_54, _23, _4, true) } } } function _467(_26) { delete _26[_264]; if (_26.childNodes && _26.childNodes.length) { for (var _54 = _26.firstChild; _54; _54 = _54.nextSibling) { _467(_54) } } } function _703() { _467(_3.document.body) } function _739() { _0._85 = +new Date(); _0._213 = +new Date(); _377 = _24._282(_504, _61._547); _378 = _24._282(_853, _61._694); _379 = _24._282(_427, _61._693); _215 = _24._59(_652, _61._410) } function _891() { if (!_644(_5.location.hostname)) return false; if (_604()) { _10('Recording not started - browser is IE8 or older'); return false } return _481() } function _481() { _714(); if (_5.forceStart) return true; if (_720()) { _10('Recording not started - session ID is invalid.', _14()); return false } if (_725()) { _10('Recording not started - honored "do not track" browser setting.', _14()); return false } if (_719()) { _10('Recording not started - the browser was identified as a bot.', _14()); return false } if (!_243._424(_139)) { _10('Recording not started - page does not match page rules', _14()); return false } var _307 = _716.filter(function (_64) { return _243._161(_64) }).sort(_733)[0]; if (_307) { _197 = _307._197; _10('Recording rate set from page recording rule: ' + _307._20 + ', "' + _307._4 + '"', _14()) } if (!_12._141) _12._141 = _727(); var _476 = _12._56 || _12._141 <= _197; if (!_476) _10('Recording not started - recordingRate or blocked', _14()); _477(); return _476 } function _733(_729, _691) { return _691._197 - _729._197 } function _727() { return _113.round(_113.random() * 10000000) / 100000 } function _725() { return _5.honorDoNotTrack && _12._514 } function _720() { return _12._56 && _12._56.length != 32 } function _719() { if (_5.enableBots) return false; return _3.navigator.webdriver || /ptst|headlesschrome|lighthouse/i.test(_3.navigator.userAgent) } function _718() { return (_12._221 < _61._662) } function _664(_101) { return _314(_101.getMonth() + 1, 2) + _314(_101.getDate(), 2) + _314(_101.getSeconds(), 2) + _314(_101.getMilliseconds(), 3).slice(1) + _380() } function _314(_666, _262) { return (new Array(_262 + 1).join('0') + _666).slice(-_262) } function _679() { var _462 = new Date(); return _113.max(new Date(_462.getFullYear(), 0, 1).getTimezoneOffset(), new Date(_462.getFullYear(), 6, 1).getTimezoneOffset()) } var _453 = false; function _685() { try { _352(_11); _18._25(_11, 'mousemove', function (_6) { _0._128 = { x: _6.pageX, y: _6.pageY } }, { _34: true }); _18._25(_11.documentElement, 'mouseleave', function () { _27(_7._684, {}); _145(_95._193) }, { _34: true, _208: true }); _18._25(_11, 'mousedown', function (_6) { _880(_6, _6.target) }, { _34: true }); _18._25(_11, 'mouseup', function (_6) { _881(_6, _6.target) }, { _34: true }); _18._25(_11, 'click', 'a,input,select,button,.mf-listen-click', function (_6) { _882(_6, _6.delegatedTarget || _6.target) }, { _34: true, _584: true }); try { var _362 = _840(); if (_362) { _18._25(_11, 'mouseenter', _362, function (_6) { _27(_7._297, { x: _6.pageX, y: _6.pageY, target: _66(_6.target) }) }, { _34: true, _208: true }); _18._25(_11, 'mouseleave', _362, function (_6) { _27(_7._193, { x: _6.pageX, y: _6.pageY, target: _66(_6.target) }) }, { _34: true, _208: true }) } } catch (_49) { _10('Error in getHoverSelectors: ' + _49.message, _14()) } _18._25(_11, 'focus', 'input,textarea,select,button', function (_6) { _27(_7._465, { target: _66(_6.target) }) }, { _34: true }); _18._25(_11, 'blur', 'input,textarea,select,button', function (_6) { _27(_7._464, { target: _66(_6.target) }) }, { _34: true }); _18._25(_11, 'keypress', 'input,textarea,select', function (_6) { if (_6.target && _6.target.type !== 'password') { _27(_7._418, { target: _66(_6.target) }) } }, { _34: true }); _18._25(_11, 'keydown', 'input,textarea,select', function (_6) { if (_6.target && _6.target.type !== 'password') { _27(_7._292, { target: _66(_6.target), value: _683(_6) }) } }, { _34: true }); _18._25(_11, 'keyup', 'input,textarea,select', function (_6) { if (_6.target && _6.target.type !== 'password') { _27(_7._294, { target: _66(_6.target), value: _682(_6.target) }); if (_374(_252(_6.target)) && _5.autoTagPayments) _100('payment') } }, { _34: true }); _18._25(_11, 'change', 'input,textarea,select', function (_6) { _27(_7._226, { target: _66(_6.target), value: _200(_6.target) }); if (_6.target && ['password', 'file'].indexOf(_6.target.type) === -1 && _374(_252(_6.target)) && _5.autoTagPayments) _100('payment') }, { _34: true }); _18._25(_11, 'submit', 'form', function (_6) { _445(_66(_6.target)) }, { _34: true }); if (_12._439) { _18._25(_11, 'touchstart', function (_6) { if (!_6.originalEvent || !_6.originalEvent.touches) return; var _78 = _6.originalEvent.touches; if (_78.length > 0) { _27(_7._367, { x: _78[0].pageX, y: _78[0].pageY }) } if (_78.length > 1) { _27(_7._345, { x: _78[1].pageX, y: _78[1].pageY }) } }, { _34: true }); _18._25(_11, 'touchmove', function (_6) { if (!_6.originalEvent || !_6.originalEvent.touches) return; var _78 = _6.originalEvent.touches; var _308 = _14(); var _393 = _308 - _61._547; if (_78.length > 0 && _0._601 < _393) { _27(_7._331, { x: _78[0].pageX, y: _78[0].pageY }); if (_78.length > 1) { _27(_7._339, { x: _78[1].pageX, y: _78[1].pageY }) } _0._601 = _308; var _835 = !_203(_285(), _0._155); if (_835) { _0._155 = _285(); _27(_7._291, _0._155); if (_0._327 < _393) { _27(_7._291, _0._155); _0._327 = _308 } var _741 = _0._160[_0._160.length - 0]; if (new Date() - _741 < 1000) { _0._160.push(+new Date()); _0._160 = _0._160.slice(-5); if (_0._244.length + _0._160.length === 5) { _145(_95._452) } } } _0._84 = { x: _3.pageXOffset, y: _3.pageYOffset }; if (_0._320 < _393 && !_203(_0._84, _0._256)) { _0._256 = _0._84; _27(_7._287, _0._84); _0._320 = _308 } } }, { _34: true }); _18._25(_11, 'touchend', function (_6) { if (!_6.originalEvent || !_6.originalEvent.touches) return; var _78 = _6.originalEvent.touches; if (_78.length === 0) _27(_7._300, { x: 0, y: 0 }); if (_78.length > 1) _27(_7._340, { x: 0, y: 0 }) }, { _34: true }); _18._25(_11, 'orientationchange', function () { _27(_7._336, { x: _3.orientation, y: 0 }); _0._244.push(+new Date()); _0._244 = _0._244.slice(-5); if (_0._244.length + _0._160.length === 5) { _145(_95._452) } }, { _34: true }) } _18._25(_3, _897(), function () { if (_0._156) { if (+new Date() - _0._156 < _5.registerSubmitTimeout) { _10('Registering formSubmit', _14()); _0._249 = _122(_5.path || _5.location.pathname) } else { _10('Not registering formSubmit. Timeout exceeded.', _14()) } } _68() }, { _34: true }); var _459 = _3.onerror; _3.onerror = function (_123, _17, _324, _321, _344) { var _863 = new Date() - _0._169; if (_863 > 1000 && _0._238 < 50) { _0._169 = +new Date(); var _416 = 'Malformed error'; if (_123 && _123.message) _416 = _123.message; else if (typeof _123 === 'string') _416 = _123; _0._131 = { _123: _416, _17: typeof _17 === 'string' ? _17 : 'Malformed URL', _324: '' + _324, _321: '' + _321, _873: _344 && _344.stack && _344.stack.substring(0, 800), _936: _0._169 }; if (_0._165 !== 0 && _0._169 - _0._165 < 100) { _145(_95._473, _0._489); _135._431('clickError'); _475() } } if (_459) _459.apply(this, arguments) }; if (!_453) { if (_5.proxyAttachShadow) _281(); _871(); _865(); if (_5.enableSpa) _864(); _453 = true } if (_5.keyLogging) _875() } catch (_49) { _10('Error in bindDomEvents: ' + _49.message, _14()) } } function _352(_32) { _18._25(_32, 'scroll', 'body,div,section,main,article,ul,.mf-scroll-listen', function (_6) { if (_6.target === _11) { _0._84 = { x: _3.pageXOffset, y: _3.pageYOffset } } else { _862(_66(_6.target), _6.target.scrollLeft, _6.target.scrollTop) } }, { _34: true, _584: true }) } var oldPushState; function _864() { var history = window.history; var location = window.location; oldPushState = history.pushState; history.pushState = function (state) { if (typeof history.onpushstate === 'function') history.onpushstate({ state: state }); return oldPushState.apply(history, arguments) }; window.onpopstate = history.onpushstate = function () { setTimeout(function () { _540() }, 100) } } function _865() { var _866 = CSSStyleSheet.prototype.insertRule; var _438; var _188 = []; CSSStyleSheet.prototype.insertRule = function () { _866.apply(this, arguments); if (!_166) return; var _26 = this.ownerNode; if (_188.indexOf(_26) < 0) _188.push(_26); _24._115(_438); _438 = _24._59(function () { _188 = _188.filter(function (_26) { return _26 && _153.isKnownNode(_26) }); _153.applyChanged([{ characterDataChanged: _188 }]); _188 = [] }, 200) } } var _353 = HTMLElement.prototype.attachShadow; var _315 = false; function _867() { var _85 = new Date(); var _869 = _3.setInterval(function () { var _868 = new Date() - _85; if (HTMLElement.prototype.attachShadow !== _353 || _868 > 10000) { _3.clearInterval(_869); _281() } }, 200) } function _870() { if (!_315 || HTMLElement.prototype.attachShadow !== _493) return; _10('Resetting "attach shadow" proxy'); delete HTMLElement.prototype.attachShadow; _315 = false } function _281() { if (_315) return; if (!_166) { _3.setTimeout(_281, 200); return } _10('Setting up "attach shadow" proxy'); _350(_11.body); _353 = HTMLElement.prototype.attachShadow; HTMLElement.prototype.attachShadow = _493; _315 = true } function _493() { var _97 = _353.apply(this, arguments); if (_166 && _153.isKnownNode(this)) { _352(_97); _153.addShadowRoot(_97) } return _97 } function _350(_1) { for (; _1; _1 = _1.nextElementSibling) { if (_1.shadowRoot) { _352(_1.shadowRoot); _153.addShadowRoot(_1.shadowRoot); _350(_1.shadowRoot.firstElementChild) } _350(_1.firstElementChild) } } function _871() { if (!_166) return; _496(Document.prototype, 'adoptedStyleSheets', { _347: _495 }); _496(ShadowRoot.prototype, 'adoptedStyleSheets', { _347: _495 }) } function _495() { if (!_166) return; _153.applyChanged([{ attributeChanged: { 'mf_adoptedStyleSheets': [this] } }]) } function _496(_26, _499, _211) { var _369 = Object.getOwnPropertyDescriptor(_26, _499); if (!_211 || !_369) return; Object.defineProperty(_26, _499, { get: function () { var _4 = _369.get.apply(this, arguments); if (_211._872) _211._872.apply(this, arguments); return _4 }, set: function () { _369.set.apply(this, arguments); if (_211._347) _211._347.apply(this, arguments) } }) } function _475() { if (_0._131) { _0._238++; var _874 = 'website=' + _5._50 + '&session=' + _12._56 + '&page=' + _12._52 + '&type=error&data=' + _72(_9._75({ seq: _0._238, errorMsg: _0._131._123, url: _0._131._17, line: _0._131._324, col: _0._131._321, stack: _0._131._873, errorTime: _0._169 })); _27(_7._81, { x: _0._238, y: 0 }); _10('JS error ' + _0._238 + ', msg: ' + _0._131._123, _14()); _111({ _17: _136 + 'data', _15: _874 }); _0._131 = null } } function _498() { _18._522(); if (_322) _24._167(_322) } function _875() { _0._227 = _503(); _322 = _24._282(function () { _879(_878(_503(), _0._227)) }, 200) } function _503() { var _505 = _11.querySelectorAll('input,textarea,select'); var _509 = {}; for (var i = 0; i < _505.length; i++) { var _63 = _505[i]; if (_9._134(_63, 'no-mouseflow')) continue; if (!_876(_63, ['text', 'textarea', 'select-one'])) continue; _509[_66(_63)] = _200(_63) } return _509 } function _876(_63, _877) { return _63.type && new RegExp(_877.join('|'), 'i').test(_63.type) } function _878(_227, _513) { var _228 = []; for (var _23 in _227) { var _4 = _227[_23]; var _512 = _513[_23]; if (_512 !== undefined && _512 !== _4) _228.push({ id: _23, value: _4 }); _513[_23] = _4 } return _228 } function _879(_228) { if (_14() - _0._478 > 100) { for (var i = 0; i < _228.length; i++) { var _35 = _228[i]; _27(_7._226, { target: _35.id, value: _35.value }) } } } function _880(_6, _1) { if ((+new Date()) - _0._515 < 20) return; _0._515 = +new Date(); _27(_7._268, { x: _6.pageX, y: _6.pageY, target: _66(_1) }) } function _881(_6, _1) { if ((+new Date()) - _0._490 < 20) return; _0._490 = +new Date(); var _129 = _364(_1, _6.pageX, _6.pageY); if (!_129 && _1.firstElementChild) _129 = _364(_1.firstElementChild, _6.pageX, _6.pageY); if (_129) _27(_7._299, { x: _129.x, y: _129.y, target: _66(_1) }) } function _882(_6, _1) { if ((+new Date()) - _0._165 < 20) return; var _42 = _66(_1); _0._165 = +new Date(); _0._489 = _42; _27(_7._298, { x: _6.pageX, y: _6.pageY, target: _42 }); _0._232.push(_0._165); _0._232 = _0._232.slice(-5); if (_0._232[4] - _0._232[0] < 1000) { _145(_95._883, _42); _135._431('clickRage') } if (_0._165 !== 0 && _0._169 !== 0 && _0._165 - _0._169 < 100) { _145(_95._473, _42); _135._431('clickError'); _475() } } function _862(_43, _861, _860) { _0._199[_43] = { x: _861, y: _860 }; if (_310) return; _310 = _24._59(_485, 100); function _485() { _310 = null; var _479 = true; for (var _42 in _0._199) { if (_0._199.hasOwnProperty(_42)) { _27(_7._432, { x: _0._199[_42].x, y: _0._199[_42].y, target: _42 }); _479 = false } } if (!_479) { _0._199 = {}; _310 = _24._59(_485, 100) } } } function _364(_26, _848, _839) { var _41 = _635(_26); if (_41 == null || !_41.height || !_41.width) return null; return { x: parseInt((_848 - _0._84.x - _41.x) / parseFloat(_41.width) * 65535), y: parseInt((_839 - _0._84.y - _41.y) / parseFloat(_41.height) * 65535) } } function _840() { var _483 = {}; var _484 = /[^(]:hover/; if (_5.useAllHoverSelectors) { for (var _2 = 0; _2 < _11.styleSheets.length; _2++) { var _118 = _11.styleSheets[_2]; try { var _189 = _118.cssRules ? _118.cssRules : _118.rules; for (var _58 = 0; _58 < _189.length; _58++) { var _486 = _118.cssRules[_58]; if (!_484.test(_486.selectorText)) continue; var _36 = _486.selectorText.split(','); var _8; for (var _386 = 0; _386 < _36.length; _386++) { _8 = _36[_386].replace(/^\s+|\s+$/g, ''); if (_484.test(_8)) { _8 = _8.substring(0, _8.indexOf(':hover')); _8 = _841(_8); _483[_8] = true } } } } catch (_49) { _10('Cannot inspect external css file, :hover support may fail: ' + _118.href) } } } var _36 = ['a', 'input', 'select', 'button', 'textarea', 'li', 'canvas', '.mf-listen']; for (_8 in _483) { _8 = _8.replace(/^\s+|\s+$/g, ''); if (_8 != '' && _8 != 'a' && !_223(_8, ' a') && !_223(_8, ' select') && !_223(_8, ' submit') && !_223(_8, ' textarea') && !_223(_8, ' li')) _36.push(_8) } _36.push.apply(_36, _5._317); return _36.slice(0, 1000).join(',') } function _841(_35) { var _482 = [/:active/g, /:visited/g, /::before/g, /:before/g, /::after/g, /:after/g, /::first-letter/g, /::first-line/g, /::selection/g]; for (var _2 = 0; _2 < _482.length; _2++)_35 = _35.replace(_482[_2], ''); return _35 } function _72(_842) { try { return _3.encodeURIComponent(_842) } catch (_49) { _10('Encode error: ' + _49.message, _14()); return '' } } function _916(_4) { return _4.replace(/%/g, '%25').replace(/\|{3}/g, '%7C%7C%7C') } function _27(_20, _22) { if (!_74) return; if (_0._15.length === 0) _0._213 = +new Date(); var _47 = _472(_20, _22, _0._149, _0._39); if (!_47) return; if (_850(_20)) { _24._115(_215); _215 = _24._59(_652, _61._410); _0._359 = _14(); _0._273 = +new Date() } if (_511(_20)) _0._478 = _14(); var _843 = _626(_0._126) + (_47._114 ? _288.encode(_47._114).length : 0), _844 = _626(_0._39) + (_47._4 ? _288.encode(_47._4).length : 0); var totalDataSize = _0._15.length + _47._15.length + _843 + _844; if (totalDataSize > _61._471) { _293(); if (_47._4 !== undefined) _47._15[_47._15.length - 1] = 0; _0._15 = _47._15; _0._15[0] = 0; _0._15[1] = 0; if (_47._114 !== undefined) _0._126.push(_47._114); if (_47._4 !== undefined) _0._39.push(_47._4) } else { _0._15 = _0._15.concat(_47._15); if (_47._114 !== undefined) _0._126.push(_47._114); if (_47._4 !== undefined) _0._39.push(_47._4); if (_20 === _7._300) { _293() } } } function _408(_401) { _487(_12._407, _401) } function _487(_52, _401) { var _15 = [], _149 = [], _126 = [], _39 = []; _401.forEach(function (_46) { if (!_46._22) _46._22 = {}; var _47 = _472(_46._20, _46._22, _149, _39); if (!_47) return; _15 = _15.concat(_47._15); if (_47._114 !== undefined) _126.push(_47._114); if (_47._4 !== undefined) _39.push(_47._4) }); var _219 = 0; var _372 = _497(_219, _15, _126, _39); _111({ _17: _136 + 'events?w=' + _5._50 + '&s=' + _12._56 + '&p=' + _52 + '&li=0&lh=0&ls=0&d=' + _372 }) } function _472(_20, _22, _149, _39) { var _114; var _4 = _22.value; var _388 = -1; var _15 = []; _15._630 = false; if (_846(_20) && !_847(_22)) return null; if (_22.value && _22.value.length > _61._471) { _10('Event, type: ' + _20 + ', skipping due to large value, details: ' + _9._75(_22), _14()); return null } _117(2, _654(), _15); _117(1, _20, _15); if (_22.x < 0) _22.x = 0; if (_22.y < 0) _22.y = 0; if (_22.x > 65534) _22.x = 65534; if (_22.y > 65534) _22.y = 65534; if (_22.x != undefined) _117(2, _22.x, _15); if (_22.y != undefined) _117(2, _22.y, _15); if (_22.target != undefined) { if (typeof _22.target == 'object' && _22.target.id != undefined) _22.target = _22.target.id; if (_20 !== _7._100 && _22.target && _22.target.indexOf('||') === -1) { var _1 = _926(_22.target); if (_1) { if (_265(_1)) return null; if (_1.form && !_265(_1.form)) _22.target = _66(_1.form) + '||' + _22.target } } for (var _2 = 0; _2 < _149.length; _2++) { if (_149[_2] === _22.target) { _388 = _2; break } } } if (_849(_20)) { if (!_22.target) { _117(2, 65535, _15) } else if (_388 === -1) { var _470 = _149.length; _117(2, _470, _15); _114 = _470 + ':' + _22.target; _149.push(_22.target) } else { _117(2, _388, _15) } } if (_20 !== _7._289 && _20 !== _7._212) _10('Event, type: ' + _20 + ', time: ' + _14() + ', details: ' + _9._75(_22), _14()); if (_859(_20)) { if (_4 instanceof Array) _4 = _4.join(', '); _117(1, _39.length, _15) } if (_15._630) { _10('Event, type: ' + _20 + ', skipping due to overflow in temp data, details: ' + _9._75(_22), _14()); return null } return { _15: _15, _114: _114, _4: _4 } } function _654() { return +new Date() - _0._213 } function _845() { return _3.performance && _3.performance.timing.domLoading > 0 ? _0._468 - _3.performance.timing.domLoading : 0 } function _579() { return _3.performance && _3.performance.timing.loadEventStart > 0 && _3.performance.timing.fetchStart > 0 ? _3.performance.timing.loadEventStart - _3.performance.timing.fetchStart : 0 } function _846(_20) { return [_7._291, _7._287, _7._289, _7._268, _7._299, _7._298, _7._297, _7._193, _7._656, _7._81, _7._367, _7._331, _7._300, _7._336, _7._345, _7._339, _7._340, _7._341, _7._507, _7._343, _7._506, _7._328, _7._55, _7._432, _7._212, _7._93].indexOf(_20) !== -1 } function _847(_22) { return _22.x !== undefined && _22.y !== undefined && !isNaN(_22.x) && !isNaN(_22.y) } function _849(_20) { return [_7._268, _7._299, _7._298, _7._297, _7._193, _7._418, _7._294, _7._226, _7._465, _7._464, _7._263, _7._100, _7._341, _7._343, _7._328, _7._292, _7._474, _7._488, _7._432, _7._212, _7._93].indexOf(_20) !== -1 } function _859(_20) { return [_7._294, _7._226, _7._292, _7._93].indexOf(_20) !== -1 } function _850(_20) { return _851(_20) || _511(_20) || _852(_20) } function _851(_20) { return [_7._289, _7._268, _7._299, _7._298, _7._287, _7._297, _7._193, _7._212].indexOf(_20) !== -1 } function _511(_20) { return [_7._418, _7._294, _7._226, _7._292].indexOf(_20) !== -1 } function _852(_20) { return [_7._367, _7._331, _7._300, _7._336, _7._345, _7._339, _7._340, _7._341, _7._507, _7._343, _7._506, _7._328].indexOf(_20) !== -1 } function _504() { if (!_203(_285(), _0._155)) { _0._155 = _285(); _27(_7._291, _0._155); _0._327 = _14() } if (!_203(_0._128, _0._461)) { _0._461 = _0._128; _27(_7._289, _0._128) } if (!_203(_0._84, _0._256)) { _0._256 = _0._84; _27(_7._287, _0._84); _0._320 = _14() } } function _853() { if (!_203(_0._128, _0._502)) { _0._502 = _0._128; var _500 = _11.elementFromPoint(_0._128.x - _0._84.x, _0._128.y - _0._84.y); var _129 = _364(_500, _0._128.x, _0._128.y); if (_129) { _27(_7._212, { x: _129.x, y: _129.y, target: _66(_500) }) } } } function _293() { var _219 = _0._213 - _0._85; var _372 = _497(_219, _0._15, _0._126, _0._39); _0._260.push(_372); _0._15 = []; _0._39 = []; _0._126 = []; _0._213 = +new Date(); if (_14() > _61._854) { _10('Pageview over max.time, stopping.', _14()); _498(); _24._167(_377); _24._167(_378); _24._167(_379); _24._115(_215); _201 = false } else { _855() } } function _497(_219, _15, _126, _39) { var _220 = []; _117(3, _219, _220); _117(2, _15.length, _220); _220 = _220.concat(_15); return _889.e(_220) + '.' + _627(_126 || []) + '.' + _627(_39 || []) } function _855() { if (_201 && _0._260.length > 0) { if (_0._258 == 1) { _12._221++ } var _88 = _12._290 ? _355() : []; for (var _2 = 0; _2 < _0._260.length; _2++) { _88.push({ _17: _136 + 'events?w=' + _5._50 + '&s=' + _12._56 + '&p=' + _12._52 + '&q=' + _0._258 + '&li=' + _0._492 + '&lh=' + _0._491 + '&ls=' + _0._516 + '&d=' + _0._260[_2] }); _0._258++; _0._492 = _0._359; _0._491 = _0._155.y; _0._516 = _0._256.y } _0._260 = []; if (_12._290) { _448(_88.slice(-10)); _441() } else { for (var _2 = 0; _2 < _88.length; _2++) { _111(_88[_2]) } } if (_0._258 > _61._856) _68() } } function _441() { if (_0._363) return; var _16 = _355().slice(0, 1)[0]; if (_16) { _0._363 = true; _16._152 = _16._81 = function () { _448(_355().slice(1)); _0._363 = false; _24._59(_441, 1) }; _111(_16) } } function _355() { return _9._146(_3.sessionStorage.getItem('mf_transmitQueue')) || [] } function _448(_88) { _3.sessionStorage.setItem('mf_transmitQueue', _9._75(_88)) } function _111(_16) { if (!_16 || !_16._17) return; _337(); if (_628() && _3.XDomainRequest) { try { _16._17 = _886(_428(_16._17, '0')); var _112 = new _3.XDomainRequest(); _112.open(_16._15 ? 'POST' : 'GET', _16._17); _112.onload = function () { if (_16._152) _16._152(_442(_112)) }; _112.onerror = function () { if (_16._81) _16._81(_442(_112)) }; _112.onprogress = function () { _10('XDR progress:' + _16._17, _14()) }; _112.ontimeout = function () { _10('XDR timeout:' + _16._17, _14()) }; _112.timeout = 20000; _24._59(function () { _112.send(_16._15) }, 500) } catch (_49) { _10('Error in transmitCrossDomain (XDomainRequest): ' + _49.message, _14()); if (_16._81) _16._81({}) } } else if (_3.XMLHttpRequest) { try { var _73 = new _3.XMLHttpRequest(); _73.onreadystatechange = function () { if (_73.readyState !== 4 || !_73.status) return; if (_858(_73.status)) { if (_16._152) _16._152(_455(_73)) } else { if (_16._81) _16._81(_455(_73)) } }; if (_16._15, _16._646) { _16._15 = pako.gzip(_16._15); _16._17 = _428(_16._17, '1') } else { _16._17 = _428(_16._17, '0') } _73.open(_16._15 ? 'POST' : 'GET', _16._17, true); _73.setRequestHeader('Content-type', 'text/plain'); if (_16._857) _73.withCredentials = true; _73.send(_16._15) } catch (_49) { _10('Error in transmitCrossDomain (XMLHttpRequest): ' + _49.message, _14()); if (_16._81) _16._81({}) } } } function _442(_112) { return { _421: _112.responseText } } function _455(_73) { return { _434: _73.status, _421: _73.response } } function _428(_17, _4) { return /\/(html|dom)/.test(_17) ? _17 + (_17.indexOf('?') === -1 ? '?' : '&') + 'gz=' + _4 : _17 } function _430(_20, _15) { _111({ _17: _136 + 'data', _15: 'website=' + _5._50 + '&session=' + _12._56 + '&page=' + _12._52 + '&type=' + _20 + '&data=' + _72(_9._75(_15)) }) } function _858(_434) { return _434 >= 200 && _434 < 300 } function _628() { return _11.all && !_3.atob; } function _604() { return _11.all && !_11.addEventListener; } function _886(_17) { return _17.replace(/^https?:/i, _5.location.protocol) } function _885(_55, _909) { var _391 = _72(_9._75(_55.data)); var _16 = { _17: _136 + 'html' + '?website=' + _5._50 + '&session=' + _12._56 + '&page=' + _12._52, _15: 'size=' + _909 + '&html=' + _391, _646: _5.compress }; if (_12._290) { var _88 = _457(); if (_391 !== '') _88.push(_16); else _10('Initial DOM empty, not sending', _14()); _458(_88.slice(-10)); _456() } else { if (_391 !== '') _111(_16); else _10('Initial DOM empty, not sending', _14()) } } function _456() { var _88 = _457(); var _16 = _88.splice(0, 1)[0]; if (_16) { _10('Sending initial DOM mutations. Size: ' + _16._15.length, _14()); _16._152 = _16._81 = function () { _458(_88); _24._59(_456, 1) }; _111(_16) } } function _457() { return _9._146(_3.sessionStorage.getItem('mf_initialDomQueue')) || [] } function _458(_88) { try { _3.sessionStorage.setItem('mf_initialDomQueue', _9._75(_88)) } catch (_49) { _10('InitialDomQueue could not be stored in sessionStorage: ' + _49.message, _14()) } } function _887(_55) { var _148 = _55.data.args[1].some(function (_92) { return _420._148(_92) }); if (_148) { _10('DOM mutation is a duplicate and has not been added.', _14()); return } var _451 = _917(_55, _0._181); if (_451 > -1) { _0._181[_451].data = _55.data; _10('Deduplicating DOM mutation', _14()); return } if (_5.domReuse) { var _269 = _915(_55); var _440 = _914(_269); if (_440 > -1) { _55.sequence = _440; _10('Reusing already sent DOM mutation, sequence ' + _55.sequence, _14()); _27(_7._55, { x: _55.sequence, y: 0 }); return } else _0._395.push(_269) } _55.sequence = ++_0._913; _27(_7._55, { x: _55.sequence, y: 0 }); _0._181.push(_55); if (!_216) _216 = _24._59(_537, 1500) } function _914(_269) { for (var i = 0; i < _0._395.length; i++)if (_0._395[i] == _269) return i + 1; return -1 } function _915(_55) { return _122(_9._75(_55.data)) } function _537() { _216 = 0; if (_201 && _0._181.length > 0) { var _638 = _0._181.length; var _15 = _0._181.map(function (_55) { return _55.sequence + '.' + _916(_9._75(_55.data)) }).join('|||'); _0._181 = []; if (_15 !== '') { _15 = 'website=' + _5._50 + '&session=' + _12._56 + '&page=' + _12._52 + '&data=' + _72(_15); _111({ _17: _136 + 'dom', _15: _15, _646: _5.compress }); _10('Sending DOM mutations: ' + _638 + ', size: ' + _15.length, _14()); _0._639 += _638; if (_0._639 > _61._642) { _10('DOM mutation limit of ' + _61._642 + ' reached. Stopping recording.', _14()); _68() } } } } function _917(_67, _607) { if (!_5.domDeduplicator) return -1; var _77 = _67.data.args; var _608 = _620(_77); var _613 = _623(_77); if (!_608 && !_613) return -1; for (var i = 0; i < _607.length; i++) { var _394 = _607[i].data.args; if (_608 && _620(_394) && _920(_77[2], _394[2])) { return i } else if (_613 && _623(_394)) { return i } } return -1 } function _620(_77) { return _622(_77) && _77[2].filter(_918).length === _77[2].length } function _623(_77) { return _622(_77) && _77[2].filter(_919).length === _77[2].length } function _622(_77) { return _77[0].length === 0 && _77[1].length === 0 && _77[2].length > 0 && _77[3].length === 0 } function _918(_247) { return _247.attributes.style && _621(_247.attributes) === 1 } function _919(_247) { return _247.attributes.d && _621(_247.attributes) === 1 } function _621(obj) { var count = 0; for (var prop in obj) if (obj.hasOwnProperty(prop)) count++; return count } function _920(_435, _614) { if (_435.length !== _614.length) return false; for (var i = 0; i < _435.length; i++) { var _923 = _435[i], _922 = _614[i]; if (_923.id !== _922.id) return false } return true } function _427() { if (_0._15.length > 0 && _654() >= 5000) { _27(_7._427, {}); _293() } } function _652() { _10('Inactivity timeout.', _14()); _68(true) } function _203(_110, _651) { return _110.x == _651.x && _110.y == _651.y } function _285() { return { x: _3.innerWidth, y: _3.innerHeight } } function _635(_164) { if (!_164 || !_164.getBoundingClientRect) return null; var _144 = _164.getBoundingClientRect(); var _251; if (!_164.childElementCount && !_144.height && !_144.width) _251 = _931(_164); if (!_251) { return { x: _144.left, y: _144.top, width: _144.width, height: _144.height } } else { _251.x += _144.left - _164.offsetLeft; _251.y += _144.top - _164.offsetTop; return _251 } } function _931(_1) { var _198 = window.getComputedStyle(_1, [':after']); if (!_198) return _198; return { x: +_198.left.slice(0, -2), y: +_198.top.slice(0, -2), width: +_198.width.slice(0, -2), height: +_198.height.slice(0, -2) } } function _66(_1) { try { var _43 = []; while (_1) { var _32 = _1.getRootNode ? _1.getRootNode() : _11; _43.unshift(_924(_1, _32) || _925(_1, _32)); _1 = _32.host } return _43.join(' > :document-fragment: > ') } catch (_49) { _10('Error in getElementPath: ' + _49.message, _14()) } return '' } function _924(_1) { var name = _1.attributes['name'] ? _1.attributes['name'].value : null; if (name && _1.form && /button|input|select|textarea/.test(_1.tagName.toLowerCase())) { var _302 = _11.getElementsByName(name); if (_302.length === 1) return name; if (_302.length > 1) { for (var _2 = 0; _2 < _302.length; _2++)if (_1 === _302[_2]) return name + '[' + _2 + ']_mf' } } return null } function _925(_53, _32) { var _28 = []; try { while (_53 && _53.nodeType === 1) { var _8 = ''; if (_53.tagName === 'TABLE' && _28.indexOf('tbody') === -1 && _28.indexOf('thead') === -1) _28.unshift('tbody'); if (_53.getAttribute('id') && !_9._143(_53, 'data-mf-ignore-child-ids') && _5.useIdSelectors) { _8 += '#' + _53.getAttribute('id'); _28.unshift(_8); break } else { _8 += _53.tagName.toLowerCase(); var _279 = '', _375 = _53, _204 = 1; if (_53.parentNode && _53.parentNode.tagName && _53.parentNode.tagName.toLowerCase() == 'body') { var _89 = _9._174(_53); _279 = _89.length ? '.' + _89.join('.') : '' } if (_279 !== '' && _32.querySelectorAll('body > ' + _8 + _279).length === 1) _8 += _279; else { while ((_375 = _375.previousElementSibling)) { if (_375.tagName.toLowerCase() === _8) _204++ } if (_204 !== 1) _8 += ':[' + _204 + ']' } } _28.unshift(_8); if (!_53.parentNode) return ''; _53 = _53.parentNode } } catch (_49) { _10('Error in _getCssPath: ' + _49.message, _14()) } return _28.join(' > ').replace('html > body > ', '> ') } function _926(_43) { if (!_43) return null; var _1 = _740(_43); if (!_1) { try { var _32 = _11; _927(_43).split(' > :document-fragment: > ').forEach(function (_8) { _1 = _32.querySelector(_8); _32 = _1.shadowRoot }) } catch (_49) { _10('Error in _getElementById: ' + _49.message, _14()) } } return _1 } function _740(_19) { if (!_19) return null; var _119 = _643.exec(_19); if (_119 && _119[1]) { try { var _45 = _3.parseInt(_119[1]); return _11.getElementsByName(_19.replace(_643, ''))[_45] } catch (_49) { } } var _57 = _11.getElementsByName(_19); if (_57 && _57.length === 1) return _57[0]; return null } function _927(_28) { if (!_28) return null; if (_28.substr(0, 1) === '>') _28 = 'html > body ' + _28; _28 = _28.replace(/^#(\d)/, '#\\3$1 '); _28 = _28.replace(/^#(-\d)/, '#\\$1'); _28 = _28.replace(/:([^\[])/g, '\\:$1'); _28 = _28.replace(/\\:document-fragment\\:/g, ':document-fragment:'); _28 = _28.replace(/^#[^\s]+/, function (id) { return '#' + id.slice(1).replace(/([^a-zA-Z\d\s:\\])/g, '\\$1') }); _28 = _28.replace(/:\[([^\]]+)\]/g, ':nth-of-type($1)'); return _28 } function _117(_928, _4, _257) { for (var _2 = _928 - 1; _2 > 0; _2--) { var _633 = _113.pow(256, _2); _632(_113.floor(_4 / _633), _257); _4 = _4 % _633 } _632(_4, _257) } function _632(_629, _257) { if (_629 > 255) { _257._630 = true; return } _257.push(_629) } function _627(_1) { var _33 = ''; for (var _2 = 0; _2 < _1.length; _2++) { _33 += (_2 > 0 ? ',' : '') + _288.encode('' + _1[_2]) } return _33 } function _626(_1) { var _301 = 0; for (var _2 = 0; _2 < _1.length; _2++)_301 += _288.encode('' + _1[_2]).length + 1; return _301 > 0 ? _301 - 1 : _301 } function _357(_35) { if (_930(_35.hostname) || !_5.includeSubDomains) return _35.hostname; var _29 = _35.href; var _929 = /\.co\.|\.com\.|\.ac\.|\.org\.|\.gov\.|\.edu\.|\.net\./; _29 = _29.replace(/^http(s)?\:\/\/?/i, '').replace(/^([^\/]+)\/.*/i, '$1').replace(/:[\d]*$/, ''); if (_929.test(_29)) _29 = _29.replace(/^([^\.]+\.){1,}([^\.]+\.[^\.]+\.[^\.]+)$/i, '$2'); else _29 = _29.replace(/^([^\.]+\.){1,}([^\.]+\.[^\.]+)$/i, '$2'); return '.' + _29 } function _930(ipaddress) { if (/^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(ipaddress)) { return (true) } return (false) } function _625(_19, _4, _356, _29) { if (_5.preferStorageApi) _3.localStorage.setItem(_19, _4); else _921(_19, _4, _356, _29) } function _624(_19) { if (_5.preferStorageApi) return _3.localStorage.getItem(_19) || ''; else return _888(_19) } function _912(_19) { if (_5.preferStorageApi) { _3.sessionStorage.removeItem(_19); _3.localStorage.removeItem(_19) } else { _11.cookie = _19 + '=; expires=Thu, 01-Jan-70 00:00:01 GMT; path=/; domain=' + _357(_90) + ';' } } function _921(_19, _4, _356, _29) { var _618 = ''; if (_356 == 1) { var _101 = new Date(); _101.setTime(_101.getTime() + _61._910); _618 = '; expires=' + _101.toGMTString() } var _911 = _5.secureCookie ? 'secure;' : ''; _11.cookie = _19 + '=' + _4 + _618 + '; path=/; domain=' + _29 + ';' + _911 + 'SameSite=Strict;' } function _888(_19) { var _612 = _19 + '='; var _615 = _11.cookie.split(';'); for (var i = 0; i < _615.length; i++) { var c = _615[i]; while (c.charAt(0) === ' ') { c = c.substring(1) } if (c.indexOf(_612) === 0) { return c.substring(_612.length, c.length) } } return '' } var _889 = new function () { for (var d = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'.split(''), c = 64; c;)--c; this.e = function (e) { for (var a = [], f = 0, b = 0, g, c = e.length, h = c % 3; f < c;)a[b++] = d[(g = e[f++] << 16 | e[f++] << 8 | e[f++]) >> 18 & 63] + d[g >> 12 & 63] + d[g >> 6 & 63] + d[g & 63]; if (h) for (a[--b] = a[b].substr(0, a[b].length - (h = 3 - h)); h--;)a[b] += '*'; return a.join('') } }; var _288 = { _283: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=', encode: function (c) { for (var a = '', d, b, e, i, h, f, g = 0, c = this._890(c); g < c.length;)d = c.charCodeAt(g++), b = c.charCodeAt(g++), e = c.charCodeAt(g++), i = d >> 2, d = (d & 3) << 4 | b >> 4, h = (b & 15) << 2 | e >> 6, f = e & 63, isNaN(b) ? h = f = 64 : isNaN(e) && (f = 64), a = a + this._283.charAt(i) + this._283.charAt(d) + this._283.charAt(h) + this._283.charAt(f); return a }, _890: function (c) { for (var c = c.replace(/\r\n/g, '\n'), a = '', d = 0; d < c.length; d++) { var b = c.charCodeAt(d); 128 > b ? a += String.fromCharCode(b) : (127 < b && 2048 > b ? a += String.fromCharCode(b >> 6 | 192) : (a += String.fromCharCode(b >> 12 | 224), a += String.fromCharCode(b >> 6 & 63 | 128)), a += String.fromCharCode(b & 63 | 128)) } return a } }; function _380() { var _110 = function () { return ((1 + _113.random()) * 65536 | 0).toString(16).substring(1) }; return _110() + _110() + _110() + _110() + _110() + _110() + _110() + _110() } var _376 = 0; function _600() { if (_11.body) { _10('Initializing recorder'); if (!_891()) return; if (_892) _893(_605); else _605(); return } _376++; if (_376 === 1) { _10('Retrying to initialize recorder - document.body is not set', _14()) } else if (_376 === 25) { _10('Failed to initialize recorder', _14()); return }; _24._59(_600, 200) } function _605() { _10('Initializing recorder', _14()); if (!_644(_5.location.hostname)) return; if (_604()) { _10('Recording not started - browser is IE8 or older', _14()); return } if (_616) _894(); if (_616 || _895) return; _659 = true; function _658() { if (!_74 && _5.autoStart && _11.readyState !== 'loading') _48(); _382(_579()) } _18._25(_11, 'readystatechange', _658); _658() } function _382(_896) { if (_330 || !_74 || _11.readyState !== 'complete') return; _27(_7._656, { x: _896, y: _9._351() }); _330 = true } function _897() { return _5.useUnload ? 'unload' : 'beforeunload' } function _223(_650, _649) { return _650.indexOf(_649, _650.length - _649.length) !== -1 } function _122(_35) { var _98 = 0, _648; for (var _2 = 0; _2 < _35.length; _2++) { _648 = _35.charCodeAt(_2); _98 = ((_98 << 5) - _98) + _648 } return _98.toString() } function _647(_23) { for (var _2 = 0; _2 < _0._137.length; _2++)if (_0._137[_2].split('_')[0] === _122(_23)) { return _2 } return -1 } function _660(_23, _4) { var _323 = _647(_23); var _326 = _122('' + _4); if (_323 > -1) { if (_0._137[_323].split('_')[1] === _326) { return false } _0._137[_323] = _122(_23) + '_' + _326 } else if (_0._137.length < 20) { _0._137.push(_122(_23) + '_' + _326) } return true } function _644(_29) { var _898 = _29; _29 = _329(_29); var _634 = false; for (var _2 = 0; _2 < _224.length; _2++) { if (_29 == _329(_224[_2])) { _634 = true; break } } _29 = _899(_29); var _640 = false; for (var _2 = 0; _2 < _224.length; _2++) { if (_29 == _329(_224[_2])) { _640 = true; break } } var _33 = _634 || _640; if (!_33) _10('Domain was blocked: ' + _898 + ' - domain list: ' + _224, _14()); return _33 } function _329(_29) { if (_29 == null) return ''; _29 = _29.toLowerCase(); _29 = _29.replace(/^\s+|\s+$/g, ''); if (_29.substring(0, 4) == 'www.') { _29 = _29.substring(4, _29.length) } return _29 } function _899(_29) { if (_5.includeSubDomains) { _29 = _900(_29) } return _29 } function _900(_29) { var _104 = _29.split('.'); if (_104.length <= 2) return _29; if (_29.indexOf('.co.') > -1 || _29.indexOf('.com.') > -1 || _29.indexOf('.org.') > -1) { _104 = _104.slice(_104.length - 3, _104.length); return _104.join('.') } _104 = _104.slice(_104.length - 2, _104.length); return _104.join('.') } function _901() { var _33 = []; if (typeof Ember != 'undefined') _33.push('em'); if (typeof angular != 'undefined') _33.push('an'); if (typeof Backbone != 'undefined') _33.push('bb'); return _33 } function _902() { if (_5.autoTagging) { _10('Autotagging session', _14()); var _637 = ['utm_source', 'utm_medium', 'utm_term', 'utm_content', 'utm_campaign', 'gclid']; for (var _2 = 0; _2 < _637.length; _2++) { var _338 = _637[_2]; var _4 = _653(_5.location.href, _338); if (!_4) _4 = _653(_11.referrer, _338); if (_4) _3._mfq.push(['setVariable', _338, _4]) } } } function _653(_17, _19) { _19 = _19.replace(/[\[]/, '\\[').replace(/[\]]/, '\\]'); var regex = new RegExp('[\\?&]' + _19 + '=([^&#]*)'), results = regex.exec(_17); return results === null ? '' : decodeURIComponent(results[1].replace(/\+/g, ' ')) } function _903(_335) { switch (_335) { case ' ': case '"': case "'": case '.': case ',': case '_': case '-': case '+': case '/': case '*': case ':': case '=': case '!': case '?': case '@': case '#': case '%': case '&': case '{': case '}': case '[': case ']': case '\\': case '|': return false; default: return true } } function _904(_4, _384) { var _33 = ''; for (var _2 = 0; _2 < _384; _2++) { _33 += _4 } return _33 } function _14() { return +new Date() - _0._85 } if (!_628()) { var pako = function () { function t() { this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, this.data_type = 2, this.adler = 0 } function e(t, e, a, n) { for (var r = 65535 & t | 0, i = t >>> 16 & 65535 | 0, s = 0; 0 !== a;) { s = a > 2e3 ? 2e3 : a, a -= s; do r = r + e[n++] | 0, i = i + r | 0; while (--s); r %= 65521, i %= 65521 } return r | i << 16 | 0 } var a = { 2: "need dictionary", 1: "stream end", 0: "", "-1": "file error", "-2": "stream error", "-3": "data error", "-4": "insufficient memory", "-5": "buffer error", "-6": "incompatible version" }, n = function () { function t() { for (var t, e = [], a = 0; a < 256; a++) { t = a; for (var n = 0; n < 8; n++)t = 1 & t ? 3988292384 ^ t >>> 1 : t >>> 1; e[a] = t } return e } function e(t, e, n, r) { var i = a, s = r + n; t ^= -1; for (var h = r; h < s; h++)t = t >>> 8 ^ i[255 & (t ^ e[h])]; return t ^ -1 } var a = t(); return e }(), r = { Buf8: Uint8Array, Buf16: Uint16Array, assign: function (t) { for (var e = Array.prototype.slice.call(arguments, 1); e.length;) { var a = e.shift(); if (a) { if ("object" != typeof a) throw new TypeError(a + "must be non-object"); for (var n in a) a.hasOwnProperty(n) && (t[n] = a[n]) } } return t }, shrinkBuf: function (t, e) { return t.length === e ? t : t.subarray ? t.subarray(0, e) : (t.length = e, t) }, arraySet: function (t, e, a, n, r) { if (e.subarray && t.subarray) return void t.set(e.subarray(a, a + n), r); for (var i = 0; i < n; i++)t[r + i] = e[a + i] }, flattenChunks: function (t) { var e, a, n, r, i, s; for (n = 0, e = 0, a = t.length; e < a; e++)n += t[e].length; for (s = new Uint8Array(n), r = 0, e = 0, a = t.length; e < a; e++)i = t[e], s.set(i, r), r += i.length; return s } }, i = function () { function t(t) { var e, a, n, i, s, h = t.length, _ = 0; for (i = 0; i < h; i++)a = t.charCodeAt(i), 55296 === (64512 & a) && i + 1 < h && (n = t.charCodeAt(i + 1), 56320 === (64512 & n) && (a = 65536 + (a - 55296 << 10) + (n - 56320), i++)), _ += a < 128 ? 1 : a < 2048 ? 2 : a < 65536 ? 3 : 4; for (e = new r.Buf8(_), s = 0, i = 0; s < _; i++)a = t.charCodeAt(i), 55296 === (64512 & a) && i + 1 < h && (n = t.charCodeAt(i + 1), 56320 === (64512 & n) && (a = 65536 + (a - 55296 << 10) + (n - 56320), i++)), a < 128 ? e[s++] = a : a < 2048 ? (e[s++] = 192 | a >>> 6, e[s++] = 128 | 63 & a) : a < 65536 ? (e[s++] = 224 | a >>> 12, e[s++] = 128 | a >>> 6 & 63, e[s++] = 128 | 63 & a) : (e[s++] = 240 | a >>> 18, e[s++] = 128 | a >>> 12 & 63, e[s++] = 128 | a >>> 6 & 63, e[s++] = 128 | 63 & a); return e } function e(t) { var e = t.length; if (e < 65537 && (t.subarray && n || !t.subarray && a)) return String.fromCharCode.apply(null, r.shrinkBuf(t, e)); for (var i = "", s = 0; s < e; s++)i += String.fromCharCode(t[s]); return i } var a = !0, n = !0; try { String.fromCharCode.apply(null, [0]) } catch (t) { a = !1 } try { String.fromCharCode.apply(null, new Uint8Array(1)) } catch (t) { n = !1 } return { string2buf: t, buf2binstring: e } }(), s = function () { function t(t) { for (var e = t.length; --e >= 0;)t[e] = 0 } function e(t, e, a, n, r) { this.static_tree = t, this.extra_bits = e, this.extra_base = a, this.elems = n, this.max_length = r, this.has_stree = t && t.length } function a(t, e) { this.dyn_tree = t, this.max_code = 0, this.stat_desc = e } function n(t) { return t < 256 ? it[t] : it[256 + (t >>> 7)] } function i(t, e) { t.pending_buf[t.pending++] = 255 & e, t.pending_buf[t.pending++] = e >>> 8 & 255 } function s(t, e, a) { t.bi_valid > Q - a ? (t.bi_buf |= e << t.bi_valid & 65535, i(t, t.bi_buf), t.bi_buf = e >> Q - t.bi_valid, t.bi_valid += a - Q) : (t.bi_buf |= e << t.bi_valid & 65535, t.bi_valid += a) } function h(t, e, a) { s(t, a[2 * e], a[2 * e + 1]) } function _(t, e) { var a = 0; do a |= 1 & t, t >>>= 1, a <<= 1; while (--e > 0); return a >>> 1 } function l(t) { 16 === t.bi_valid ? (i(t, t.bi_buf), t.bi_buf = 0, t.bi_valid = 0) : t.bi_valid >= 8 && (t.pending_buf[t.pending++] = 255 & t.bi_buf, t.bi_buf >>= 8, t.bi_valid -= 8) } function o(t, e) { var a, n, r, i, s, h, _ = e.dyn_tree, l = e.max_code, o = e.stat_desc.static_tree, d = e.stat_desc.has_stree, u = e.stat_desc.extra_bits, f = e.stat_desc.extra_base, c = e.stat_desc.max_length, g = 0; for (i = 0; i <= N; i++)t.bl_count[i] = 0; for (_[2 * t.heap[t.heap_max] + 1] = 0, a = t.heap_max + 1; a < M; a++)n = t.heap[a], i = _[2 * _[2 * n + 1] + 1] + 1, i > c && (i = c, g++), _[2 * n + 1] = i, n > l || (t.bl_count[i]++, s = 0, n >= f && (s = u[n - f]), h = _[2 * n], t.opt_len += h * (i + s), d && (t.static_len += h * (o[2 * n + 1] + s))); if (0 !== g) { do { for (i = c - 1; 0 === t.bl_count[i];)i--; t.bl_count[i]--, t.bl_count[i + 1] += 2, t.bl_count[c]--, g -= 2 } while (g > 0); for (i = c; 0 !== i; i--)for (n = t.bl_count[i]; 0 !== n;)r = t.heap[--a], r > l || (_[2 * r + 1] !== i && (t.opt_len += (i - _[2 * r + 1]) * _[2 * r], _[2 * r + 1] = i), n--) } } function d(t, e, a) { var n, r, i = new Array(N + 1), s = 0; for (n = 1; n <= N; n++)i[n] = s = s + a[n - 1] << 1; for (r = 0; r <= e; r++) { var h = t[2 * r + 1]; 0 !== h && (t[2 * r] = _(i[h]++, h)) } } function u() { var t, a, n, r, i, s = new Array(N + 1); for (n = 0, r = 0; r < q - 1; r++)for (ht[r] = n, t = 0; t < 1 << Z[r]; t++)st[n++] = r; for (st[n - 1] = r, i = 0, r = 0; r < 16; r++)for (_t[r] = i, t = 0; t < 1 << $[r]; t++)it[i++] = r; for (i >>= 7; r < J; r++)for (_t[r] = i << 7, t = 0; t < 1 << $[r] - 7; t++)it[256 + i++] = r; for (a = 0; a <= N; a++)s[a] = 0; for (t = 0; t <= 143;)nt[2 * t + 1] = 8, t++, s[8]++; for (; t <= 255;)nt[2 * t + 1] = 9, t++, s[9]++; for (; t <= 279;)nt[2 * t + 1] = 7, t++, s[7]++; for (; t <= 287;)nt[2 * t + 1] = 8, t++, s[8]++; for (d(nt, G + 1, s), t = 0; t < J; t++)rt[2 * t + 1] = 5, rt[2 * t] = _(t, 5); lt = new e(nt, Z, F + 1, G, N), ot = new e(rt, $, 0, J, N), dt = new e(new Array(0), tt, 0, K, R) } function f(t) { var e; for (e = 0; e < G; e++)t.dyn_ltree[2 * e] = 0; for (e = 0; e < J; e++)t.dyn_dtree[2 * e] = 0; for (e = 0; e < K; e++)t.bl_tree[2 * e] = 0; t.dyn_ltree[2 * V] = 1, t.opt_len = t.static_len = 0, t.last_lit = t.matches = 0 } function c(t) { t.bi_valid > 8 ? i(t, t.bi_buf) : t.bi_valid > 0 && (t.pending_buf[t.pending++] = t.bi_buf), t.bi_buf = 0, t.bi_valid = 0 } function g(t, e, a, n) { c(t), n && (i(t, a), i(t, ~a)), r.arraySet(t.pending_buf, t.window, e, a, t.pending), t.pending += a } function p(t, e, a, n) { var r = 2 * e, i = 2 * a; return t[r] < t[i] || t[r] === t[i] && n[e] <= n[a] } function b(t, e, a) { for (var n = t.heap[a], r = a << 1; r <= t.heap_len && (r < t.heap_len && p(e, t.heap[r + 1], t.heap[r], t.depth) && r++, !p(e, n, t.heap[r], t.depth));)t.heap[a] = t.heap[r], a = r, r <<= 1; t.heap[a] = n } function w(t, e, a) { var r, i, _, l, o = 0; if (0 !== t.last_lit) do r = t.pending_buf[t.d_buf + 2 * o] << 8 | t.pending_buf[t.d_buf + 2 * o + 1], i = t.pending_buf[t.l_buf + o], o++, 0 === r ? h(t, i, e) : (_ = st[i], h(t, _ + F + 1, e), l = Z[_], 0 !== l && (i -= ht[_], s(t, i, l)), r--, _ = n(r), h(t, _, a), l = $[_], 0 !== l && (r -= _t[_], s(t, r, l))); while (o < t.last_lit); h(t, V, e) } function v(t, e) { var a, n, r, i = e.dyn_tree, s = e.stat_desc.static_tree, h = e.stat_desc.has_stree, _ = e.stat_desc.elems, l = -1; for (t.heap_len = 0, t.heap_max = M, a = 0; a < _; a++)0 !== i[2 * a] ? (t.heap[++t.heap_len] = l = a, t.depth[a] = 0) : i[2 * a + 1] = 0; for (; t.heap_len < 2;)r = t.heap[++t.heap_len] = l < 2 ? ++l : 0, i[2 * r] = 1, t.depth[r] = 0, t.opt_len--, h && (t.static_len -= s[2 * r + 1]); for (e.max_code = l, a = t.heap_len >> 1; a >= 1; a--)b(t, i, a); r = _; do a = t.heap[1], t.heap[1] = t.heap[t.heap_len--], b(t, i, 1), n = t.heap[1], t.heap[--t.heap_max] = a, t.heap[--t.heap_max] = n, i[2 * r] = i[2 * a] + i[2 * n], t.depth[r] = (t.depth[a] >= t.depth[n] ? t.depth[a] : t.depth[n]) + 1, i[2 * a + 1] = i[2 * n + 1] = r, t.heap[1] = r++, b(t, i, 1); while (t.heap_len >= 2); t.heap[--t.heap_max] = t.heap[1], o(t, e), d(i, l, t.bl_count) } function m(t, e, a) { var n, r, i = -1, s = e[1], h = 0, _ = 7, l = 4; for (0 === s && (_ = 138, l = 3), e[2 * (a + 1) + 1] = 65535, n = 0; n <= a; n++)r = s, s = e[2 * (n + 1) + 1], ++h < _ && r === s || (h < l ? t.bl_tree[2 * r] += h : 0 !== r ? (r !== i && t.bl_tree[2 * r]++, t.bl_tree[2 * W]++) : h <= 10 ? t.bl_tree[2 * X]++ : t.bl_tree[2 * Y]++, h = 0, i = r, 0 === s ? (_ = 138, l = 3) : r === s ? (_ = 6, l = 3) : (_ = 7, l = 4)) } function k(t, e, a) { var n, r, i = -1, _ = e[1], l = 0, o = 7, d = 4; for (0 === _ && (o = 138, d = 3), n = 0; n <= a; n++)if (r = _, _ = e[2 * (n + 1) + 1], !(++l < o && r === _)) { if (l < d) { do h(t, r, t.bl_tree); while (0 !== --l) } else 0 !== r ? (r !== i && (h(t, r, t.bl_tree), l--), h(t, W, t.bl_tree), s(t, l - 3, 2)) : l <= 10 ? (h(t, X, t.bl_tree), s(t, l - 3, 3)) : (h(t, Y, t.bl_tree), s(t, l - 11, 7)); l = 0, i = r, 0 === _ ? (o = 138, d = 3) : r === _ ? (o = 6, d = 3) : (o = 7, d = 4) } } function y(t) { var e; for (m(t, t.dyn_ltree, t.l_desc.max_code), m(t, t.dyn_dtree, t.d_desc.max_code), v(t, t.bl_desc), e = K - 1; e >= 3 && 0 === t.bl_tree[2 * et[e] + 1]; e--); return t.opt_len += 3 * (e + 1) + 5 + 5 + 4, e } function z(t, e, a, n) { var r; for (s(t, e - 257, 5), s(t, a - 1, 5), s(t, n - 4, 4), r = 0; r < n; r++)s(t, t.bl_tree[2 * et[r] + 1], 3); k(t, t.dyn_ltree, e - 1), k(t, t.dyn_dtree, a - 1) } function x(t) { var e, a = 4093624447; for (e = 0; e <= 31; e++, a >>>= 1)if (1 & a && 0 !== t.dyn_ltree[2 * e]) return U; if (0 !== t.dyn_ltree[18] || 0 !== t.dyn_ltree[20] || 0 !== t.dyn_ltree[26]) return D; for (e = 32; e < F; e++)if (0 !== t.dyn_ltree[2 * e]) return D; return U } function B(t) { ut || (u(), ut = !0), t.l_desc = new a(t.dyn_ltree, lt), t.d_desc = new a(t.dyn_dtree, ot), t.bl_desc = new a(t.bl_tree, dt), t.bi_buf = 0, t.bi_valid = 0, f(t) } function A(t, e, a, n) { s(t, (I << 1) + (n ? 1 : 0), 3), g(t, e, a, !0) } function S(t) { s(t, L << 1, 3), h(t, V, nt), l(t) } function C(t, e, a, n) { var r, i, h = 0; t.level > 0 ? (t.strm.data_type === H && (t.strm.data_type = x(t)), v(t, t.l_desc), v(t, t.d_desc), h = y(t), r = t.opt_len + 3 + 7 >>> 3, i = t.static_len + 3 + 7 >>> 3, i <= r && (r = i)) : r = i = a + 5, a + 4 <= r && e !== -1 ? A(t, e, a, n) : t.strategy === j || i === r ? (s(t, (L << 1) + (n ? 1 : 0), 3), w(t, nt, rt)) : (s(t, (O << 1) + (n ? 1 : 0), 3), z(t, t.l_desc.max_code + 1, t.d_desc.max_code + 1, h + 1), w(t, t.dyn_ltree, t.dyn_dtree)), f(t), n && c(t) } function E(t, e, a) { return t.pending_buf[t.d_buf + 2 * t.last_lit] = e >>> 8 & 255, t.pending_buf[t.d_buf + 2 * t.last_lit + 1] = 255 & e, t.pending_buf[t.l_buf + t.last_lit] = 255 & a, t.last_lit++, 0 === e ? t.dyn_ltree[2 * a]++ : (t.matches++, e--, t.dyn_ltree[2 * (st[a] + F + 1)]++, t.dyn_dtree[2 * n(e)]++), t.last_lit === t.lit_bufsize - 1 } var j = 4, U = 0, D = 1, H = 2, I = 0, L = 1, O = 2, P = 3, T = 258, q = 29, F = 256, G = F + 1 + q, J = 30, K = 19, M = 2 * G + 1, N = 15, Q = 16, R = 7, V = 256, W = 16, X = 17, Y = 18, Z = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0], $ = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13], tt = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7], et = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], at = 512, nt = new Array(2 * (G + 2)); t(nt); var rt = new Array(2 * J); t(rt); var it = new Array(at); t(it); var st = new Array(T - P + 1); t(st); var ht = new Array(q); t(ht); var _t = new Array(J); t(_t); var lt, ot, dt, ut = !1; return { _tr_init: B, _tr_stored_block: A, _tr_align: S, _tr_flush_block: C, _tr_tally: E } }(), h = function () { function t(t, e) { return t.msg = a[e], e } function i(t) { return (t << 1) - (t > 4 ? 9 : 0) } function h(t) { for (var e = t.length; --e >= 0;)t[e] = 0 } function _(t) { var e = t.state, a = e.pending; a > t.avail_out && (a = t.avail_out), 0 !== a && (r.arraySet(t.output, e.pending_buf, e.pending_out, a, t.next_out), t.next_out += a, e.pending_out += a, t.total_out += a, t.avail_out -= a, e.pending -= a, 0 === e.pending && (e.pending_out = 0)) } function l(t, e) { s._tr_flush_block(t, t.block_start >= 0 ? t.block_start : -1, t.strstart - t.block_start, e), t.block_start = t.strstart, _(t.strm) } function o(t, e) { t.pending_buf[t.pending++] = e } function d(t, e) { t.pending_buf[t.pending++] = e >>> 8 & 255, t.pending_buf[t.pending++] = 255 & e } function u(t, a, i, s) { var h = t.avail_in; return h > s && (h = s), 0 === h ? 0 : (t.avail_in -= h, r.arraySet(a, t.input, t.next_in, h, i), 1 === t.state.wrap ? t.adler = e(t.adler, a, h, i) : 2 === t.state.wrap && (t.adler = n(t.adler, a, h, i)), t.next_in += h, t.total_in += h, h) } function f(t, e) { var a, n, r = t.max_chain_length, i = t.strstart, s = t.prev_length, h = t.nice_match, _ = t.strstart > t.w_size - rt ? t.strstart - (t.w_size - rt) : 0, l = t.window, o = t.w_mask, d = t.prev, u = t.strstart + nt, f = l[i + s - 1], c = l[i + s]; t.prev_length >= t.good_match && (r >>= 2), h > t.lookahead && (h = t.lookahead); do if (a = e, l[a + s] === c && l[a + s - 1] === f && l[a] === l[i] && l[++a] === l[i + 1]) { i += 2, a++; do; while (l[++i] === l[++a] && l[++i] === l[++a] && l[++i] === l[++a] && l[++i] === l[++a] && l[++i] === l[++a] && l[++i] === l[++a] && l[++i] === l[++a] && l[++i] === l[++a] && i < u); if (n = nt - (u - i), i = u - nt, n > s) { if (t.match_start = e, s = n, n >= h) break; f = l[i + s - 1], c = l[i + s] } } while ((e = d[e & o]) > _ && 0 !== --r); return s <= t.lookahead ? s : t.lookahead } function c(t) { var e, a, n, i, s, h = t.w_size; do { if (i = t.window_size - t.lookahead - t.strstart, t.strstart >= h + (h - rt)) { r.arraySet(t.window, t.window, h, h, 0), t.match_start -= h, t.strstart -= h, t.block_start -= h, a = t.hash_size, e = a; do n = t.head[--e], t.head[e] = n >= h ? n - h : 0; while (--a); a = h, e = a; do n = t.prev[--e], t.prev[e] = n >= h ? n - h : 0; while (--a); i += h } if (0 === t.strm.avail_in) break; if (a = u(t.strm, t.window, t.strstart + t.lookahead, i), t.lookahead += a, t.lookahead + t.insert >= at) for (s = t.strstart - t.insert, t.ins_h = t.window[s], t.ins_h = (t.ins_h << t.hash_shift ^ t.window[s + 1]) & t.hash_mask; t.insert && (t.ins_h = (t.ins_h << t.hash_shift ^ t.window[s + at - 1]) & t.hash_mask, t.prev[s & t.w_mask] = t.head[t.ins_h], t.head[t.ins_h] = s, s++, t.insert--, !(t.lookahead + t.insert < at));); } while (t.lookahead < rt && 0 !== t.strm.avail_in) } function g(t, e) { var a = 65535; for (a > t.pending_buf_size - 5 && (a = t.pending_buf_size - 5); ;) { if (t.lookahead <= 1) { if (c(t), 0 === t.lookahead && e === U) return ft; if (0 === t.lookahead) break } t.strstart += t.lookahead, t.lookahead = 0; var n = t.block_start + a; if ((0 === t.strstart || t.strstart >= n) && (t.lookahead = t.strstart - n, t.strstart = n, l(t, !1), 0 === t.strm.avail_out)) return ft; if (t.strstart - t.block_start >= t.w_size - rt && (l(t, !1), 0 === t.strm.avail_out)) return ft } return t.insert = 0, e === I ? (l(t, !0), 0 === t.strm.avail_out ? gt : pt) : t.strstart > t.block_start && (l(t, !1), 0 === t.strm.avail_out) ? ft : ft } function p(t, e) { for (var a, n; ;) { if (t.lookahead < rt) { if (c(t), t.lookahead < rt && e === U) return ft; if (0 === t.lookahead) break } if (a = 0, t.lookahead >= at && (t.ins_h = (t.ins_h << t.hash_shift ^ t.window[t.strstart + at - 1]) & t.hash_mask, a = t.prev[t.strstart & t.w_mask] = t.head[t.ins_h], t.head[t.ins_h] = t.strstart), 0 !== a && t.strstart - a <= t.w_size - rt && (t.match_length = f(t, a)), t.match_length >= at) if (n = s._tr_tally(t, t.strstart - t.match_start, t.match_length - at), t.lookahead -= t.match_length, t.match_length <= t.max_lazy_match && t.lookahead >= at) { t.match_length--; do t.strstart++, t.ins_h = (t.ins_h << t.hash_shift ^ t.window[t.strstart + at - 1]) & t.hash_mask, a = t.prev[t.strstart & t.w_mask] = t.head[t.ins_h], t.head[t.ins_h] = t.strstart; while (0 !== --t.match_length); t.strstart++ } else t.strstart += t.match_length, t.match_length = 0, t.ins_h = t.window[t.strstart], t.ins_h = (t.ins_h << t.hash_shift ^ t.window[t.strstart + 1]) & t.hash_mask; else n = s._tr_tally(t, 0, t.window[t.strstart]), t.lookahead--, t.strstart++; if (n && (l(t, !1), 0 === t.strm.avail_out)) return ft } return t.insert = t.strstart < at - 1 ? t.strstart : at - 1, e === I ? (l(t, !0), 0 === t.strm.avail_out ? gt : pt) : t.last_lit && (l(t, !1), 0 === t.strm.avail_out) ? ft : ct } function b(t, e) { for (var a, n, r; ;) { if (t.lookahead < rt) { if (c(t), t.lookahead < rt && e === U) return ft; if (0 === t.lookahead) break } if (a = 0, t.lookahead >= at && (t.ins_h = (t.ins_h << t.hash_shift ^ t.window[t.strstart + at - 1]) & t.hash_mask, a = t.prev[t.strstart & t.w_mask] = t.head[t.ins_h], t.head[t.ins_h] = t.strstart), t.prev_length = t.match_length, t.prev_match = t.match_start, t.match_length = at - 1, 0 !== a && t.prev_length < t.max_lazy_match && t.strstart - a <= t.w_size - rt && (t.match_length = f(t, a), t.match_length <= 5 && (t.strategy === J || t.match_length === at && t.strstart - t.match_start > 4096) && (t.match_length = at - 1)), t.prev_length >= at && t.match_length <= t.prev_length) { r = t.strstart + t.lookahead - at, n = s._tr_tally(t, t.strstart - 1 - t.prev_match, t.prev_length - at), t.lookahead -= t.prev_length - 1, t.prev_length -= 2; do ++t.strstart <= r && (t.ins_h = (t.ins_h << t.hash_shift ^ t.window[t.strstart + at - 1]) & t.hash_mask, a = t.prev[t.strstart & t.w_mask] = t.head[t.ins_h], t.head[t.ins_h] = t.strstart); while (0 !== --t.prev_length); if (t.match_available = 0, t.match_length = at - 1, t.strstart++, n && (l(t, !1), 0 === t.strm.avail_out)) return ft } else if (t.match_available) { if (n = s._tr_tally(t, 0, t.window[t.strstart - 1]), n && l(t, !1), t.strstart++, t.lookahead--, 0 === t.strm.avail_out) return ft } else t.match_available = 1, t.strstart++, t.lookahead-- } return t.match_available && (n = s._tr_tally(t, 0, t.window[t.strstart - 1]), t.match_available = 0), t.insert = t.strstart < at - 1 ? t.strstart : at - 1, e === I ? (l(t, !0), 0 === t.strm.avail_out ? gt : pt) : t.last_lit && (l(t, !1), 0 === t.strm.avail_out) ? ft : ct } function w(t, e) { for (var a, n, r, i, h = t.window; ;) { if (t.lookahead <= nt) { if (c(t), t.lookahead <= nt && e === U) return ft; if (0 === t.lookahead) break } if (t.match_length = 0, t.lookahead >= at && t.strstart > 0 && (r = t.strstart - 1, n = h[r], n === h[++r] && n === h[++r] && n === h[++r])) { i = t.strstart + nt; do; while (n === h[++r] && n === h[++r] && n === h[++r] && n === h[++r] && n === h[++r] && n === h[++r] && n === h[++r] && n === h[++r] && r < i); t.match_length = nt - (i - r), t.match_length > t.lookahead && (t.match_length = t.lookahead) } if (t.match_length >= at ? (a = s._tr_tally(t, 1, t.match_length - at), t.lookahead -= t.match_length, t.strstart += t.match_length, t.match_length = 0) : (a = s._tr_tally(t, 0, t.window[t.strstart]), t.lookahead--, t.strstart++), a && (l(t, !1), 0 === t.strm.avail_out)) return ft } return t.insert = 0, e === I ? (l(t, !0), 0 === t.strm.avail_out ? gt : pt) : t.last_lit && (l(t, !1), 0 === t.strm.avail_out) ? ft : ct } function v(t, e) { for (var a; ;) { if (0 === t.lookahead && (c(t), 0 === t.lookahead)) { if (e === U) return ft; break } if (t.match_length = 0, a = s._tr_tally(t, 0, t.window[t.strstart]), t.lookahead--, t.strstart++, a && (l(t, !1), 0 === t.strm.avail_out)) return ft } return t.insert = 0, e === I ? (l(t, !0), 0 === t.strm.avail_out ? gt : pt) : t.last_lit && (l(t, !1), 0 === t.strm.avail_out) ? ft : ct } function m(t, e, a, n, r) { this.good_length = t, this.max_lazy = e, this.nice_length = a, this.max_chain = n, this.func = r } function k(t) { t.window_size = 2 * t.w_size, h(t.head), t.max_lazy_match = j[t.level].max_lazy, t.good_match = j[t.level].good_length, t.nice_match = j[t.level].nice_length, t.max_chain_length = j[t.level].max_chain, t.strstart = 0, t.block_start = 0, t.lookahead = 0, t.insert = 0, t.match_length = t.prev_length = at - 1, t.match_available = 0, t.ins_h = 0 } function y() { this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = R, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new r.Buf16(2 * tt), this.dyn_dtree = new r.Buf16(2 * (2 * Z + 1)), this.bl_tree = new r.Buf16(2 * (2 * $ + 1)), h(this.dyn_ltree), h(this.dyn_dtree), h(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new r.Buf16(et + 1), this.heap = new r.Buf16(2 * Y + 1), h(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new r.Buf16(2 * Y + 1), h(this.depth), this.l_buf = 0, this.lit_bufsize = 0, this.last_lit = 0, this.d_buf = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0 } function z(e) { var a; return e && e.state ? (e.total_in = e.total_out = 0, e.data_type = Q, a = e.state, a.pending = 0, a.pending_out = 0, a.wrap < 0 && (a.wrap = -a.wrap), a.status = a.wrap ? st : dt, e.adler = 2 === a.wrap ? 0 : 1, a.last_flush = U, s._tr_init(a), O) : t(e, T) } function x(t) { var e = z(t); return e === O && k(t.state), e } function B(t, e) { return t && t.state ? 2 !== t.state.wrap ? T : (t.state.gzhead = e, O) : T } function A(e, a, n, i, s, h) { if (!e) return T; var _ = 1; if (a === G && (a = 6), i < 0 ? (_ = 0, i = -i) : i > 15 && (_ = 2, i -= 16), s < 1 || s > V || n !== R || i < 8 || i > 15 || a < 0 || a > 9 || h < 0 || h > N) return t(e, T); 8 === i && (i = 9); var l = new y; return e.state = l, l.strm = e, l.wrap = _, l.gzhead = null, l.w_bits = i, l.w_size = 1 << l.w_bits, l.w_mask = l.w_size - 1, l.hash_bits = s + 7, l.hash_size = 1 << l.hash_bits, l.hash_mask = l.hash_size - 1, l.hash_shift = ~~((l.hash_bits + at - 1) / at), l.window = new r.Buf8(2 * l.w_size), l.head = new r.Buf16(l.hash_size), l.prev = new r.Buf16(l.w_size), l.lit_bufsize = 1 << s + 6, l.pending_buf_size = 4 * l.lit_bufsize, l.pending_buf = new r.Buf8(l.pending_buf_size), l.d_buf = 1 * l.lit_bufsize, l.l_buf = 3 * l.lit_bufsize, l.level = a, l.strategy = h, l.method = n, x(e) } function S(e, a) { var r, l, u, f; if (!e || !e.state || a > L || a < 0) return e ? t(e, T) : T; if (l = e.state, !e.output || !e.input && 0 !== e.avail_in || l.status === ut && a !== I) return t(e, 0 === e.avail_out ? F : T); if (l.strm = e, r = l.last_flush, l.last_flush = a, l.status === st) if (2 === l.wrap) e.adler = 0, o(l, 31), o(l, 139), o(l, 8), l.gzhead ? (o(l, (l.gzhead.text ? 1 : 0) + (l.gzhead.hcrc ? 2 : 0) + (l.gzhead.extra ? 4 : 0) + (l.gzhead.name ? 8 : 0) + (l.gzhead.comment ? 16 : 0)), o(l, 255 & l.gzhead.time), o(l, l.gzhead.time >> 8 & 255), o(l, l.gzhead.time >> 16 & 255), o(l, l.gzhead.time >> 24 & 255), o(l, 9 === l.level ? 2 : l.strategy >= K || l.level < 2 ? 4 : 0), o(l, 255 & l.gzhead.os), l.gzhead.extra && l.gzhead.extra.length && (o(l, 255 & l.gzhead.extra.length), o(l, l.gzhead.extra.length >> 8 & 255)), l.gzhead.hcrc && (e.adler = n(e.adler, l.pending_buf, l.pending, 0)), l.gzindex = 0, l.status = ht) : (o(l, 0), o(l, 0), o(l, 0), o(l, 0), o(l, 0), o(l, 9 === l.level ? 2 : l.strategy >= K || l.level < 2 ? 4 : 0), o(l, bt), l.status = dt); else { var c = R + (l.w_bits - 8 << 4) << 8, g = -1; g = l.strategy >= K || l.level < 2 ? 0 : l.level < 6 ? 1 : 6 === l.level ? 2 : 3, c |= g << 6, 0 !== l.strstart && (c |= it), c += 31 - c % 31, l.status = dt, d(l, c), 0 !== l.strstart && (d(l, e.adler >>> 16), d(l, 65535 & e.adler)), e.adler = 1 } if (l.status === ht) if (l.gzhead.extra) { for (u = l.pending; l.gzindex < (65535 & l.gzhead.extra.length) && (l.pending !== l.pending_buf_size || (l.gzhead.hcrc && l.pending > u && (e.adler = n(e.adler, l.pending_buf, l.pending - u, u)), _(e), u = l.pending, l.pending !== l.pending_buf_size));)o(l, 255 & l.gzhead.extra[l.gzindex]), l.gzindex++; l.gzhead.hcrc && l.pending > u && (e.adler = n(e.adler, l.pending_buf, l.pending - u, u)), l.gzindex === l.gzhead.extra.length && (l.gzindex = 0, l.status = _t) } else l.status = _t; if (l.status === _t) if (l.gzhead.name) { u = l.pending; do { if (l.pending === l.pending_buf_size && (l.gzhead.hcrc && l.pending > u && (e.adler = n(e.adler, l.pending_buf, l.pending - u, u)), _(e), u = l.pending, l.pending === l.pending_buf_size)) { f = 1; break } f = l.gzindex < l.gzhead.name.length ? 255 & l.gzhead.name.charCodeAt(l.gzindex++) : 0, o(l, f) } while (0 !== f); l.gzhead.hcrc && l.pending > u && (e.adler = n(e.adler, l.pending_buf, l.pending - u, u)), 0 === f && (l.gzindex = 0, l.status = lt) } else l.status = lt; if (l.status === lt) if (l.gzhead.comment) { u = l.pending; do { if (l.pending === l.pending_buf_size && (l.gzhead.hcrc && l.pending > u && (e.adler = n(e.adler, l.pending_buf, l.pending - u, u)), _(e), u = l.pending, l.pending === l.pending_buf_size)) { f = 1; break } f = l.gzindex < l.gzhead.comment.length ? 255 & l.gzhead.comment.charCodeAt(l.gzindex++) : 0, o(l, f) } while (0 !== f); l.gzhead.hcrc && l.pending > u && (e.adler = n(e.adler, l.pending_buf, l.pending - u, u)), 0 === f && (l.status = ot) } else l.status = ot; if (l.status === ot && (l.gzhead.hcrc ? (l.pending + 2 > l.pending_buf_size && _(e), l.pending + 2 <= l.pending_buf_size && (o(l, 255 & e.adler), o(l, e.adler >> 8 & 255), e.adler = 0, l.status = dt)) : l.status = dt), 0 !== l.pending) { if (_(e), 0 === e.avail_out) return l.last_flush = -1, O } else if (0 === e.avail_in && i(a) <= i(r) && a !== I) return t(e, F); if (l.status === ut && 0 !== e.avail_in) return t(e, F); if (0 !== e.avail_in || 0 !== l.lookahead || a !== U && l.status !== ut) { var p = l.strategy === K ? v(l, a) : l.strategy === M ? w(l, a) : j[l.level].func(l, a); if (p !== gt && p !== pt || (l.status = ut), p === ft || p === gt) return 0 === e.avail_out && (l.last_flush = -1), O; if (p === ct && (a === D ? s._tr_align(l) : a !== L && (s._tr_stored_block(l, 0, 0, !1), a === H && (h(l.head), 0 === l.lookahead && (l.strstart = 0, l.block_start = 0, l.insert = 0))), _(e), 0 === e.avail_out)) return l.last_flush = -1, O } return a !== I ? O : l.wrap <= 0 ? P : (2 === l.wrap ? (o(l, 255 & e.adler), o(l, e.adler >> 8 & 255), o(l, e.adler >> 16 & 255), o(l, e.adler >> 24 & 255), o(l, 255 & e.total_in), o(l, e.total_in >> 8 & 255), o(l, e.total_in >> 16 & 255), o(l, e.total_in >> 24 & 255)) : (d(l, e.adler >>> 16), d(l, 65535 & e.adler)), _(e), l.wrap > 0 && (l.wrap = -l.wrap), 0 !== l.pending ? O : P) } function C(e) { var a; return e && e.state ? (a = e.state.status, a !== st && a !== ht && a !== _t && a !== lt && a !== ot && a !== dt && a !== ut ? t(e, T) : (e.state = null, a === dt ? t(e, q) : O)) : T } function E(t, a) { var n, i, s, _, l, o, d, u, f = a.length; if (!t || !t.state) return T; if (n = t.state, _ = n.wrap, 2 === _ || 1 === _ && n.status !== st || n.lookahead) return T; for (1 === _ && (t.adler = e(t.adler, a, f, 0)), n.wrap = 0, f >= n.w_size && (0 === _ && (h(n.head), n.strstart = 0, n.block_start = 0, n.insert = 0), u = new r.Buf8(n.w_size), r.arraySet(u, a, f - n.w_size, n.w_size, 0), a = u, f = n.w_size), l = t.avail_in, o = t.next_in, d = t.input, t.avail_in = f, t.next_in = 0, t.input = a, c(n); n.lookahead >= at;) { i = n.strstart, s = n.lookahead - (at - 1); do n.ins_h = (n.ins_h << n.hash_shift ^ n.window[i + at - 1]) & n.hash_mask, n.prev[i & n.w_mask] = n.head[n.ins_h], n.head[n.ins_h] = i, i++; while (--s); n.strstart = i, n.lookahead = at - 1, c(n) } return n.strstart += n.lookahead, n.block_start = n.strstart, n.insert = n.lookahead, n.lookahead = 0, n.match_length = n.prev_length = at - 1, n.match_available = 0, t.next_in = o, t.input = d, t.avail_in = l, n.wrap = _, O } var j, U = 0, D = 1, H = 3, I = 4, L = 5, O = 0, P = 1, T = -2, q = -3, F = -5, G = -1, J = 1, K = 2, M = 3, N = 4, Q = 2, R = 8, V = 9, W = 29, X = 256, Y = X + 1 + W, Z = 30, $ = 19, tt = 2 * Y + 1, et = 15, at = 3, nt = 258, rt = nt + at + 1, it = 32, st = 42, ht = 69, _t = 73, lt = 91, ot = 103, dt = 113, ut = 666, ft = 1, ct = 2, gt = 3, pt = 4, bt = 3; return j = [new m(0, 0, 0, 0, g), new m(4, 4, 8, 4, p), new m(4, 5, 16, 8, p), new m(4, 6, 32, 32, p), new m(4, 4, 16, 16, b), new m(8, 16, 32, 32, b), new m(8, 16, 128, 128, b), new m(8, 32, 128, 256, b), new m(32, 128, 258, 1024, b), new m(32, 258, 258, 4096, b)], { deflateInit2: A, deflateSetHeader: B, deflate: S, deflateEnd: C, deflateSetDictionary: E } }(), _ = function () { function e(n) { if (!(this instanceof e)) return new e(n); this.options = r.assign({ level: c, method: p, chunkSize: 16384, windowBits: 15, memLevel: 8, strategy: g, to: "" }, n || {}); var s = this.options; s.raw && s.windowBits > 0 ? s.windowBits = -s.windowBits : s.gzip && s.windowBits > 0 && s.windowBits < 16 && (s.windowBits += 16), this.err = 0, this.msg = "", this.ended = !1, this.chunks = [], this.strm = new t, this.strm.avail_out = 0; var l = h.deflateInit2(this.strm, s.level, s.method, s.windowBits, s.memLevel, s.strategy); if (l !== d) throw new Error(a[l]); if (s.header && h.deflateSetHeader(this.strm, s.header), s.dictionary) { var o; if (o = "string" == typeof s.dictionary ? i.string2buf(s.dictionary) : "[object ArrayBuffer]" === _.call(s.dictionary) ? new Uint8Array(s.dictionary) : s.dictionary, l = h.deflateSetDictionary(this.strm, o), l !== d) throw new Error(a[l]); this._dict_set = !0 } } function n(t, n) { var r = new e(n); if (r.push(t, !0), r.err) throw r.msg || a[r.err]; return r.result } function s(t, e) { return e = e || {}, e.gzip = !0, n(t, e) } var _ = Object.prototype.toString, l = 0, o = 4, d = 0, u = 1, f = 2, c = -1, g = 0, p = 8; return e.prototype.push = function (t, e) { var a, n, s = this.strm, c = this.options.chunkSize; if (this.ended) return !1; n = e === ~~e ? e : e === !0 ? o : l, "string" == typeof t ? s.input = i.string2buf(t) : "[object ArrayBuffer]" === _.call(t) ? s.input = new Uint8Array(t) : s.input = t, s.next_in = 0, s.avail_in = s.input.length; do { if (0 === s.avail_out && (s.output = new r.Buf8(c), s.next_out = 0, s.avail_out = c), a = h.deflate(s, n), a !== u && a !== d) return this.onEnd(a), this.ended = !0, !1; 0 !== s.avail_out && (0 !== s.avail_in || n !== o && n !== f) || ("string" === this.options.to ? this.onData(i.buf2binstring(r.shrinkBuf(s.output, s.next_out))) : this.onData(r.shrinkBuf(s.output, s.next_out))) } while ((s.avail_in > 0 || 0 === s.avail_out) && a !== u); return n === o ? (a = h.deflateEnd(this.strm), this.onEnd(a), this.ended = !0, a === d) : n !== f || (this.onEnd(d), s.avail_out = 0, !0) }, e.prototype.onData = function (t) { this.chunks.push(t) }, e.prototype.onEnd = function (t) { t === d && ("string" === this.options.to ? this.result = this.chunks.join("") : this.result = r.flattenChunks(this.chunks)), this.chunks = [], this.err = t, this.msg = this.strm.msg }, { gzip: s } }(); return _ }(); } _600(); this.start = function () { _48(); _382(_579()) }; this.stop = _68; this.newPageView = _540; this.stopSession = _905; this.getSessionId = function () { return _12._56 }; this.getPageViewId = function () { return _12._52 }; this.tag = _100; this.star = _906; this.setVariable = _907; this.identify = _908; this.formSubmitAttempt = _543; this.formSubmitSuccess = _422; this.formSubmitFailure = _838; this.addFriction = function (_4, _19) { _145({ _4: _4, _545: _19 }) }; this.isRecording = function () { return _201 }; this.isReturningUser = function () { return _12._229 }; this.activateFeedback = _411; this.proxyAttachShadow = _281; this.recordingRate = _197; this.version = _231; this.lastUpdate = _884
        } function _510(_5) { var _556 = []; function _148(_92) { if (!_5.domMutationDetectorEnable || !_92 || _92.nodeType !== 1) return false; var _550 = _92.parentNode ? _92.parentNode.id : undefined; var _551 = _92.previousSibling ? _92.previousSibling.id : undefined; var _836 = _92.tagName; var _552 = _92.attributes ? _92.attributes.id : undefined; var _553 = _92.attributes ? _92.attributes.class : undefined; var _23 = _836; if (_5.domMutationUseParentNode && _550) _23 += '_' + _550; if (_5.domMutationUsePreviousSibling && _551) _23 += '_' + _551; if (_552) _23 += '_' + _552; if (_553) _23 += '_' + _553.replace(/\s/g, "_"); var _539 = +new Date(); var _67 = _556[_23]; var _385 = _67 ? _67._384 : 0; var _837 = _67 ? ((_539 - _67._766) / 1000) : 0; var _554 = _385 < _5.domMutationCountThreshold; var _555 = _837 < _5.domMutationTimeThresholdInSeconds; var _148 = _67 ? (_554 && _555) : false; if (!_554 || !_555) _385 = 0; _556[_23] = { _766: _539, _384: _385 + 1 }; return _148 } this._148 = _148 } function _809(_3, _5, _125, _9, _18, _159) { var _157, _50, _10, _150; var _402 = 'mf_liveHeatmaps'; var _31; var _214 = []; var _390; var _277 = false; function _48(_433, _437) { _50 = _433; _10 = _437; _277 = window.location.search.indexOf('mf_legacy=1') !== -1 ? true : false; _10('Live heatmaps starting'); _150 = _125._276(); if (!_150) { _10('Live heatmaps not initiated - could not create root HTML element'); return } if (!_3.opener) { _10('Live heatmaps not initiated - window.opener is missing'); return } _767() } function _68() { _318() } function _767() { _18._25(_3, 'message', function (_46) { _776(_46.data); switch (_46.data.message) { case 'MouseflowLiveHeatmaps_Init_Received': _3.clearInterval(_390); break; case 'MouseflowLiveHeatmaps_Init_Success': case 'MouseflowLiveHeatmaps_Hello': _157 = _46.origin; _768(_46.data.minDate, _46.data.filters, _46.data.filteredViews); _772(_46.data.scripts, function () { var message; if (_277) { message = { mfCommand: 'settings', value: { websiteSettings: _46.data.websiteSettings } } } else { _533(); _31.cssSelectorTracked = _46.data.websiteSettings.cssSelectorTracked; message = { mfCommand: 'settings_liveheatmap', value: _31 } } _3.postMessage(JSON.stringify(message), '*') }); break; case 'MouseflowLiveHeatmaps_StreamData_Chunk': _235(_46.data.requestUrl, true)._389(_46.data.dataChunk); break; case 'MouseflowLiveHeatmaps_StreamData_Success': _235(_46.data.requestUrl)._121(); break; case 'MouseflowLiveHeatmaps_StreamData_Error': _235(_46.data.requestUrl)._182(); break; case 'MouseflowLiveHeatmaps_RequestData_Success': _235(_46.data.requestUrl)._121(_46.data.responseText); break; case 'MouseflowLiveHeatmaps_RequestData_Error': _235(_46.data.requestUrl)._182(); break } }); _390 = _3.setInterval(_520, 500); _3.setTimeout(function () { _3.clearInterval(_390) }, 10000); _520() } function _520() { _425({ message: 'MouseflowLiveHeatmaps_Init', websiteId: _50, legacy: _277 }) } function _768(_770, _175, _771) { _31 = _526(); var _236 = _528(); var _267 = _5.location.search.match(/mf_liveHeatmaps=([^&]+)/); var _396 = typeof _3.name === 'string' && _3.name.indexOf('mf_liveHeatmaps') === 0 ? _3.name.slice(15).split('_') : []; var _769 = _267 || _396[1] === 'init'; if (_31 && !_769) { _31.filters.url = _236.url; _86(_31); return } _31 = { isMinimized: false, appUrlBase: _157, websiteId: _50, filters: _236, minDate: _770, filteredViews: _771 }; if (_175 && _175.view) { _31.selectedFilteredView = _175.view; delete _175.view } if (_175) { Object.keys(_175).forEach(function (_23) { var _4 = _175[_23]; if (_4 instanceof Date) _4 = _275(_4); _31.filters[_23] = _4 }) } if (_267 && _267[1] !== '1') _31.filters.maptype = _267[1]; else if (_396[2]) _31.filters.maptype = _396[2]; _86(_31); _3.name = 'mf_liveHeatmaps' } function _533() { _31.devices = [_31.filters.device]; _31.mapType = _31.filters.maptype; _31.url = _159._230() } function _772(_398, _158) { if (!_398) return; var _399 = 0; function _524() { if (_399 >= _398.length) { _158(); return } var _274 = _398[_399]; _786(_274); _399++; var _400 = document.createElement('script'); _400.src = _157 + _274; _400.onload = _524; _150.appendChild(_400) } _524() } function _526() { return _9._146(_3.localStorage.getItem(_402)) } function _86(_31) { if (_10) _10('Live heatmaps saving settings'); _31 = _31 ? _9._75(_31) : ''; _3.localStorage.setItem(_402, _31) } function _318() { if (_10) _10('Live heatmaps removing settings'); _3.localStorage.removeItem(_402) } function _235(_17, _774) { var _406 = _214.filter(function (_773) { return _773._17 === _17 })[0]; if (!_774 && _406) _214.splice(_214.indexOf(_406), 1); return _406 } function _778(_16) { if (typeof _16 !== 'object') return; _31 = _526(); var _236 = _528(); Object.keys(_16).forEach(function (_23) { var _4 = _16[_23]; if (_4 instanceof Date) _4 = _275(_4); _31.filters[_23] = _4 || undefined }); Object.keys(_236).forEach(function (_23) { if (!_31.filters[_23]) _31.filters[_23] = _236[_23] }); if (_31.filters.view) { _31.selectedFilteredView = _31.filters.view; delete _31.filters.view } _86(_31) } function _528() { var _195 = new Date(); _195 = new Date(_195.getFullYear(), _195.getMonth(), _195.getDate()); var _409 = new Date(_195); _409.setDate(_409.getDate() - 29); return { maptype: 'click', device: 'desktop', url: _159._230(), fromdate: _275(_409), todate: _275(_195) } } function _425(_15) { _3.opener.postMessage(_15, '*'); _10('Sent ' + _15.message + (_15.requestUrl ? ', request URL: ' + _15.requestUrl : '')) } function _776(_15) { if (_15.message && _15.message.indexOf('MouseflowLiveHeatmaps_') === 0) _10('Received ' + _15.message + (_15.requestUrl ? ', request URL: ' + _15.requestUrl : '')) } function _786(_274) { _10('Live heatmaps loading script: ' + _274) } function _275(_101) { return _101.getFullYear() + '-' + _531(_101.getMonth() + 1, '00') + '-' + _531(_101.getDate(), '00') } function _531(_777, _532) { return (_532 + _777).slice(-_532.length) } this._48 = _48; this._68 = _68; this._535 = function (_16) { _778(_16); if (_277) { _3.postMessage('{"mfCommand":"MouseflowHeatmap_UpdateHeatmap"}', '*') } else { _533(); var message = { mfCommand: 'settings_change', value: { settings: _31, reloadData: _16.maptype ? false : true } }; _3.postMessage(JSON.stringify(message), '*') } _10('Sent postmessage updateheatmap') }; _3.mouseflowHeatmap = { streamData: function (_17, _389, _121, _182) { _214.push({ _17: _17, _389: _389 || function () { }, _121: _121 || function () { }, _182: _182 || function () { } }); _425({ message: 'MouseflowLiveHeatmaps_StreamData', requestUrl: _17 }) }, getData: function (_17, _121, _182) { _214.push({ _17: _17, _121: _121 || function () { }, _182: _182 || function () { } }); _425({ message: 'MouseflowLiveHeatmaps_RequestData', requestUrl: _17 }) } } } function _808(_3, _125, _24, _9, _18, _5) { var _11 = _3.document, _157, _50, _10, _13, _150, _21, _577, _576, _574, _132, _102, _309, _130, _591, _178, _234, _225, _133, _105, _118; function _48(_779, _433, _217, _218, _317, _437) { _157 = _779; _50 = _433; _10 = _437; _13 = _760() || { _124: false, _83: 'exclude', _69: _217 || [], _65: _218 || [], _80: _317 || [] }; _10('Starting privacy tool'); _150 = _125._276(); if (!_150) { _10('Privacy tool not initiated - could not create root HTML element'); return } _780(); _24._59(function () { _781(); _86(_13) }, 1000); } function _68() { _764(); _125._354() } function _780() { _18._25(_3, 'message', function (event) { switch (event.data.message) { case 'MouseflowPrivacyTool_Hello': _10('Privacy tool API ready'); _225 = event.source; if (event.data.cssSelectorBlacklist) { _13._69 = event.data.cssSelectorBlacklist; _13._65 = event.data.cssSelectorWhitelist; _13._80 = event.data.cssSelectorTracked } _557(); break; case 'MouseflowPrivacyTool_Save_Success': _10('Successfully saved CSS lists'); if (_133) _133(); _133 = undefined; _105 = undefined; break; case 'MouseflowPrivacyTool_Save_Failed': _10('Failed saving CSS lists'); if (_105) _105(); _133 = undefined; _105 = undefined; _413('Uh oh! We couldn\'t save your changes.<br><br>' + 'Please refresh the page and try again.'); break; case 'MouseflowPrivacyTool_Unauthorized': _10('Privacy tool API logged out - cannot save'); if (_105) _105(); _133 = undefined; _105 = undefined; _413('Uh oh! We couldn\'t save your changes.<br><br>' + 'Please log into Mouseflow and try again.'); break } }); if (_3.opener) { _10('Loading privacy tool API using window.opener'); _3.opener.postMessage({ message: 'MouseflowPrivacyTool_Hello' }, '*') } _24._59(function () { if (!_225) { _10('Loading privacy tool API using iframe'); var _253 = _11.createElement('iframe'); _253.style.width = '0px'; _253.style.height = '0px'; _253.style.display = 'none'; _253.src = _157 + '/websites/' + _50 + '/privacytool'; _150.appendChild(_253); _24._59(function () { if (!_225) { _10('Loading privacy tool API timed out'); _763('We\'re having trouble loading the Privacy Tool on this page. Please try ' + 'refreshing the page or logging in to Mouseflow and reloading the Privacy Tool from there.<br><br>' + 'If you need help, please don\'t hesitate to reach out to us at:  <a class="green" href="mailto:support@mouseflow.com">support@mouseflow.com</a>') } }, 5000) } }, 2000) } function _781() { _21 = _788(_13); _577 = _21.querySelector('.tool-exclude output'); _576 = _21.querySelector('.tool-whitelist output'); _574 = _21.querySelector('.tool-track output'); _132 = _21.querySelector('.tool-status-text'); _102 = _21.querySelector('.btn-widget'); _309 = _21.querySelector('.tool-loading h2'); _13._69.forEach(_597); _13._65.forEach(_598); _13._80.forEach(_596); _150.appendChild(_21); _130 = _789(); _21.appendChild(_130); _9._254(_11.body, 'mf-privacy-tool-opened', !_13._124); _782(); _557() } function _557() { if (_21 && _225) { _9._44(_21, 'is-loading'); _108(); _783(); _316() } } function _423() { _318(); _68(); _3.close() } function _782() { _18._25(_21, 'click', '.mf-tool-close', _423, { _91: true }) } function _783() { _18._25(_21, 'click', '.mf-tool-toggle', _751, { _91: true }); _18._25(_21, 'click', '.mf-tool-close', _423, { _91: true }); _18._25(_21, 'click', '.mf-tool-exclude', _742, { _91: true }); _18._25(_21, 'click', '.mf-tool-whitelist', _743, { _91: true }); _18._25(_21, 'click', '.mf-tool-track', _744, { _91: true }); _18._25(_21, 'click', '.highlight-excluded', _745, { _91: true }); _18._25(_21, 'click', '.highlight-whitelisted', _746, { _91: true }); _18._25(_21, 'click', '.highlight-tracked', _747, { _91: true }); _18._25(_21, 'click', '.mf-remove-excluded', _748, { _91: true }); _18._25(_21, 'click', '.mf-remove-whitelisted', _749, { _91: true }); _18._25(_21, 'click', '.mf-remove-tracked', _750, { _91: true }); _18._25(_21, 'submit', _752, { _91: true }); _18._25(_11, 'mouseover', _762, { _34: true }); _18._25(_11, 'mouseleave', _753, { _34: true }); _18._25(_11, 'mouseup', _754, { _34: true }); _18._25(_11, 'mouseenter', _142, { _34: true }); _18._25(_11, 'mousemove', _142, { _34: true }); _18._25(_11, 'mousedown', _142, { _34: true }); _18._25(_11, 'click', _142, { _34: true }); _18._25(_11, 'mouseout', _142, { _34: true }); _18._25(_11, 'scroll', _108, { _34: true, _208: true }); _18._25(_3, 'resize', _108, { _34: true, _208: true }); var MutationObserver = _3.MutationObserver || _3.WebKitMutationObserver || _3.MozMutationObserver; if (MutationObserver) { _234 = new MutationObserver(function (_582) { var _775 = _582.some(function (_67) { if (_67.target.nodeType !== 1 || _9._71(_67.target, '#mouseflow *')) return false; var _784 = _67.oldValue && _67.oldValue.indexOf('mf-highlight') !== -1; var _785 = _67.target.className && _67.target.className.indexOf('mf-highlight') !== -1; var _765 = _784 || _785; if (_67.type === 'attributes' && _67.attributeName === 'class' && _765) return false; return true }); if (_775) _108(); _582.forEach(function (_67) { _67.addedNodes.forEach(function (_26) { if (!_26.shadowRoot) return; _234.observe(_26.shadowRoot, { childList: true, subtree: true }); _316(_26) }) }) }); _234.observe(_11, { attributes: true, childList: true, characterData: true, subtree: true, attributeOldValue: true }) } } function _764() { _18._522(); if (_234) _234.disconnect() } function _316(_168) { if (!_118) _118 = _823(); if (!_168) _168 = _11; for (var _54 = _168.firstChild; _54; _54 = _54.nextSibling) { _316(_54); var _97 = _54.shadowRoot; if (!_97) continue; _316(_97); if (_97.adoptedStyleSheets) { if (_97.adoptedStyleSheets.indexOf(_118) > -1) continue; var _585 = Array.prototype.slice.call(_97.adoptedStyleSheets); _585.push(_118); _97.adoptedStyleSheets = _585 } else { if (_97.querySelector('.mf-privacy-tool-style')) continue; var _96 = _11.createElement('style'); _96.type = 'text/css'; _96.innerHTML = _365(); _96.className = 'mf-privacy-tool-style'; _97.appendChild(_96) } } } function _751() { _13._124 = !_13._124; _86(_13); _9._254(_21, 'tool-closed', _13._124); _9._254(_11.body, 'mf-privacy-tool-opened', !_13._124); var _304 = _21.getElementsByClassName('step')[0]; var _305 = _21.getElementsByClassName('tool-container')[0]; if (_13._124) { _9._44(_304, 'fade-out'); _9._62(_304, 'fade-in'); _9._44(_305, 'fade-in'); _9._62(_305, 'fade-out') } else { _9._44(_304, 'fade-in'); _9._62(_304, 'fade-out'); _9._44(_305, 'fade-out'); _9._62(_305, 'fade-in') } } function _742() { _13._83 = 'exclude'; _86(_13); _9._44(_21.getElementsByClassName('mf-tool-whitelist')[0], 'active'); _9._44(_21.getElementsByClassName('tool-whitelist')[0], 'active'); _9._44(_21.getElementsByClassName('mf-tool-track')[0], 'active'); _9._44(_21.getElementsByClassName('tool-track')[0], 'active'); _9._62(_21.getElementsByClassName('mf-tool-exclude')[0], 'active'); _9._62(_21.getElementsByClassName('tool-exclude')[0], 'active') } function _743() { _13._83 = 'whitelist'; _86(_13); _9._44(_21.getElementsByClassName('mf-tool-exclude')[0], 'active'); _9._44(_21.getElementsByClassName('tool-exclude')[0], 'active'); _9._44(_21.getElementsByClassName('mf-tool-track')[0], 'active'); _9._44(_21.getElementsByClassName('tool-track')[0], 'active'); _9._62(_21.getElementsByClassName('mf-tool-whitelist')[0], 'active'); _9._62(_21.getElementsByClassName('tool-whitelist')[0], 'active') } function _744() { _13._83 = 'track'; _86(_13); _9._44(_21.getElementsByClassName('mf-tool-exclude')[0], 'active'); _9._44(_21.getElementsByClassName('tool-exclude')[0], 'active'); _9._44(_21.getElementsByClassName('mf-tool-whitelist')[0], 'active'); _9._44(_21.getElementsByClassName('tool-whitelist')[0], 'active'); _9._62(_21.getElementsByClassName('mf-tool-track')[0], 'active'); _9._62(_21.getElementsByClassName('tool-track')[0], 'active') } function _745(_6) { if (_13._83 === 'exclude') { _581(_6.target.getAttribute('data-target')); _108() } } function _746(_6) { if (_13._83 === 'whitelist') { _599(_6.target.getAttribute('data-target')); _108() } } function _747(_6) { if (_13._83 === 'track') { _580(_6.target.getAttribute('data-target')); _108() } } function _748(_6) { _581(_6.target.parentNode.getAttribute('data-target')); _108() } function _749(_6) { _599(_6.target.parentNode.getAttribute('data-target')); _108() } function _750(_6) { _580(_6.target.parentNode.getAttribute('data-target')); _108() } function _752() { _761(); _755(_13._69, _13._65, _13._80, function () { _518(); _102.innerHTML = 'Saved'; _318(); _24._59(_423, 500) }, function () { _518() }) } function _762(_6) { _24._115(_591); var _590 = _11.getElementsByClassName('mf-highlight'); for (var _2 = 0; _2 < _590.length; _2++) { _9._44(_590[_2], 'mf-highlight') } _9._62(_130, 'hidden'); if (_142(_6) || _595(_6.target)) return; _9._62(_6.target, 'mf-highlight'); _591 = _24._59(function () { var _41 = _6.target.getBoundingClientRect(); _130.style.left = _41.left + _3.pageXOffset + 'px'; _130.style.top = _41.top + _3.pageYOffset + 'px'; _130.style.width = _41.width + 'px'; _130.style.height = _41.height + 'px'; _9._44(_130, 'hidden') }, 75) } function _753(_6) { if (_142(_6)) return; if (_6.target === _11) { _9._62(_130, 'hidden') } } function _754(_6) { if (_142(_6)) return; if (_6.button !== 0 || _595(_6.target)) return; _9._44(_6.target, 'mf-highlight'); var _8 = _757(_6.target); if (_13._83 === 'exclude') { _597(_8) } else if (_13._83 === 'whitelist') { _598(_8) } else { _596(_8) } _108() } function _142(_6) { if (_13._124 || _6.target.nodeType !== 1 || _9._71(_6.target, '#mouseflow *')) return true; _6.preventDefault(); _6.stopPropagation(); return false } function _595(_1) { return _1 === _11.body || _9._71(_1, 'html') || (_13._83 === 'whitelist' && (!/INPUT|TEXTAREA/.test(_1.tagName) || /checkbox|radio|button|submit/.test(_1.type))) } function _596(_8) { if (_8 && _13._80.indexOf(_8) === -1) { _13._80.unshift(_8); _86(_13) } _209() } function _597(_8) { if (_8 && _13._69.indexOf(_8) === -1) { _13._69.unshift(_8); _86(_13) } _209() } function _598(_8) { if (_8 && _13._65.indexOf(_8) === -1) { _13._65.unshift(_8); _86(_13) } _209() } function _581(_8) { if (_8 && _13._69.indexOf(_8) !== -1) { _13._69 = _13._69.filter(function (_184) { return _184 !== _8 }); _86(_13) } _209() } function _599(_8) { if (_8 && _13._65.indexOf(_8) !== -1) { _13._65 = _13._65.filter(function (_184) { return _184 !== _8 }); _86(_13) } _209() } function _580(_8) { if (_8 && _13._80.indexOf(_8) !== -1) { _13._80 = _13._80.filter(function (_184) { return _184 !== _8 }); _86(_13) } _209() } function _108() { _24._115(_178); if (!_178) { _24._59(function () { if (_178) { _24._115(_178); _561(); _178 = undefined } }, 200) } _178 = _24._59(function () { _561(); _178 = undefined }, 100) } function _561() { var _562 = _21.querySelectorAll('.highlight-excluded,.highlight-whitelisted,.highlight-tracked'), _2; for (_2 = 0; _2 < _562.length; _2++) { _21.removeChild(_562[_2]) } _13._69.forEach(function (_8) { var _57 = _140(_8, _11); for (_2 = 0; _2 < _57.length; _2++) { _21.appendChild(_814(_8, _57[_2].getBoundingClientRect())) } }); _13._65.forEach(function (_8) { var _57 = _140(_8, _11); for (_2 = 0; _2 < _57.length; _2++) { _21.appendChild(_815(_8, _57[_2].getBoundingClientRect())) } }); _13._80.forEach(function (_8) { var _57 = _140(_8, _11); for (_2 = 0; _2 < _57.length; _2++) { _21.appendChild(_816(_8, _57[_2].getBoundingClientRect())) } }) } function _140(_8, _32) { try { var _57 = []; _8.split(',').forEach(function (_8) { var _38 = _8.split(' > :document-fragment: > ', 1); _32.querySelectorAll(_38[0]).forEach(function (_1) { if (_38[1] && _1.shadowRoot) { _140(_38[1], _1.shadowRoot).forEach(function (_1) { _57.push(_1) }) } else { _57.push(_1) } }) }); return _57 } catch (_49) { _10('Could not get element from selector: ' + ex.message) } } function _755(_69, _65, _80, _121, _756) { if (_133) { _10('Attempted to save CSS lists while previous save was in progress'); return } _133 = _121; _105 = _756; _787(); _225.postMessage({ message: 'MouseflowPrivacyTool_Save', blacklist: _69, whitelist: _65, tracked: _80 }, '*'); _24._59(function () { if (_133 === _121) { _10('Saving CSS lists timed out'); if (_105) _105(); _133 = undefined; _105 = undefined; _413('Uh oh! We couldn\'t save your changes.<br><br>' + 'Please log into Mouseflow and try again.') } }, 7500) } function _757(_1) { if (_1 == null) return null; try { var _43 = []; while (_1) { var _32 = _1.getRootNode ? _1.getRootNode() : _11; var _8 = _567(_1, _32); _43.unshift(_8); _1 = _32.host } return _43.join(' > :document-fragment: > ') } catch (ex) { _10('Could not get element selector: ' + ex.message); return null } } function _934(_1, _32) { var _259 = _758(_1, _32); if (!_259) return null; if (_9._71(_1, _259)) return _259; var _125 = _32.querySelector(_259); var _103 = _1; var _38 = []; while (_103 && _103 !== _125) { var _36 = _366(_103, _32); if (_36.length === 0) _36.push(_570(_103)); _38.unshift(_36); _103 = _103.parentNode } _38.unshift(_259); return _415(_38, _32) } function _567(_1, _32, _38) { if (!_38) _38 = []; var _36 = _366(_1, _32); _38.unshift(_36); var _8 = _415(_38, _32); if (_8) return _8; if (_36.length === 0) { _36.push(_570(_1)); _8 = _415(_38, _32); if (_8) return _8 } return _567(_1.parentNode, _32, _38) } function _415(_38, _32) { var _383 = _38.length > 1 ? _759.apply(this, _38) : _38[0]; for (var _2 = 0; _2 < _383.length; _2++) { if (_32.querySelectorAll(_383[_2]).length === 1) return _383[_2] } return null } function _758(_1, _32) { var _103 = _1; while (_103) { var _36 = _366(_103, _32); for (var _2 = 0; _2 < _36.length; _2++) { if (_32.querySelectorAll(_36[_2]).length === 1) return _36[_2] } _103 = _103.parentNode } return null } function _366(_1, _32) { if (_1 === _11.body) return ['body']; var _36 = []; var _168 = _1.parentNode; var _2; var _43 = _1.getAttribute('id'); var _8 = '#' + _9._147(_43); if (_43 && _32.querySelectorAll(_8).length === 1 && !_9._143(_1, 'data-mf-ignore-child-ids') && _5.useIdSelectors) return [_8]; var _19 = _1.getAttribute('name'); _8 = '[name="' + _9._147(_19) + '"]'; if (_19) { if (_32.querySelectorAll(_8).length === 1) return [_8]; if (_168.querySelectorAll(_8).length === 1) _36.push(_8) } var _89 = _9._174(_1); for (_2 = 0; _2 < _89.length; _2++) { _8 = '.' + _9._147(_89[_2]); if (_32.querySelectorAll(_8).length === 1) return [_8]; if (_168.querySelectorAll(_8).length === 1) _36.push(_8) } for (_2 = 0; _2 < _89.length; _2++) { _8 = _9._147(_1.tagName.toLowerCase()) + '.' + _9._147(_89[_2]); if (_32.querySelectorAll(_8).length === 1) return [_8]; if (_168.querySelectorAll(_8).length === 1) _36.push(_8) } return _36 } function _570(_1) { var _8 = _9._147(_1.tagName.toLowerCase()); if (_1.parentNode.querySelectorAll(_8).length === 1) return _8; var _204 = 0; var _306 = _1; while (_306) { if (_306.tagName === _1.tagName) _204++; _306 = _306.previousElementSibling } _8 += ':nth-of-type(' + _204 + ')'; return _8 } function _759() { var _36, _194, _192, _2; var _109 = 0; var _163 = arguments.length - 1; var _312 = false; var _246 = true; while (_109 < _163) { _194 = undefined; for (_2 = 0; _2 <= _109; _2++) { _194 = _194 ? _311(_194, arguments[_2], ' > ') : arguments[_2] } _192 = undefined; for (_2 = arguments.length - 1; _2 >= _163; _2--) { _192 = _192 ? _311(arguments[_2], _192, ' > ') : arguments[_2] } var _303 = (_109 + 1) == _163 ? ' > ' : ' '; _36 = _36 ? _36.concat(_311(_194, _192, _303)) : _311(_194, _192, _303); if (_246 && _312) { _163--; _312 = false; _246 = true } else if (_246) { _163--; _312 = true; _246 = false } else { _109++; if (_109 != _163) _163++; _312 = true; _246 = true } } return _36 } function _311(_572, _573, _303) { var _36 = []; for (var _2 = 0; _2 < _572.length; _2++) { for (var _58 = 0; _58 < _573.length; _58++) { _36.push(_572[_2] + _303 + _573[_58]) } } return _36 } function _760() { var _4 = _3.localStorage.getItem('mf_privacyTool'); return _4 ? _9._146(_4) : null } function _86(_31) { _31 = _31 ? _9._75(_31) : ''; _3.localStorage.setItem('mf_privacyTool', _31) } function _318() { _3.localStorage.removeItem('mf_privacyTool') } function _761() { _102.setAttribute('disabled', ''); _102.setAttribute('original-html', _102.innerHTML); _102.innerHTML = '<i>&bull;</i> <i>&bull;</i> <i>&bull;</i> <i>&bull;</i>'; _9._62(_102, 'loading') } function _518() { _9._44(_102, 'loading'); _102.innerHTML = _102.getAttribute('original-html'); _102.removeAttribute('original-html'); _102.removeAttribute('disabled') } function _209() { _577.innerHTML = _820(_13._69); _576.innerHTML = _821(_13._65); _574.innerHTML = _822(_13._80); _132.innerHTML = _349(_13._69, _13._65, _13._80); _9._44(_132, 'red') } function _763(_162) { if (!_309) return; _309.innerHTML = _162; _9._62(_309, 'red') } function _413(_162) { if (!_132) return; _132.innerHTML = _162; _9._62(_132, 'red') } function _787() { if (!_132) return; _132.innerHTML = _349(_13._69, _13._65, _13._80); _9._44(_132, 'red') } function _788(_13) { var _30 = _11.createElement('div'); _30.className = 'privacy-tool is-loading'; _30.innerHTML = _817(_13); if (_13._124) _30.className += ' tool-closed'; var _96 = _11.createElement('style'); _96.type = 'text/css'; _96.innerHTML = _365(); _30.appendChild(_96); return _30 } function _789() { var _30 = _11.createElement('div'); _30.className = 'highlight-box'; return _30 } function _814(_8, _41) { var _30 = _11.createElement('div'); _30.className = 'highlight-box highlight-excluded'; _30.setAttribute('data-target', _8); _30.style.left = _41.left + _3.pageXOffset + 'px'; _30.style.top = _41.top + _3.pageYOffset + 'px'; _30.style.width = _41.width + 'px'; _30.style.height = _41.height + 'px'; return _30 } function _815(_8, _41) { var _30 = _11.createElement('div'); _30.className = 'highlight-box highlight-whitelisted'; _30.setAttribute('data-target', _8); _30.style.left = _41.left + _3.pageXOffset + 'px'; _30.style.top = _41.top + _3.pageYOffset + 'px'; _30.style.width = _41.width + 'px'; _30.style.height = _41.height + 'px'; return _30 } function _816(_8, _41) { var _30 = _11.createElement('div'); _30.className = 'highlight-box highlight-tracked'; _30.setAttribute('data-target', _8); _30.style.left = _41.left + _3.pageXOffset + 'px'; _30.style.top = _41.top + _3.pageYOffset + 'px'; _30.style.width = _41.width + 'px'; _30.style.height = _41.height + 'px'; return _30 } function _817(_13) { return ('<form action="#" id="mf_privacy_tool">' + '<link rel="stylesheet" href="https://use.typekit.net/eum4oaj.css">' + _818(_13) + _819(_13) + '</form>') } function _818(_13) { return ('<div class="step step-block' + (_13._124 ? ' fade-in' : '') + '">' + '<div class="widget-header">' + '<div class="widget-text">Open privacy tool</div>' + '<div class="widget-toggle">' + '<a href="#" class="btn-arrow btn-arrow--up mf-tool-toggle"></a>' + '</div>' + '</div>' + '</div>') } function _819() { return ('<div class="tool-container' + (_13._124 ? '' : ' fade-in') + '">' + '<div class="tool-header">' + '<svg class="logo" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 168.56 32" class=""><defs></defs><g data-name="Layer 2"><g data-name="Layer 1"><path class="logo-path" d="M35.31,16c0-2.75-2.2-5.18-5.77-6.86.33-3.92-.67-7-3.06-8.43S20.88,0,17.65,2.28l-.31-.21C14.09-.1,11.07-.58,8.83.71S5.44,5.22,5.77,9.14C2.21,10.82,0,13.25,0,16s2.21,5.19,5.78,6.87a2.43,2.43,0,0,0,0,.38c-.26,3.89.84,6.75,3.08,8a5.4,5.4,0,0,0,2.75.71,11,11,0,0,0,6.08-2.28A11,11,0,0,0,23.73,32a5.37,5.37,0,0,0,2.75-.71c2.25-1.29,3.34-4.15,3.09-8l0-.38C33.1,21.19,35.31,18.76,35.31,16ZM23.75,1.94a3.49,3.49,0,0,1,1.77.44c1.48.85,2.27,3,2.14,6a27.56,27.56,0,0,0-4.91-1.2,27.61,27.61,0,0,0-3.49-3.64A8.7,8.7,0,0,1,23.75,1.94ZM7.86,10.36a24,24,0,0,1,3-.9c-.41.62-.82,1.27-1.2,1.94s-.76,1.36-1.09,2A22.4,22.4,0,0,1,7.86,10.36ZM21.71,23a32.55,32.55,0,0,1-4.05.24A32.6,32.6,0,0,1,13.6,23c-.95-.12-1.85-.28-2.7-.47a22.61,22.61,0,0,1-3-.91,23.19,23.19,0,0,1,.73-3.08c.26-.85.58-1.71.94-2.57a33.42,33.42,0,0,1,1.81-3.65A31.45,31.45,0,0,1,13.59,9a26.92,26.92,0,0,1,1.76-2.11,23.13,23.13,0,0,1,2.3-2.18A22.26,22.26,0,0,1,20,6.87c.61.66,1.2,1.36,1.77,2.11A33,33,0,0,1,24,12.36,33.42,33.42,0,0,1,25.77,16c.36.86.68,1.72.94,2.57a21.79,21.79,0,0,1,.74,3.08,23.22,23.22,0,0,1-3,.91C23.56,22.76,22.66,22.92,21.71,23Zm-4.05,2.17c.78,0,1.55,0,2.3-.08a22,22,0,0,1-2.3,2.18,21.08,21.08,0,0,1-2.31-2.18C16.1,25.18,16.87,25.21,17.66,25.21Zm9.05-11.77q-.5-1-1.08-2c-.39-.67-.79-1.31-1.21-1.94a24,24,0,0,1,3,.9A22.4,22.4,0,0,1,26.71,13.44ZM9.79,2.38a3.53,3.53,0,0,1,1.8-.44,8.61,8.61,0,0,1,4.46,1.59,27.07,27.07,0,0,0-3.49,3.64A26.32,26.32,0,0,0,7.65,8.38C7.52,5.42,8.31,3.23,9.79,2.38ZM1.93,16c0-1.84,1.57-3.55,4.12-4.85A26.55,26.55,0,0,0,7.46,16a26.91,26.91,0,0,0-1.41,4.85C3.43,19.49,1.93,17.72,1.93,16Zm9.64,14.06a3.55,3.55,0,0,1-1.78-.43c-1.51-.87-2.28-3.05-2.13-6a26.22,26.22,0,0,0,4.9,1.2,27.17,27.17,0,0,0,3.49,3.65A8.68,8.68,0,0,1,11.57,30.06Zm14-.43c-1.48.85-3.76.44-6.26-1.15a26.56,26.56,0,0,0,3.49-3.65,26.33,26.33,0,0,0,4.91-1.2C27.8,26.58,27,28.76,25.52,29.63Zm3.74-8.77A27.14,27.14,0,0,0,27.85,16a26.55,26.55,0,0,0,1.41-4.86c2.55,1.3,4.13,3,4.13,4.85S31.89,19.49,29.26,20.86Z"></path><path class="logo-path" d="M17.66,10.22a28,28,0,0,0-4.78,10l4.78-2.61,4.78,2.61a29,29,0,0,0-2-5.32A29,29,0,0,0,17.66,10.22Z"></path><path class="logo-path" d="M22.44,20.19l-4.78-2.61-4.78,2.61a28,28,0,0,1,4.78-10,29,29,0,0,1,2.81,4.65A29,29,0,0,1,22.44,20.19Z"></path><path class="logo-path" d="M47.62,22.09V9.91H50l.36,1.53a7.07,7.07,0,0,1,4.17-1.53,3.45,3.45,0,0,1,3.26,1.67,7.58,7.58,0,0,1,4.37-1.67Q66,9.91,66,14.54v7.55H62.94V14.42c0-1.35-.57-2-1.72-2A4.14,4.14,0,0,0,58.36,14v8.12H55.28V14.46c0-1.38-.57-2.07-1.69-2.07A4,4,0,0,0,50.69,14v8.12Z"></path><path class="logo-path" d="M67.93,16q0-6.21,6.15-6.21T80.23,16q0,6.2-6.15,6.2T67.93,16Zm6.15,3.77q3.08,0,3.08-3.82t-3.08-3.72Q71,12.23,71,16T74.08,19.77Z"></path><path class="logo-path" d="M93.58,9.91V22.09H91.17l-.37-1.55a7.65,7.65,0,0,1-4.45,1.55q-4.21,0-4.21-4.53V9.91h3.08v7.68a1.78,1.78,0,0,0,2,2,4.91,4.91,0,0,0,3.28-1.54V9.91Z"></path><path class="logo-path" d="M96.79,21.51V19a12.63,12.63,0,0,0,4.69.81c1.33,0,2-.42,2-1.27s-.45-1.17-1.34-1.17h-2.2c-2.48,0-3.72-1.23-3.72-3.71S98,9.79,101.63,9.79a13.06,13.06,0,0,1,4.33.7V13a11.77,11.77,0,0,0-4.41-.81c-1.66,0-2.49.42-2.49,1.27s.48,1.17,1.45,1.17h2c2.71,0,4.07,1.23,4.07,3.71s-1.73,3.83-5.18,3.83A13.94,13.94,0,0,1,96.79,21.51Z"></path><path class="logo-path" d="M119.58,17.2h-8q0,2.46,4,2.46a20,20,0,0,0,3.69-.35v2.44a20.57,20.57,0,0,1-4.16.34q-6.62,0-6.62-6.23,0-6,6.07-5.95T119.58,17.2Zm-8-2.26h5.09c.1-1.75-.71-2.62-2.44-2.62S111.74,13.19,111.6,14.94Z"></path><path class="logo-path" d="M122.2,22.15V9.31q0-4.43,5.48-4.42a7.84,7.84,0,0,1,2.72.46V7.79a7.29,7.29,0,0,0-2.73-.46c-1.6,0-2.39.86-2.39,2.58h3.65v2.43h-3.65v9.77Z"></path><path class="logo-path" d="M135.07,5.49v16.6H132V5.49Z"></path><path class="logo-path" d="M137.25,16q0-6.21,6.16-6.21T149.56,16q0,6.2-6.15,6.2T137.25,16Zm6.16,3.77q3.08,0,3.07-3.82t-3.07-3.72c-2.06,0-3.08,1.24-3.08,3.72S141.35,19.77,143.41,19.77Z"></path><path class="logo-path" d="M150.58,9.91h3.1l1.81,8.25,2.71-8.25h2.63l2.93,8.25,1.6-8.25h3.2l-3.29,12.18h-2.89l-2.87-8.41-2.9,8.41h-2.94Z"></path></g></g></svg>' + '<div class="tool-toggle">' + '<div class="tool-toggle-text">' + 'Hide to navigate' + '</div>' + '<div class="tool-toggle-icon">' + '<a href="#" class="btn-arrow btn-arrow--down mf-tool-toggle"></a>' + '</div>' + '</div>' + '<div class="tool-close">' + '<div class="tool-toggle-text">' + 'Close' + '</div>' + '<div class="tool-toggle-icon">' + '<a href="#" class="btn-cross mf-tool-close"></a>' + '</div>' + '</div>' + '</div>' + '<div class="tool-content">' + '<ul class="tool-menu">' + '<li class="tool-menu-item mf-tool-exclude' + (_13._83 === 'exclude' ? ' active' : '') + '">' + 'Excluded content' + '</li>' + '<li class="tool-menu-item mf-tool-whitelist' + (_13._83 === 'whitelist' ? ' active' : '') + '">' + 'Whitelisted fields' + '</li>' + '<li class="tool-menu-item mf-tool-track' + (_13._83 === 'track' ? ' active' : '') + '">' + 'Tracked elements' + '</li>' + '</ul>' + '<div class="tool-exclude' + (_13._83 === 'exclude' ? ' active' : '') + '">' + '<h2>Exclude content from appearing in Mouseflow</h2>' + '<p>' + 'To get started, just click the element(s) or content you wish to exclude. ' + 'This will add the necessary CSS selectors to be blocked in the list below.' + '</p>' + '<p>' + 'When you\'re finished, click "Hide to navigate" to browse to another page to exclude additional content, or click "Save and close" to keep your changes.' + '</p>' + '<p>' + 'For more details and best practices, read our <a href="#" class="js-external-link green" data-link-url="https://help.mouseflow.com/articles/4263776">Support Guide</a>.' + '</p>' + '<h3>Excluded content</h3>' + '<div>' + '<output></output>' + '</div>' + '</div>' + '<div class="tool-whitelist' + (_13._83 === 'whitelist' ? ' active' : '') + '">' + '<h2>Whitelist input fields</h2>' + '<p>' + 'You can whitelist any input field or text area, simply by clicking the field(s) on the page. ' + 'This will let Mouseflow record input in that field.' + '</p>' + '<p>' + 'When you\'re finished, click "Hide to navigate" to browse to another page to exclude additional content, or click "Save and close" to keep your changes.' + '</p>' + '<p>' + 'For more details and best practices, read our <a href="#" class="js-external-link green" data-link-url="https://help.mouseflow.com/articles/4263776">Support Guide</a>.' + '</p>' + '<h3>Whitelisted fields</h3>' + '<div>' + '<output></output>' + '</div>' + '</div>' + '<div class="tool-track' + (_13._83 === 'track' ? ' active' : '') + '">' + '<h2>Tracked elements</h2>' + '<p>' + 'When viewing a heatmap, most of your links will include a box that shows additional metrics(clicks, hovers, etc.).In some cases, these boxes will not appear.' + '</p>' + '<p>' + 'If you\'ve found such an element, you can select it here. That will ensure the additional metrics are shown in your heatmaps.' + '</p>' + '<p>' + 'When you\'re finished, click "Hide to navigate" to browse to another page to exclude additional content, or click "Save and close" to keep your changes.' + '</p>' + '<p>' + 'For more details and best practices, read our <a href="#" class="js-external-link green" data-link-url="https://help.mouseflow.com/articles/4263776">Support Guide</a>.' + '</p>' + '<h3>Tracked elements</h3>' + '<div>' + '<output></output>' + '</div>' + '</div>' + '<div class="tool-status">' + '<div class="tool-status-text">' + _349(_13._69, _13._65, _13._80) + '</div>' + '<div class="tool-status-buttons">' + '<button type="submit" class="btn-widget">Save and close</button>' + '<a href="#" class="green bold mf-tool-close">Close Privacy Tool</a>' + '</div>' + '</div>' + '<div class="tool-loading">' + '<h2 class="loading">Loading the Privacy Tool<i>.</i><i>.</i><i>.</i></h2>' + '</div>' + '<div class="tool-message">' + '<h3>Browser window is to small to load the Privacy Tool</h3>' + '<p>To use Mouseflow\'s Privacy Tool, you need to view the page in a larger browser window.</p>' + '</div>' + '</div>' + '</div>') } function _820(_38) { return _38.map(function (_8) { return ('<div class="tm-tag" data-target="' + _9._154(_8) + '">' + _9._154(_8) + '<a href="#" class="btn-cross mf-remove-excluded"></a>' + '</div>') }).join('') } function _821(_38) { return _38.map(function (_8) { return ('<div class="tm-tag" data-target="' + _9._154(_8) + '">' + _9._154(_8) + '<a href="#" class="btn-cross mf-remove-whitelisted"></a>' + '</div>') }).join('') } function _822(_38) { return _38.map(function (_8) { return ('<div class="tm-tag" data-target="' + _9._154(_8) + '">' + _9._154(_8) + '<a href="#" class="btn-cross mf-remove-tracked"></a>' + '</div>') }).join('') } function _349(_69, _65, _564) { return '<p>You have:</p>' + '<p>' + '&nbsp;&bull; excluded <i class="emphasis"> ' + _69.length + '</i> ' + (_69.length === 1 ? 'element' : 'elements') + '<br>' + '&nbsp;&bull; whitelisted <i class="emphasis">' + _65.length + '</i> input ' + (_65.length === 1 ? 'field' : 'fields') + '<br>' + '&nbsp;&bull; tracked <i class="emphasis">' + _564.length + '</i> input ' + (_564.length === 1 ? 'element' : 'elements') + '</p>' } function _823() { var _107 = new CSSStyleSheet(); _107.replace(_365()); return _107 } function _365() { return (':root {' + '--deep-ocean: #08163c;' + '--dusty-cloud: #f7f9fc;' + '--dark-border: #bbc8e0;' + '--lighter-navy: #d4dbe3;' + '--dark-mode: #10172D;' + '--serious-business: #0b65e3;' + '--light-blue: #66A7FD;' + '--subtle-warmth: #7162e3;' + '--lighter-aqua: #ebf2fa;' + '--dusty-cloud-darker: #E4E9F2;' + '--deep-ocean-light: #A1B2D3;' + '--redwine-vibes: #cd575f;' + '}' + '.mf-highlight {' + 'cursor: pointer !important;' + '}' + '.mf-privacy-tool-opened iframe {' + 'pointer-events: none;' + '}' + '#mouseflow {' + 'font-weight: 300;' + 'font-family: \'museo-sans\';' + '}' + '#mouseflow .highlight-box {' + 'background-color: #add8e6;' + 'border: 2px dotted #808080;' + 'position: absolute;' + 'border-radius: 2px;' + 'z-index: 2147483646;' + 'cursor: pointer;' + 'pointer-events: none;' + 'opacity: 0.5;' + '-webkit-transition: opacity .075s linear;' + 'transition: opacity .075s linear;' + '}' + '#mouseflow .highlight-box.hidden,' + '#mouseflow .tool-closed .highlight-box {' + 'opacity: 0;' + '}' + '#mouseflow .highlight-box.highlight-excluded {' + 'background-color: #ffb6c1;' + 'pointer-events: initial;' + '}' + '#mouseflow .highlight-box.highlight-whitelisted {' + 'background-color: #90ee90;' + 'pointer-events: initial;' + '}' + '#mouseflow .highlight-box.highlight-tracked {' + 'background-color: orange;' + 'pointer-events: initial;' + '}' + '#mouseflow .tool-closed .highlight-box.highlight-excluded,' + '#mouseflow .tool-closed .highlight-box.highlight-whitelisted,' + '#mouseflow .tool-closed .highlight-box.highlight-tracked {' + 'pointer-events: none;' + '}' + '#mouseflow .btn-widget {' + 'background: var(--serious-business);' + '}' + '#mouseflow .widget-header {' + 'background: var(--�dusty-cloud);' + '}' + '#mouseflow .widget-text,' + '#mouseflow .btn-arrow,' + '#mouseflow .btn-cross {' + 'color: var(--deep-ocean);' + '}' + '#mouseflow .btn-widget {' + 'color: white;' + '}' + '#mouseflow .tm-tag {' + 'margin: 7px 7px 0 0;' + 'padding: 7px;' + 'display: inline-block;' + 'border-radius: 8px;' + 'border: 1px solid var(--dark-border);' + 'background-color: var(--dusty-cloud);' + 'color: var(--deep-ocean);' + 'font-size: 13px;' + '}' + '#mouseflow .step {' + 'visibility: hidden;' + 'opacity: 0;' + 'position: fixed;' + 'bottom: 30px;' + 'right: 30px;' + 'z-index: 2147483647;' + 'width: 300px;' + 'border-radius: 8px;' + 'border: 1px solid var(--deep-ocean);' + 'overflow: hidden;' + '}' + '#mouseflow a:hover {' + 'text-decoration: underline;' + '}' + '#mouseflow h2 {' + 'font-size: 21px;' + 'font-weight: 700;' + 'line-height: 1.4em;' + 'margin-bottom: 6px;' + '}' + '#mouseflow h3 {' + 'font-size: 16px;' + 'font-weight: 700;' + 'line-height: 1.4em;' + '}' + '#mouseflow p {' + 'margin-bottom: 8px;' + 'line-height: 1.4em;' + '}' + '#mouseflow .green {' + 'color: var(--deep-ocean);' + '}' + '#mouseflow .red {' + 'color: var(--redwine-vibes);' + '}' + '#mouseflow .emphasis {' + 'color: var(--subtle-warmth);' + 'font-weight: 700;' + '}' + '#mouseflow .bold {' + 'font-weight: 700;' + '}' + '#mouseflow .tool-container {' + 'visibility: visible;' + 'opacity: 0;' + 'position: fixed;' + 'bottom: 0;' + 'left: 0;' + 'width: 100%;' + 'height: 350px;' + 'max-height: 40%;' + 'overflow: hidden;' + 'background-color: white;' + 'box-shadow: 0 0 6px var(--deep-ocean-light);' + 'z-index: 2147483647;' + '}' + '#mouseflow .tool-header {' + 'background-color: var(--dusty-cloud);' + 'height: 58px;' + 'border: 1px solid var(--dusty-cloud-darker);' + '}' + '#mouseflow .logo {' + 'display: inline;' + 'height: 30px;' + 'margin: 14px 10px;' + 'fill: black;' + '}' + '#mouseflow .tool-toggle,' + '#mouseflow .tool-close {' + 'float: right;' + 'padding: 18px 24px;' + '}' + '#mouseflow .is-loading .tool-close {' + 'display: block;' + '}' + '#mouseflow .is-loading .tool-toggle,' + '#mouseflow .tool-close {' + 'display: none;' + '}' + '#mouseflow .tool-toggle-text {' + 'display: inline-block;' + 'color: var(--deep-ocean);' + 'font-size: 16px;' + '}' + '#mouseflow .tool-toggle-icon {' + 'width: 23px;' + 'display: inline-block;' + 'position: relative;' + 'top: 0px;' + '}' + '#mouseflow .tool-close .tool-toggle-icon {' + 'top: 4px;' + '}' + '#mouseflow .tool-content {' + 'height: calc(100% - 58px);' + '}' + '#mouseflow .tool-menu {' + 'width: 15%;' + 'height: 100%;' + 'float: left;' + '}' + '#mouseflow .tool-menu-item {' + 'background-color: var(--dusty-cloud);' + 'color: var(--deep-ocean);' + 'cursor: pointer;' + 'height: 40px;' + 'padding: 12px;' + '}' + '#mouseflow .tool-menu-item.active {' + 'position: relative;' + 'background-color: var(--lighter-navy);' + 'color: var(--deep-ocean);' + 'cursor: default;' + '}' + '#mouseflow .tool-exclude,' + '#mouseflow .tool-whitelist,' + '#mouseflow .tool-track {' + 'display: none;' + 'width: 70%;' + 'height: 100%;' + 'float: left;' + 'color: var(--deep-ocean);' + 'overflow-y: auto;' + 'overflow-x: hidden;' + 'padding: 10px 20px;' + '}' + '#mouseflow .tool-exclude p, #mouseflow .tool-whitelist p, #mouseflow .tool-track p {' + 'color: black;' + '}' + '#mouseflow .tool-exclude.active,' + '#mouseflow .tool-whitelist.active,' + '#mouseflow .tool-track.active {' + 'display: block;' + '}' + '#mouseflow .tool-exclude::-webkit-scrollbar,' + '#mouseflow .tool-whitelist::-webkit-scrollbar,' + '#mouseflow .tool-track::-webkit-scrollbar {' + 'width: 8px;' + '}' + '#mouseflow .tool-exclude::-webkit-scrollbar-track,' + '#mouseflow .tool-whitelist::-webkit-scrollbar-track,' + '#mouseflow .tool-track::-webkit-scrollbar-track {' + 'border-radius: 10px;' + 'background-color: #F5F5F5;' + '-webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);' + '}' + '#mouseflow .tool-exclude::-webkit-scrollbar-thumb,' + '#mouseflow .tool-whitelist::-webkit-scrollbar-thumb,' + '#mouseflow .tool-track::-webkit-scrollbar-thumb {' + 'border-radius: 10px;' + 'background-color: #a7a7a7;' + '-webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);' + '}' + '#mouseflow .tool-status {' + 'width: 15%;' + 'background-color: var(--dusty-cloud);' + 'color: var(--deep-ocean);' + 'height: 100%;' + 'float: left;' + 'position: relative;' + '}' + '#mouseflow .tool-status-text {' + 'font-size: 16px;' + 'font-weight: 300;' + 'text-align: left;' + 'padding: 0 15px;' + 'position: absolute;' + 'top: 40px;' + '}' + '#mouseflow .tool-status-buttons {' + 'width: 100%;' + 'text-align: center;' + 'position: absolute;' + 'padding: 0 30px;' + 'bottom: 40px;' + '}' + '#mouseflow .tool-loading {' + 'width: 100%;' + 'height: calc(100% - 58px);' + 'background-color: white;' + 'color: rgb(71, 64, 62);' + 'position: absolute;' + 'top: 58px;' + 'z-index: 2;' + 'visibility: hidden;' + 'opacity: 0;' + '-webkit-animation: fadeOut .3s linear;' + 'animation: fadeOut .3s linear;' + '}' + '#mouseflow .is-loading .tool-loading {' + 'visibility: visible;' + 'opacity: 1;' + '-webkit-animation: fadeIn .3s linear;' + 'animation: fadeIn .3s linear;' + '}' + '#mouseflow .tool-loading h2 {' + 'position: absolute;' + 'left: 50%;' + 'top: 50%;' + '-webkit-transform: translate(-50%, -50%);' + '-ms-transform: translate(-50%, -50%);' + 'transform: translate(-50%, -50%);' + '}' + '#mouseflow .widget-header {' + 'color: #fff;' + 'padding: 12px 15px;' + 'vertical-align: middle;' + 'overflow: hidden;' + 'position: relative;' + 'z-index: 1;' + '-webkit-transition: opacity .3s linear;' + 'transition: opacity .3s linear;' + '}' + '#mouseflow .widget-header:hover {' + 'background-color: var(--lighter-aqua);' + '}' + '#mouseflow .widget-text {' + 'font-size: 16px;' + 'line-height: 20px;' + 'width: 245px;' + 'display: inline-block;' + 'vertical-align: middle;' + '}' + '#mouseflow .widget-toggle {' + 'width: 20px;' + 'display: inline-block;' + 'vertical-align: middle;' + 'margin: 0;' + '}' + '#mouseflow .btn-arrow,' + '#mouseflow .btn-cross {' + 'float: right;' + 'z-index: 10;' + 'line-height: .5;' + '}' + '#mouseflow .tool-toggle-icon .btn-arrow,' + '#mouseflow .tool-toggle-icon .btn-cross {' + 'font-size: 23px;' + '}' + '#mouseflow .widget-toggle .btn-arrow {' + 'font-size: 23px;' + '}' + '#mouseflow .tm-tag .btn-cross {' + 'margin: 3px 0 0 7px;' + 'font-weight: 700;' + 'font-size: 16px;' + '}' + '#mouseflow .btn-arrow--up {' + '-webkit-transform: rotate(-90deg) scale(1.5, 1.5);' + '-ms-transform: rotate(-90deg) scale(1.5, 1.5);' + 'transform: rotate(-90deg) scale(1.5, 1.5);' + '}' + '#mouseflow .btn-arrow--down {' + '-webkit-transform: rotate(+90deg) scale(1.5, 1.5);' + '-ms-transform: rotate(+90deg) scale(1.5, 1.5);' + 'transform: rotate(+90deg) scale(1.5, 1.5);' + '}' + '#mouseflow .widget-toggle .btn-arrow:before {' + 'content: "";' + 'display: inline;' + 'position: absolute;' + 'top: -185px;' + 'left: -15px;' + 'right: -15px;' + 'bottom: -15px;' + 'display: block;' + '}' + '#mouseflow .tool-toggle-icon .btn-arrow:before {' + 'content: "";' + 'display: inline;' + 'position: absolute;' + 'top: -10px;' + 'left: -15px;' + 'right: -15px;' + 'bottom: -100px;' + 'display: block;' + '}' + '#mouseflow .tool-toggle-icon .btn-cross:before {' + 'content: "";' + 'display: inline;' + 'position: absolute;' + 'top: -25px;' + 'left: -150px;' + 'right: -20px;' + 'bottom: -20px;' + 'display: block;' + '}' + '#mouseflow .btn-arrow:after {' + 'content: "\\203a";' + 'display: inline;' + '}' + '#mouseflow .btn-cross:after {' + 'content: "\\00d7";' + 'display: inline;' + 'top: -4px;' + 'position: relative;' + '}' + '#mouseflow .tm-tag .btn-cross:after {' + 'top: 0px;' + '}' + '#mouseflow .btn-arrow:hover,' + '#mouseflow .btn-cross:hover {' + 'text-decoration: none;' + '}' + '#mouseflow .btn-widget {' + 'width: 100%;' + 'height: 38px;' + 'border: none;' + 'border-radius: 8px;' + 'overflow: hidden;' + 'position: relative;' + 'z-index: 1;' + 'cursor: pointer;' + 'display: block;' + 'padding: 10px;' + 'font-size: 16px;' + 'font-family: inherit;' + 'font-weight: bold;' + 'text-align: center;' + 'outline: none;' + 'color: var(--dusty-cloud);' + 'margin-bottom: 10px;' + '-webkit-transition: background-color .3s linear;' + 'transition: background-color .3s linear;' + '}' + '#mouseflow .btn-widget:hover {' + 'text-decoration: none;' + 'background-color: var(--light-blue);' + '}' + '#mouseflow .privacy-tool {' + 'height: 350px;' + 'max-height: 40%;' + '-webkit-transition: height .5s ease-out;' + 'transition: height .5s ease-out;' + '}' + '#mouseflow .privacy-tool.tool-closed {' + 'height: 0;' + '}' + '#mouseflow .tool-closed .step {' + 'visibility: visible;' + '}' + '#mouseflow .tool-closed .tool-container {' + 'visibility: hidden;' + '}' + '#mouseflow .step.fade-in,' + '#mouseflow .tool-container.fade-in {' + '-webkit-animation: fadeUpIn .8s cubic-bezier(0, 0, 0, 1) both;' + 'animation: fadeUpIn .8s cubic-bezier(0, 0, 0, 1) both;' + '}' + '#mouseflow .step.fade-out,' + '#mouseflow .tool-container.fade-out {' + '-webkit-animation: fadeDownOut .8s cubic-bezier(0, 0, 0, 1);' + 'animation: fadeDownOut .8s cubic-bezier(0, 0, 0, 1);' + '}' + '#mouseflow .btn-widget.loading {' + 'cursor: default;' + '}' + '#mouseflow .btn-widget.loading:before {' + 'display: none;' + '}' + '#mouseflow .loading i {' + 'animation-name: blink;' + 'animation-duration: 1.4s;' + 'animation-iteration-count: infinite;' + 'animation-fill-mode: both;' + '}' + '#mouseflow .loading i:nth-child(2) {' + 'animation-delay: .2s;' + '}' + '#mouseflow .loading i:nth-child(3) {' + 'animation-delay: .4s;' + '}' + '#mouseflow .loading i:nth-child(4) {' + 'animation-delay: .6s;' + '}' + '#mouseflow .tool-message {' + 'width: 100%;' + 'height: calc(100% - 58px);' + 'background-color: white;' + 'color: rgb(71, 64, 62);' + 'position: absolute;' + 'top: 58px;' + 'z-index: 3;' + 'padding: 20px;' + 'overflow-y: auto;' + 'overflow-x: hidden;' + 'visibility: hidden;' + 'opacity: 0;' + '-webkit-animation: fadeOut .3s linear;' + 'animation: fadeOut .3s linear;' + '}' + '#mouseflow .tool-message h3 {' + 'margin-bottom: 20px;' + '}' + '@media (max-width: 1300px) {' + '#mouseflow .tool-exclude,' + '#mouseflow .tool-whitelist,' + '#mouseflow .tool-track {' + 'width: 60%;' + '}' + '#mouseflow .tool-status {' + 'width: 25%;' + '}' + '#mouseflow .tool-status-buttons {' + 'bottom: 10px;' + '}' + '}' + '@media (max-width: 850px) {' + '#mouseflow .tool-menu-item {' + 'height: 56px;' + '}' + '#mouseflow .tool-status-text {' + 'font-size: 14px;' + '}' + '#mouseflow .btn-widget {' + 'font-size: 12px;' + '}' + '#mouseflow a.mf-tool-close {' + 'font-size: 12px;' + '}' + '}' + '@media (max-height: 800px) {' + '#mouseflow .tool-status-text {' + 'top: 20px;' + '}' + '#mouseflow .tool-status-buttons {' + 'bottom: 20px;' + '}' + '}' + '@media (max-height: 650px) {' + '#mouseflow .tool-status-text {' + 'font-size: 14px;' + '}' + '}' + '@media (max-width: 650px), (max-height: 600px) {' + '#mouseflow .tool-message {' + 'visibility: visible;' + 'opacity: 1;' + '-webkit-animation: fadeIn .3s linear;' + 'animation: fadeIn .3s linear;' + '}' + '}' + '@-webkit-keyframes fadeUpIn {' + '0% {' + '-webkit-transform: translateY(50px);' + '-ms-transform: translateY(50px);' + 'transform: translateY(50px);' + 'opacity: 0;' + '}' + '100% {' + '-webkit-transform: translateY(0);' + '-ms-transform: translateY(0);' + 'transform: translateY(0);' + 'opacity: 1;' + '}' + '}' + '@keyframes fadeUpIn {' + '0% {' + '-webkit-transform: translateY(50px);' + '-ms-transform: translateY(50px);' + 'transform: translateY(50px);' + 'opacity: 0;' + '}' + '100% {' + '-webkit-transform: translateY(0);' + '-ms-transform: translateY(0);' + 'transform: translateY(0);' + 'opacity: 1;' + '}' + '}' + '@-webkit-keyframes fadeDownOut {' + '0% {' + 'visibility: visible;' + '-webkit-transform: translateY(0);' + '-ms-transform: translateY(0);' + 'transform: translateY(0);' + 'opacity: 1;' + '}' + '100% {' + 'visibility: hidden;' + '-webkit-transform: translateY(50px);' + '-ms-transform: translateY(50px);' + 'transform: translateY(50px);' + 'opacity: 0;' + '}' + '}' + '@keyframes fadeDownOut {' + '0% {' + 'visibility: visible;' + '-webkit-transform: translateY(0);' + '-ms-transform: translateY(0);' + 'transform: translateY(0);' + 'opacity: 1;' + '}' + '100% {' + 'visibility: hidden;' + '-webkit-transform: translateY(50px);' + '-ms-transform: translateY(50px);' + 'transform: translateY(50px);' + 'opacity: 0;' + '}' + '}' + '@-webkit-keyframes fadeIn {' + '0% {' + 'visibility: visible;' + 'opacity: 0;' + '}' + '100% {' + 'visibility: visible;' + 'opacity: 1;' + '}' + '}' + '@keyframes fadeIn {' + '0% {' + 'visibility: visible;' + 'opacity: 0;' + '}' + '100% {' + 'visibility: visible;' + 'opacity: 1;' + '}' + '}' + '@-webkit-keyframes fadeOut {' + '0% {' + 'visibility: visible;' + 'opacity: 1;' + '}' + '100% {' + 'visibility: hidden;' + 'opacity: 0;' + '}' + '}' + '@keyframes fadeOut {' + '0% {' + 'visibility: visible;' + 'opacity: 1;' + '}' + '100% {' + 'visibility: hidden;' + 'opacity: 0;' + '}' + '}' + '@keyframes blink {' + '0% {' + 'opacity: .2;' + '}' + '20% {' + 'opacity: 1;' + '}' + '100% {' + 'opacity: .2;' + '}' + '}') } this._48 = _48; this._68 = _68 } function _806(_5, _397, _426) { function _230() { var _60 = (_5.crossDomainSupport ? _5.location.hostname : '') + (_5.path || _5.location.pathname).toLowerCase(); var _98 = (_5.includeHashInPath ? _5.location.hash : '').toLowerCase(); var _106 = _5.location.search.toLowerCase(); if (_60 !== '/' && _60.slice(-1) === '/' && (!_5.includeQueryStringInPath && !_5.includeHashInPath)) _60 = _60.slice(0, -1); return _824(_60 + (_5.includeQueryStringInPath ? _106 : '') + _98) || _60 + _825(_106) + _98 } function _824(_60) { return _397.filter(function (_70) { return _827(_60, _70) }).map(function (_70) { return _828(_60, _70) })[0] } function _825(_106) { if (_106[0] === '?') _106 = _106.slice(1); var _119; var _381 = []; var _826 = /([^&=]+)=?([^&]*)/g; while (_119 = _826.exec(_106)) { var _45 = _426.indexOf(_119[1]); if (_119[2] && _45 > -1) _381[_45] = _119[0] } return _381.length ? '?' + _381.filter(hasValue).join('&') : (_5.includeQueryStringInPath && _106 ? '?' + _106 : '') } function _827(_60, _70) { var _594 = _60.indexOf('?'); if (!_5.includeQueryStringInPath && _594 > -1) _60 = _60.slice(0, _594); switch (_70._20) { case 'equals': return _60 === _70._4.toLowerCase(); case 'startsWith': return _60.substr(0, _70._4.length) === _70._4; case 'endsWith': return _60.substr(-_70._4.length) === _70._4; case 'regex': return new RegExp(_70._4).test(_60); default: return false } } function _828(_60, _70) { if (_70._829) return _70._829; switch (_70._20) { case 'startsWith': return _70._4 + '*'; case 'endsWith': return '*' + _70._4; default: return _70._4 } } function hasValue(value) { return value } this._230 = _230 } function _805(_9) { var _412 = []; var _831 = ['target', 'originalEvent', 'button', 'pageX', 'pageY', 'which', 'data', 'origin', 'source']; function _832(_42, _7, _82, _404, _16) { var _34 = !!_16._34; var _558 = function (_6) { var _233 = []; if (_6.composedPath && (_6.target.shadowRoot || _82)) _233 = _6.composedPath(); var _586 = _6; _6 = _830(_6); _6.preventDefault = function () { _586.preventDefault() }; _6.stopPropagation = function () { _586.stopPropagation() }; if (_6.target.shadowRoot && _233.length) _6.target = _233[0]; if (_82) { _6.delegatedTarget = _530(function (_53, _2) { return _233.length ? _233[_2] : (_53 ? _53.parentNode : _6.target) }, _82); if (!_6.delegatedTarget && !_16._584) return; if (_16._208 && _6.target !== _6.delegatedTarget) return } else if (_16._208 && _6.target !== _42) { return } if (_16._91) _6.preventDefault(); if (_16._933) _6.stopPropagation(); _404.apply(this, arguments) }; _42.addEventListener(_7, _558, { capture: _34 }); _412.push({ _42: _42, _7: _7, _404: _558, _34: _34 }) } function _830(_6) { var _534 = {}; _831.forEach(function (_23) { if (_6[_23] != undefined) _534[_23] = _6[_23] }); return _534 } function _833() { _412.forEach(function (_18) { _18._42.removeEventListener(_18._7, _18._404, { capture: _18._34 }) }); _412 = [] } function _530(_536, _82, _42, _45) { if (!_45) _45 = 0; _42 = _536(_42, _45); if (!_42 || !_82) return null; if (_9._71(_42, _82)) return _42; return _530(_536, _82, _42, ++_45) } this._25 = function (_42, _7, _82, _158, _16) { if (typeof _82 === 'function') { _16 = _158; _158 = _82; _82 = null } _832(_42, _7, _82, _158, _16 || {}) }; this._522 = _833 } function _460(_5, _9) { function _424(_139) { if (!_139 || !_139.length) return true; _139 = _139.filter(function (_64) { return _64 && _64._20 && _64._4 }); var _527 = _139.filter(function (_64) { return _64._20.indexOf('not') !== 0 }); var _813 = _527.length === 0 || _527.some(function (_64) { return _161(_64) }); var _538 = _139.filter(function (_64) { return _64._20.indexOf('not') === 0 }); var _834 = _538.length === 0 || _538.every(function (_64) { return _161(_64) }); return _834 && _813 } function _161(_64) { var _60 = (_5.path || _5.location.pathname).toLowerCase(); var _98 = (_5.includeHashInPath ? _5.location.hash : '').toLowerCase(); var _106 = (_5.includeQueryStringInPath ? _5.location.search : '').toLowerCase(); var _28 = _60 + _106 + _98; var _429 = _546(_64, _28); if (!_429 && _5.crossDomainSupport) _429 = _546(_64, _5.location.hostname + _28); return _429 } function _546(_64, _28) { var _20 = _64._20 || ''; var _4 = _64._4 || ''; switch (_20.toLowerCase()) { case 'equals': _28 = _9._207(_28, '/').toLowerCase(); _4 = _9._207(_4, '/').toLowerCase(); return _28 === _4; case 'startswith': _28 = _28.toLowerCase(); _4 = _4.toLowerCase(); return _28.substr(0, _4.length) === _4; case 'endswith': _28 = _9._207(_28, '/').toLowerCase(); _4 = _9._207(_4, '/').toLowerCase(); return _28.substr(-_4.length) === _4; case 'regex': return new RegExp(_4).test(_28); case 'notequals': case 'notstartswith': case 'notendswith': return !_161({ _20: _20.slice(3), _4: _4 }); default: return true } } this._424 = _424; this._161 = _161 } function _812(_3, _332, _346) { var _90 = _3.location; function _645(_17) { var _71 = (_17 || '').match(/^(([^:]+:)?\/?\/?(([^:\/\?#]+)?:?(\d+)?))(\/.*?)?(\?.*?)?(#.*)?$/); return { href: _71[0] || '', origin: _71[1] || '', protocol: _71[2] || '', host: _71[3] || '', hostname: _71[4] || '', port: _71[5] || '', pathname: _71[6] || '', search: _71[7] || '', hash: _71[8] || '' } } function _799() { try { _3.localStorage.setItem('mf_supportsLocalStorage', '1'); var _811 = _3.localStorage.getItem('mf_supportsLocalStorage') === '1'; _3.localStorage.removeItem('mf_supportsLocalStorage'); return _811 } catch (e) { return false } } this.debug = _3.mouseflowDebug || _90.search.indexOf('mf_debug=1') !== -1; this.includeDebugTime = false; this.forceStart = _90.search.indexOf('mf_force=1') !== -1; this.autoStart = _3.mouseflowAutoStart !== false && _90.search.indexOf('mf_autostart=0') === -1; this.enableBots = false; this.touchEvents = !_3.mouseflowDisableTouch; this.htmlDelay = _3.mouseflowHtmlDelay || 1000; this.newPageViewHtmlDelay = _3.mouseflowNewPageViewHtmlDelay || 500; this.compress = _3.mouseflowCompress !== false && _90.search.indexOf('mf_compress=0') === -1; this.autoTagging = _3.mouseflowAutoTagging !== false; this.path = _3.mouseflowPath; this.crossDomainSupport = !!_3.mouseflowCrossDomainSupport; this.location = _645(_3.mouseflowHref || _90.href); this.htmlFetchMode = _3.mouseflowHtmlFetchMode || 'post'; this.sessionId = _3.mouseflowSessionId; this.honorDoNotTrack = _3.mouseflowHonorDoNotTrack || _346; this.gdprEnabled = _3.mouseflowForceGdpr || _332; this.keyLogging = !_3.mouseflowDisableKeyLogging && !this.gdprEnabled; this.domReuse = !_3.mouseflowDisableDomReuse; this.domDeduplicator = !_3.mouseflowDisableDomDeduplicator; this.includeSubDomains = !_3.mouseflowExcludeSubDomains; this.registerSubmitTimeout = _3.mouseflowRegisterSubmitTimeout || 2000; this.useUnload = !!_3.mouseflowUseUnload; this.replaceLastFormValues = _3.mouseflowReplaceLastFormValues || !this.keyLogging || this.gdprEnabled; this.useAllHoverSelectors = !!_3.mouseflowUseAllHoverSelectors; this.enableCssRecording = !!_3.mouseflowEnableCssRecording; this.secureCookie = !!_3.mouseflowSecureCookie; this.enableSpa = true; this.includeHashInPath = false; this.includeQueryStringInPath = false; this.autoTagPayments = true; this.preferStorageApi = !!_3.mouseflowPreferStorageApi; this.domMutationDetectorEnable = _3.domMutationDetectorEnable !== undefined ? _3.domMutationDetectorEnable : false; this.domMutationUseParentNode = _3.domMutationUseParentNode !== undefined ? _3.domMutationUseParentNode : true; this.domMutationUsePreviousSibling = _3.domMutationUsePreviousSibling !== undefined ? _3.domMutationUsePreviousSibling : false; this.domMutationCountThreshold = _3.domMutationCountThreshold !== undefined ? _3.domMutationCountThreshold : 20; this.domMutationTimeThresholdInSeconds = _3.domMutationTimeThresholdInSeconds !== undefined ? _3.domMutationTimeThresholdInSeconds : 10; this.liveHeatmapsEnabled = false; this.privacyToolEnabled = false; this.useIdSelectors = _3.mouseflowUseIdSelectors !== undefined ? _3.mouseflowUseIdSelectors : true; this.proxyAttachShadow = true; this._790 = function () { if (!!_3.opener && _90.search.indexOf('mf_liveHeatmaps') !== -1) { this.liveHeatmapsEnabled = true; return } if (_90.search.indexOf('mf_inspect') !== -1) { this.privacyToolEnabled = true; return } if (!!_3.opener && (typeof _3.name === 'string' && _3.name.indexOf('mf_liveHeatmaps') === 0)) { this.liveHeatmapsEnabled = true; return } if (_3.name === 'mf_privacyTool') { this.privacyToolEnabled = true; return } if (!_799()) return; if (_3.opener) { if (_3.localStorage.getItem('mf_privacyTool')) this.privacyToolEnabled = true; else if (_3.localStorage.getItem('mf_liveHeatmaps')) this.liveHeatmapsEnabled = true } }; this._790(); this._791 = function () { this._333('href', window.location.href); this.path = undefined }; this._333 = function (_23, _4) { switch (_23) { case 'href': this.location = _645(_4); break; case 'keyLogging': this.keyLogging = this.keyLogging && _4; break; case 'gdprEnabled': this.gdprEnabled = this.gdprEnabled || _4; break; case '_cssSelectorBlackList': break; case '_cssSelectorWhiteList': break; case '_cssSelectorTracked': break; case '_websiteId': break; default: this[_23] = _4; break } } } function _802(_3) { var _11 = _3.document, _170; function _276() { if (_11.body && !_170) { _170 = _792(); _11.body.appendChild(_170) } return _170 } function _354() { if (_170) { _11.body.removeChild(_170); _170 = undefined } } function _792() { var _30 = _11.createElement('div'); _30.id = 'mouseflow'; var _96 = _11.createElement('style'); _96.type = 'text/css'; _96.innerHTML = _793(); var _368 = _11.createElement('div'); _368.className = 'load-font'; _368.innerHTML = 'load font'; _30.appendChild(_96); _30.appendChild(_368); return _30 } function _793() { return ('@font-face {' + 'font-family: "Droid Sans";' + 'font-style: normal;' + 'font-weight: 400;' + 'src: local("Droid Sans Regular"), local("DroidSans-Regular"), url(https://cdn.mouseflow.com/fonts/gstatic_droidsans.woff2) format("woff2");' + 'unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2212, U+2215;' + '}' + '#mouseflow :before, #mouseflow :after {' + 'display: none;' + '}' + '#mouseflow,' + '#mouseflow * {' + 'background: transparent;' + 'border: 0;' + 'border-image-outset: 0s;' + 'border-image-repeat: stretch;' + 'border-image-slice: 100%;' + 'border-image-source: none;' + 'border-image-width: 1;' + 'border-color: #000;' + 'border-radius: 0;' + 'border-width: 0;' + 'border-style: none;' + 'box-sizing: border-box;' + 'clip: auto;' + 'float: none;' + 'color: inherit;' + 'font-family: inherit;' + 'font-size: inherit;' + 'font-style: inherit;' + 'font-weight: inherit;' + 'width: auto;' + 'height: auto;' + 'min-width: auto;' + 'min-height: auto;' + 'max-width: auto;' + 'max-height: auto;' + 'letter-spacing: normal;' + 'line-height: normal;' + 'margin: 0;' + 'padding: 0;' + 'text-decoration: none;' + 'text-indent: 0;' + 'text-transform: none;' + 'vertical-align: baseline;' + 'text-align: left;' + 'overflow: visible;' + 'top: auto;' + 'right: auto;' + 'bottom: auto;' + 'left: auto;' + '-webkit-transition: none;' + 'transition: none;' + '}' + '#mouseflow {' + 'font: 400 14px/1.4 "Droid Sans", Helvetica, Arial, sans-serif;' + 'color: #666;' + '}' + '#mouseflow .load-font {' + 'position: absolute;' + 'visibility: hidden;' + 'width: 0px;' + 'height: 0px;' + 'overflow: hidden;' + '}') } this._276 = _276; this._354 = _354 } function _803(_3) { this._59 = function () { return _284('setTimeout').apply(_3, arguments) }; this._282 = function () { return _284('setInterval').apply(_3, arguments) }; this._115 = function () { _284('clearTimeout').apply(_3, arguments) }; this._167 = function () { _284('clearInterval').apply(_3, arguments) }; function _284(_19) { var _641; if (_3.Zone && _3.Zone.__symbol__) _641 = _3[_3.Zone.__symbol__(_19)]; return _641 || _3[_19] } } function _804(_3, _113, _387) { var _11 = _3.document; function _134(_1, _76) { var _89 = _1.classList; if (_89 && _76) return _89.contains(_76); var _138 = _174(_1); return _138.indexOf(_76) !== -1 } function _62(_1, _76) { var _89 = _1.classList; if (_89 && _76) { _1.classList.add(_76); return } var _138 = _174(_1); if (_138.indexOf(_76) === -1) _138.push(_76); _1.className = _138.join(' ') } function _44(_1, _76) { var _89 = _1.classList; if (_89 && _76) { _1.classList.remove(_76); return } var _138 = _174(_1); var _45 = _138.indexOf(_76); if (_45 !== -1) _138.splice(_45, 1); _1.className = _138.join(' ') } function _254(_1, _76, _342) { if (_342 === undefined) _342 = !_134(_1, _76); if (_342) { _62(_1, _76) } else { _44(_1, _76) } } function _174(_1) { var _611 = typeof _1.className === 'string' ? _1.className.replace(/\s+/g, ' ').trim() : ''; return _611 !== '' ? _611.split(' ') : [] } function _351() { return _113.max((_11.body || {}).scrollHeight || 0, (_11.body || {}).offsetHeight || 0, _11.documentElement.scrollHeight || 0, _11.documentElement.offsetHeight || 0, _11.documentElement.clientHeight || 0) } function _82(_39, _794) { var _33 = []; if (!_39) return _33; for (var _2 = 0; _2 < _39.length; _2++) { if (_794(_39[_2], _2)) _33.push(_39[_2]) } return _33 } function _494(_245) { var _280 = _245.length; while (_280) { var _2 = _113.floor(_113.random() * _280--); var _795 = _245[_280]; _245[_280] = _245[_2]; _245[_2] = _795 } } function _154(_35) { if (!_35) return _35; return _35.replace(/&/g, '&amp;').replace(/"/g, '&quot;').replace(/'/g, '&#39;').replace(/</g, '&lt;').replace(/>/g, '&gt;') } function _370(_35) { if (!_35) return _35; return _35.replace(/&amp;/g, '&').replace(/&quot;/g, '"').replace(/&#39;/g, "'").replace(/&lt;/g, '<').replace(/&gt;/g, '>') } function _348(url) { return /^https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)$/.test(url.trim()) } function _501(_35) { return _35.replace(/\[([^\]]+)\]\(([^\)]+)\)/g, function (_119, _796, _17) { _17 = _370(_17); return _348(_17) ? '<a href="' + _17 + '" target="_blank">' + _796 + '</a>' : _119 }) } function _147(_4) { if (!_4) return _4; return _4.replace(/([^a-zA-Z\d-_])/g, '\\$1').replace(/^(-)?(\d)/, '$1\\3$2 ') } function _146(_4) { return _4 ? _387.parse(_4) : undefined } function _75(_4) { var _33; if (Array.prototype.toJSON) { var _797 = Array.prototype.toJSON; delete Array.prototype.toJSON; _33 = _387.stringify(_4); Array.prototype.toJSON = _797 } else if (_4) { _33 = _387.stringify(_4) } return _33 } function _508(_798, _800) { var _210 = _295(_798); var _35 = _295(_800); var _262 = _113.max(_210.length, _35.length); if (_35 == 'NaN' || _210 == 'NaN') { return false } for (var _2 = 0; _2 < _262; _2++) { _210[_2] = _210[_2] || 0; _35[_2] = _35[_2] || 0; if (_210[_2] == _35[_2]) { continue } return _210[_2] > _35[_2] } return true } function _295(_810) { var _454 = _810.split('.'); var _446 = []; for (var _2 = 0; _2 < _454.length; _2++) { _446.push(parseInt(_454[_2])) } return _446 } function _207(_35, _801) { var _33 = _35; while (_33[_33.length - 1] === (_801 || ' ')) _33 = _33.slice(0, -1); return _33 } function _71(_1, _8) { if (_1.nodeType !== 1) return false; if (_1.msMatchesSelector) return _1.msMatchesSelector(_8); if (_1.matches) return _1.matches(_8); return false } function _143(_53, _360) { return _53.parentNode && _53.parentNode.hasAttribute && _53.parentNode.hasAttribute(_360) } this._134 = _134; this._62 = _62; this._44 = _44; this._254 = _254; this._174 = _174; this._351 = _351; this._82 = _82; this._494 = _494; this._154 = _154; this._370 = _370; this._348 = _348; this._501 = _501; this._147 = _147; this._146 = _146; this._75 = _75; this._508 = _508; this._295 = _295; this._207 = _207; this._71 = _71; this._143 = _143 } var _125 = new _802(window); var _24 = new _803(window); var _9 = new _804(window, Math, JSON); var _18 = new _805(_9); var _159 = new _806(_5, _397, _426); var _243 = (typeof _460 === 'function') ? new _460(_5, _9) : { _161: function () { } }; var _135 = (typeof _807 === 'function') ? new _807(window, _5, _125, _24, _9, _243, _18) : { _48: function () { }, _68: function () { }, _411: function () { }, _935: function () { }, _431: function () { } }; var _420 = (typeof _510 === 'function') ? new _510(_5) : { _148: function () { } }; function _10(_123, _14) { _14 = (typeof _14 !== 'undefined' ? _14 : ''); if (_5.debug) console.log('MF' + (_5.includeDebugTime ? ' - ' + _14 : '') + ': ' + _123) } var _443 = new _808(window, _125, _24, _9, _18, _5); var _266 = new _809(window, _5, _125, _9, _18, _159); function _99() { return undefined } function _449() { return null } function _519() { return false } var shouldRecord = false; if (_5.privacyToolEnabled) { _443._48(_157, _5._50, _5._217, _5._218, _5._317, _10) } else if (_5.liveHeatmapsEnabled) { _266._48(_5._50, _10) } else if (typeof _447 === 'function') { window.mouseflow = new _447(window, Math, _5, _24, _9, _243, _18, _159, _135, _420, _10); shouldRecord = true } if (!shouldRecord) { window.mouseflow = { start: _99, stop: function () { if (_5.privacyToolEnabled) _443._68(); else if (_5.liveHeatmapsEnabled) _266._68() }, newPageView: function (_28) { if (_5.liveHeatmapsEnabled) _266._535({ url: _28 }) }, stopSession: _99, getSessionId: _449, getPageViewId: _449, tag: _99, star: _99, setVariable: _99, identify: _99, formSubmitAttempt: _99, formSubmitSuccess: _99, formSubmitFailure: _99, addFriction: _99, isRecording: _519, isReturningUser: _519, activateFeedback: _99, proxyAttachShadow: _99, recordingRate: null, version: null } } window.mouseflow.websiteId = _5._50; window.mouseflow.gdprEnabled = _5.gdprEnabled; window.mouseflow.updateHeatmap = _266._535; window.mouseflow.config = function () { return arguments.length === 1 ? _5[arguments[0]] : _5._333.apply(_5, arguments) }; window.mouseflow.debug = function () { _5.debug = !_5.debug; console.log('MF: Debugging ' + (_5.debug ? 'enabled' : 'disabled')) }
    })()
}